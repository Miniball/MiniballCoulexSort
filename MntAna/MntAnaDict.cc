//
// File generated by rootcint at Fri Sep 15 02:00:41 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MntAnaDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MntAnaDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::hists hists;
      #else
      class hists  {
         public:
         //friend XX;
         ::TH1F* p; //
         ::TH1F* r; //
         ::TH1F* d; //
         ::TH1F* pmr; //
         ::TH1F* dmr; //
         ::TH1F* pB; //
         ::TH1F* rB; //
         ::TH1F* pBmrB; //
         ::TH1F* pT; //
         ::TH1F* rT; //
         ::TH1F* pTmrT; //
         ::TH1F* p_1B; //
         ::TH1F* r_1B; //
         ::TH1F* p_1T; //
         ::TH1F* r_1T; //
         ::TH1F* p_2h; //
         ::TH1F* r_2h; //
         ::TH2F* gg; //
         ::TH2F* gg_p; //
         ::TH2F* gd; //
         ::TH2F* dd; //
         ::TH2F* gg_dcT; //
         ::TH2F* gg_dcB; //
         ::TH1F* gg_td; //
         ::TH1F* ge_td; //
         ::TH1F* gd_td; //
         ::TH1F* gcor_size; //
         ::TH1F* B_dcB; //
         ::TH1F* B_dcT; //
         ::TH1F* B_1hdcB; //
         ::TH1F* B_1hdcT; //
         ::TH1F* T_dcT; //
         ::TH1F* T_dcB; //
         ::TH1F* T_1hdcT; //
         ::TH1F* T_1hdcB; //
         ::TH1F* T_dcB_x[16]; //
         ::TH1F* T_dcT_x[16]; //
         ::TH1F* B_dcB_x[16]; //
         ::TH1F* B_dcT_x[16]; //
         ::TH1F* gam_dcB; //
         ::TH1F* gam_dcT; //
         ::TH1F* T_2hdcB; //
         ::TH1F* T_2hdcT; //
         ::TH2F* part; //
         ::TH2F* part1h; //
         ::TH2F* part2h; //
         ::TH2F* partQ[4]; //
         ::TH2F* part_ann; //
         ::TH2F* Bh; //
         ::TH2F* Th; //
         ::TH2F* B1h; //
         ::TH2F* T1h; //
         ::TH2F* B2h; //
         ::TH2F* T2h; //
         ::TH2F* Bhhigh; //
         ::TH2F* Bhlow; //
         ::TH2F* Thhigh; //
         ::TH2F* Thlow; //
         ::TH1F* target_ev; //
         ::TH1F* target_1pev; //
         ::TH1F* target_2pev; //
         ::TH2F* Bsim; //
         ::TH2F* Tsim; //
         ::TH2F* en2hit; //
         ::TH1F* sum2hit; //
         ::TH2F* cdpic; //
         ::TH1F* multp; //
         ::TH1F* multr; //
         ::TH1F* GeReject; //
         ::TH1F* GePass; //
         ::TH1F* GeRatio; //
         ::TH2F* GeAng; //
         ::TH1F* tdiff; //
         float tegate[4]; //Energy gates for tdiff spectra
         ::TH1F* tdiffE[4]; //
         ::TH1F* tdiffQ[4]; //Energy and Quadrant gated
         ::TH1F* tppdiff; //
         ::TH2F* tpp; //
         ::TH1F* tQQ[2]; //
         double ppwin; //
         int maxrecoil; //
         int minrecoil; //
         double cd_angles[17]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MBGeometry MBGeometry;
      #else
      class MBGeometry  {
         public:
         //friend XX;
         double theta; //deg
         double phi; //deg
         double alpha; //deg
         double r; //mm
         ::TVector3 seg_offset[18]; //
         ::TVector3 det_offset[3]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SpedeGeometry SpedeGeometry;
      #else
      class SpedeGeometry  {
         public:
         //friend XX;
         double r; //mm
         double alpha; //deg
         ::TVector3 seg_spede[24]; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void mbevts_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_mbevts(void *p = 0);
   static void *newArray_mbevts(Long_t size, void *p);
   static void delete_mbevts(void *p);
   static void deleteArray_mbevts(void *p);
   static void destruct_mbevts(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::mbevts*)
   {
      ::mbevts *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::mbevts >(0);
      static ::ROOT::TGenericClassInfo 
         instance("mbevts", ::mbevts::Class_Version(), "./../mbevts/mbevts.hh", 9,
                  typeid(::mbevts), ::ROOT::DefineBehavior(ptr, ptr),
                  &::mbevts::Dictionary, isa_proxy, 4,
                  sizeof(::mbevts) );
      instance.SetNew(&new_mbevts);
      instance.SetNewArray(&newArray_mbevts);
      instance.SetDelete(&delete_mbevts);
      instance.SetDeleteArray(&deleteArray_mbevts);
      instance.SetDestructor(&destruct_mbevts);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::mbevts*)
   {
      return GenerateInitInstanceLocal((::mbevts*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::mbevts*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void g_clx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_g_clx(void *p = 0);
   static void *newArray_g_clx(Long_t size, void *p);
   static void delete_g_clx(void *p);
   static void deleteArray_g_clx(void *p);
   static void destruct_g_clx(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::g_clx*)
   {
      ::g_clx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::g_clx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("g_clx", ::g_clx::Class_Version(), "./g_clx.hh", 43,
                  typeid(::g_clx), ::ROOT::DefineBehavior(ptr, ptr),
                  &::g_clx::Dictionary, isa_proxy, 4,
                  sizeof(::g_clx) );
      instance.SetNew(&new_g_clx);
      instance.SetNewArray(&newArray_g_clx);
      instance.SetDelete(&delete_g_clx);
      instance.SetDeleteArray(&deleteArray_g_clx);
      instance.SetDestructor(&destruct_g_clx);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::g_clx*)
   {
      return GenerateInitInstanceLocal((::g_clx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::g_clx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void doppler_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_doppler(void *p = 0);
   static void *newArray_doppler(Long_t size, void *p);
   static void delete_doppler(void *p);
   static void deleteArray_doppler(void *p);
   static void destruct_doppler(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::doppler*)
   {
      ::doppler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::doppler >(0);
      static ::ROOT::TGenericClassInfo 
         instance("doppler", ::doppler::Class_Version(), "./doppler.hh", 27,
                  typeid(::doppler), ::ROOT::DefineBehavior(ptr, ptr),
                  &::doppler::Dictionary, isa_proxy, 4,
                  sizeof(::doppler) );
      instance.SetNew(&new_doppler);
      instance.SetNewArray(&newArray_doppler);
      instance.SetDelete(&delete_doppler);
      instance.SetDeleteArray(&deleteArray_doppler);
      instance.SetDestructor(&destruct_doppler);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::doppler*)
   {
      return GenerateInitInstanceLocal((::doppler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::doppler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void hists_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void hists_Dictionary();
   static void *new_hists(void *p = 0);
   static void *newArray_hists(Long_t size, void *p);
   static void delete_hists(void *p);
   static void deleteArray_hists(void *p);
   static void destruct_hists(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::hists*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::hists) == sizeof( ::ROOTShadow::Shadow::hists));
      ::hists *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::hists),0);
      static ::ROOT::TGenericClassInfo 
         instance("hists", "./hists.hh", 26,
                  typeid(::hists), ::ROOT::DefineBehavior(ptr, ptr),
                  &hists_ShowMembers, &hists_Dictionary, isa_proxy, 4,
                  sizeof(::hists) );
      instance.SetNew(&new_hists);
      instance.SetNewArray(&newArray_hists);
      instance.SetDelete(&delete_hists);
      instance.SetDeleteArray(&deleteArray_hists);
      instance.SetDestructor(&destruct_hists);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::hists*)
   {
      return GenerateInitInstanceLocal((::hists*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::hists*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void hists_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::hists*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void MBGeometry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MBGeometry_Dictionary();
   static void *new_MBGeometry(void *p = 0);
   static void *newArray_MBGeometry(Long_t size, void *p);
   static void delete_MBGeometry(void *p);
   static void deleteArray_MBGeometry(void *p);
   static void destruct_MBGeometry(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MBGeometry*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MBGeometry) == sizeof( ::ROOTShadow::Shadow::MBGeometry));
      ::MBGeometry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MBGeometry),0);
      static ::ROOT::TGenericClassInfo 
         instance("MBGeometry", "./MBGeometry.hh", 24,
                  typeid(::MBGeometry), ::ROOT::DefineBehavior(ptr, ptr),
                  &MBGeometry_ShowMembers, &MBGeometry_Dictionary, isa_proxy, 4,
                  sizeof(::MBGeometry) );
      instance.SetNew(&new_MBGeometry);
      instance.SetNewArray(&newArray_MBGeometry);
      instance.SetDelete(&delete_MBGeometry);
      instance.SetDeleteArray(&deleteArray_MBGeometry);
      instance.SetDestructor(&destruct_MBGeometry);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MBGeometry*)
   {
      return GenerateInitInstanceLocal((::MBGeometry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MBGeometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MBGeometry_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::MBGeometry*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SpedeGeometry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SpedeGeometry_Dictionary();
   static void *new_SpedeGeometry(void *p = 0);
   static void *newArray_SpedeGeometry(Long_t size, void *p);
   static void delete_SpedeGeometry(void *p);
   static void deleteArray_SpedeGeometry(void *p);
   static void destruct_SpedeGeometry(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SpedeGeometry*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SpedeGeometry) == sizeof( ::ROOTShadow::Shadow::SpedeGeometry));
      ::SpedeGeometry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::SpedeGeometry),0);
      static ::ROOT::TGenericClassInfo 
         instance("SpedeGeometry", "./SpedeGeometry.hh", 21,
                  typeid(::SpedeGeometry), ::ROOT::DefineBehavior(ptr, ptr),
                  &SpedeGeometry_ShowMembers, &SpedeGeometry_Dictionary, isa_proxy, 4,
                  sizeof(::SpedeGeometry) );
      instance.SetNew(&new_SpedeGeometry);
      instance.SetNewArray(&newArray_SpedeGeometry);
      instance.SetDelete(&delete_SpedeGeometry);
      instance.SetDeleteArray(&deleteArray_SpedeGeometry);
      instance.SetDestructor(&destruct_SpedeGeometry);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SpedeGeometry*)
   {
      return GenerateInitInstanceLocal((::SpedeGeometry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SpedeGeometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SpedeGeometry_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SpedeGeometry*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr mbevts::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *mbevts::Class_Name()
{
   return "mbevts";
}

//______________________________________________________________________________
const char *mbevts::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::mbevts*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mbevts::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::mbevts*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mbevts::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::mbevts*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mbevts::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::mbevts*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr g_clx::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *g_clx::Class_Name()
{
   return "g_clx";
}

//______________________________________________________________________________
const char *g_clx::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::g_clx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int g_clx::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::g_clx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void g_clx::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::g_clx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *g_clx::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::g_clx*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr doppler::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *doppler::Class_Name()
{
   return "doppler";
}

//______________________________________________________________________________
const char *doppler::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::doppler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int doppler::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::doppler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void doppler::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::doppler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *doppler::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::doppler*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOTDict {
   void MBGeometry_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MBGeometry.
      typedef ::ROOTShadow::Shadow::MBGeometry ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::MBGeometry*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &sobj->theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &sobj->phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &sobj->alpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &sobj->r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seg_offset[18]", sobj->seg_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det_offset[3]", sobj->det_offset);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MBGeometry(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MBGeometry : new ::MBGeometry;
   }
   static void *newArray_MBGeometry(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MBGeometry[nElements] : new ::MBGeometry[nElements];
   }
   // Wrapper around operator delete
   static void delete_MBGeometry(void *p) {
      delete ((::MBGeometry*)p);
   }
   static void deleteArray_MBGeometry(void *p) {
      delete [] ((::MBGeometry*)p);
   }
   static void destruct_MBGeometry(void *p) {
      typedef ::MBGeometry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MBGeometry

//______________________________________________________________________________
namespace ROOTDict {
   void SpedeGeometry_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SpedeGeometry.
      typedef ::ROOTShadow::Shadow::SpedeGeometry ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SpedeGeometry*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &sobj->r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &sobj->alpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seg_spede[24]", sobj->seg_spede);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SpedeGeometry(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SpedeGeometry : new ::SpedeGeometry;
   }
   static void *newArray_SpedeGeometry(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SpedeGeometry[nElements] : new ::SpedeGeometry[nElements];
   }
   // Wrapper around operator delete
   static void delete_SpedeGeometry(void *p) {
      delete ((::SpedeGeometry*)p);
   }
   static void deleteArray_SpedeGeometry(void *p) {
      delete [] ((::SpedeGeometry*)p);
   }
   static void destruct_SpedeGeometry(void *p) {
      typedef ::SpedeGeometry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SpedeGeometry

//______________________________________________________________________________
namespace ROOTDict {
   void hists_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class hists.
      typedef ::ROOTShadow::Shadow::hists ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::hists*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p", &sobj->p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*r", &sobj->r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*d", &sobj->d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pmr", &sobj->pmr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dmr", &sobj->dmr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pB", &sobj->pB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rB", &sobj->rB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pBmrB", &sobj->pBmrB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pT", &sobj->pT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rT", &sobj->rT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pTmrT", &sobj->pTmrT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_1B", &sobj->p_1B);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*r_1B", &sobj->r_1B);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_1T", &sobj->p_1T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*r_1T", &sobj->r_1T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_2h", &sobj->p_2h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*r_2h", &sobj->r_2h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gg", &sobj->gg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gg_p", &sobj->gg_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gd", &sobj->gd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dd", &sobj->dd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gg_dcT", &sobj->gg_dcT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gg_dcB", &sobj->gg_dcB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gg_td", &sobj->gg_td);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ge_td", &sobj->ge_td);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gd_td", &sobj->gd_td);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gcor_size", &sobj->gcor_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B_dcB", &sobj->B_dcB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B_dcT", &sobj->B_dcT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B_1hdcB", &sobj->B_1hdcB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B_1hdcT", &sobj->B_1hdcT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_dcT", &sobj->T_dcT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_dcB", &sobj->T_dcB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_1hdcT", &sobj->T_1hdcT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_1hdcB", &sobj->T_1hdcB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_dcB_x[16]", &sobj->T_dcB_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_dcT_x[16]", &sobj->T_dcT_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B_dcB_x[16]", &sobj->B_dcB_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B_dcT_x[16]", &sobj->B_dcT_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gam_dcB", &sobj->gam_dcB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gam_dcT", &sobj->gam_dcT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_2hdcB", &sobj->T_2hdcB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_2hdcT", &sobj->T_2hdcT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part", &sobj->part);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part1h", &sobj->part1h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part2h", &sobj->part2h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*partQ[4]", &sobj->partQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_ann", &sobj->part_ann);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Bh", &sobj->Bh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Th", &sobj->Th);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B1h", &sobj->B1h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T1h", &sobj->T1h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*B2h", &sobj->B2h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T2h", &sobj->T2h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Bhhigh", &sobj->Bhhigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Bhlow", &sobj->Bhlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Thhigh", &sobj->Thhigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Thlow", &sobj->Thlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*target_ev", &sobj->target_ev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*target_1pev", &sobj->target_1pev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*target_2pev", &sobj->target_2pev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Bsim", &sobj->Bsim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Tsim", &sobj->Tsim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*en2hit", &sobj->en2hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sum2hit", &sobj->sum2hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cdpic", &sobj->cdpic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*multp", &sobj->multp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*multr", &sobj->multr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeReject", &sobj->GeReject);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GePass", &sobj->GePass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeRatio", &sobj->GeRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GeAng", &sobj->GeAng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tdiff", &sobj->tdiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tegate[4]", sobj->tegate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tdiffE[4]", &sobj->tdiffE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tdiffQ[4]", &sobj->tdiffQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tppdiff", &sobj->tppdiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tpp", &sobj->tpp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tQQ[2]", &sobj->tQQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppwin", &sobj->ppwin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxrecoil", &sobj->maxrecoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minrecoil", &sobj->minrecoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cd_angles[17]", sobj->cd_angles);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_hists(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hists : new ::hists;
   }
   static void *newArray_hists(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::hists[nElements] : new ::hists[nElements];
   }
   // Wrapper around operator delete
   static void delete_hists(void *p) {
      delete ((::hists*)p);
   }
   static void deleteArray_hists(void *p) {
      delete [] ((::hists*)p);
   }
   static void destruct_hists(void *p) {
      typedef ::hists current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::hists

//______________________________________________________________________________
void doppler::Streamer(TBuffer &R__b)
{
   // Stream an object of class doppler.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(doppler::Class(),this);
   } else {
      R__b.WriteClassBuffer(doppler::Class(),this);
   }
}

//______________________________________________________________________________
void doppler::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class doppler.
      TClass *R__cl = ::doppler::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_doppler(void *p) {
      return  p ? new(p) ::doppler : new ::doppler;
   }
   static void *newArray_doppler(Long_t nElements, void *p) {
      return p ? new(p) ::doppler[nElements] : new ::doppler[nElements];
   }
   // Wrapper around operator delete
   static void delete_doppler(void *p) {
      delete ((::doppler*)p);
   }
   static void deleteArray_doppler(void *p) {
      delete [] ((::doppler*)p);
   }
   static void destruct_doppler(void *p) {
      typedef ::doppler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::doppler

//______________________________________________________________________________
void mbevts::Streamer(TBuffer &R__b)
{
   // Stream an object of class mbevts.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(mbevts::Class(),this);
   } else {
      R__b.WriteClassBuffer(mbevts::Class(),this);
   }
}

//______________________________________________________________________________
void mbevts::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class mbevts.
      TClass *R__cl = ::mbevts::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gen", &gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cid", &cid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sid", &sid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cluid", &cluid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tha", &tha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pha", &pha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_gen", (void*)&gcor_gen);
      R__insp.InspectMember("vector<double>", (void*)&gcor_gen, "gcor_gen.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_cid", (void*)&gcor_cid);
      R__insp.InspectMember("vector<int>", (void*)&gcor_cid, "gcor_cid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_sid", (void*)&gcor_sid);
      R__insp.InspectMember("vector<int>", (void*)&gcor_sid, "gcor_sid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_cluid", (void*)&gcor_cluid);
      R__insp.InspectMember("vector<int>", (void*)&gcor_cluid, "gcor_cluid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_tha", (void*)&gcor_tha);
      R__insp.InspectMember("vector<double>", (void*)&gcor_tha, "gcor_tha.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_pha", (void*)&gcor_pha);
      R__insp.InspectMember("vector<double>", (void*)&gcor_pha, "gcor_pha.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_gtd", (void*)&gcor_gtd);
      R__insp.InspectMember("vector<double>", (void*)&gcor_gtd, "gcor_gtd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pen", (void*)&pen);
      R__insp.InspectMember("vector<double>", (void*)&pen, "pen.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", (void*)&time);
      R__insp.InspectMember("vector<double>", (void*)&time, "time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sst", (void*)&sst);
      R__insp.InspectMember("vector<double>", (void*)&sst, "sst.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "td", (void*)&td);
      R__insp.InspectMember("vector<double>", (void*)&td, "td.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ann", (void*)&ann);
      R__insp.InspectMember("vector<int>", (void*)&ann, "ann.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sec", (void*)&sec);
      R__insp.InspectMember("vector<int>", (void*)&sec, "sec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det", (void*)&det);
      R__insp.InspectMember("vector<int>", (void*)&det, "det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coin", (void*)&coin);
      R__insp.InspectMember("vector<int>", (void*)&coin, "coin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "laser", &laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pr_hits", &pr_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rndm_hits", &rndm_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "del_hits", &del_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pr_ptr", (void*)&pr_ptr);
      R__insp.InspectMember("vector<int>", (void*)&pr_ptr, "pr_ptr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rndm_ptr", (void*)&rndm_ptr);
      R__insp.InspectMember("vector<int>", (void*)&rndm_ptr, "rndm_ptr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "del_ptr", (void*)&del_ptr);
      R__insp.InspectMember("vector<int>", (void*)&del_ptr, "del_ptr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file", &file);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_mbevts(void *p) {
      return  p ? new(p) ::mbevts : new ::mbevts;
   }
   static void *newArray_mbevts(Long_t nElements, void *p) {
      return p ? new(p) ::mbevts[nElements] : new ::mbevts[nElements];
   }
   // Wrapper around operator delete
   static void delete_mbevts(void *p) {
      delete ((::mbevts*)p);
   }
   static void deleteArray_mbevts(void *p) {
      delete [] ((::mbevts*)p);
   }
   static void destruct_mbevts(void *p) {
      typedef ::mbevts current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::mbevts

//______________________________________________________________________________
void g_clx::Streamer(TBuffer &R__b)
{
   // Stream an object of class g_clx.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(g_clx::Class(),this);
   } else {
      R__b.WriteClassBuffer(g_clx::Class(),this);
   }
}

//______________________________________________________________________________
void g_clx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class g_clx.
      TClass *R__cl = ::g_clx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUniqueID", &fUniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBits", &fBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gen", &gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cid", &cid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sid", &sid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cluid", &cluid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tha", &tha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pha", &pha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_gen", (void*)&gcor_gen);
      R__insp.InspectMember("vector<double>", (void*)&gcor_gen, "gcor_gen.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_cid", (void*)&gcor_cid);
      R__insp.InspectMember("vector<int>", (void*)&gcor_cid, "gcor_cid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_sid", (void*)&gcor_sid);
      R__insp.InspectMember("vector<int>", (void*)&gcor_sid, "gcor_sid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_cluid", (void*)&gcor_cluid);
      R__insp.InspectMember("vector<int>", (void*)&gcor_cluid, "gcor_cluid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_tha", (void*)&gcor_tha);
      R__insp.InspectMember("vector<double>", (void*)&gcor_tha, "gcor_tha.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_pha", (void*)&gcor_pha);
      R__insp.InspectMember("vector<double>", (void*)&gcor_pha, "gcor_pha.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gcor_gtd", (void*)&gcor_gtd);
      R__insp.InspectMember("vector<double>", (void*)&gcor_gtd, "gcor_gtd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pen", (void*)&pen);
      R__insp.InspectMember("vector<double>", (void*)&pen, "pen.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", (void*)&time);
      R__insp.InspectMember("vector<double>", (void*)&time, "time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sst", (void*)&sst);
      R__insp.InspectMember("vector<double>", (void*)&sst, "sst.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "td", (void*)&td);
      R__insp.InspectMember("vector<double>", (void*)&td, "td.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ann", (void*)&ann);
      R__insp.InspectMember("vector<int>", (void*)&ann, "ann.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sec", (void*)&sec);
      R__insp.InspectMember("vector<int>", (void*)&sec, "sec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "det", (void*)&det);
      R__insp.InspectMember("vector<int>", (void*)&det, "det.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coin", (void*)&coin);
      R__insp.InspectMember("vector<int>", (void*)&coin, "coin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "laser", &laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pr_hits", &pr_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rndm_hits", &rndm_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "del_hits", &del_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pr_ptr", (void*)&pr_ptr);
      R__insp.InspectMember("vector<int>", (void*)&pr_ptr, "pr_ptr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rndm_ptr", (void*)&rndm_ptr);
      R__insp.InspectMember("vector<int>", (void*)&rndm_ptr, "rndm_ptr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "del_ptr", (void*)&del_ptr);
      R__insp.InspectMember("vector<int>", (void*)&del_ptr, "del_ptr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file", &file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaEnergy", &GammaEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_fUniqueID", &b_mbevts_fUniqueID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_fBits", &b_mbevts_fBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gen", &b_mbevts_gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_cid", &b_mbevts_cid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_sid", &b_mbevts_sid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_cluid", &b_mbevts_cluid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_tha", &b_mbevts_tha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_pha", &b_mbevts_pha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gcor_gen", &b_mbevts_gcor_gen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gcor_cid", &b_mbevts_gcor_cid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gcor_sid", &b_mbevts_gcor_sid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gcor_cluid", &b_mbevts_gcor_cluid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gcor_tha", &b_mbevts_gcor_tha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gcor_pha", &b_mbevts_gcor_pha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_gcor_gtd", &b_mbevts_gcor_gtd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_pen", &b_mbevts_pen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_time", &b_mbevts_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_sst", &b_mbevts_sst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_td", &b_mbevts_td);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_ann", &b_mbevts_ann);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_sec", &b_mbevts_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_det", &b_mbevts_det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_coin", &b_mbevts_coin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_laser", &b_mbevts_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_pr_hits", &b_mbevts_pr_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_rndm_hits", &b_mbevts_rndm_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_del_hits", &b_mbevts_del_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_pr_ptr", &b_mbevts_pr_ptr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_rndm_ptr", &b_mbevts_rndm_ptr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_del_ptr", &b_mbevts_del_ptr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mbevts_file", &b_mbevts_file);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_g_clx(void *p) {
      return  p ? new(p) ::g_clx : new ::g_clx;
   }
   static void *newArray_g_clx(Long_t nElements, void *p) {
      return p ? new(p) ::g_clx[nElements] : new ::g_clx[nElements];
   }
   // Wrapper around operator delete
   static void delete_g_clx(void *p) {
      delete ((::g_clx*)p);
   }
   static void deleteArray_g_clx(void *p) {
      delete [] ((::g_clx*)p);
   }
   static void destruct_g_clx(void *p) {
      typedef ::g_clx current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::g_clx

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* MntAnaDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMntAnaDict();

extern "C" void G__set_cpp_environmentMntAnaDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("g_clx.hh");
  G__add_compiledheader("../mbevts/mbevts.hh");
  G__add_compiledheader("doppler.hh");
  G__add_compiledheader("hists.hh");
  G__add_compiledheader("MBGeometry.hh");
  G__add_compiledheader("SpedeGeometry.hh");
  G__cpp_reset_tagtableMntAnaDict();
}
#include <new>
extern "C" int G__cpp_dllrevMntAnaDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* mbevts */
static int G__MntAnaDict_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetGen((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCluid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetSid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCorGamGen((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCorGamTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCorGamPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCorGamCluid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCorGamCid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCorGamSid((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetCorGamGtd((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SetPart(
(double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->SearchCoin();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->CopyData((mbevts*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((mbevts*) G__getstructoffset())->GetCluid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((mbevts*) G__getstructoffset())->GetCid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((mbevts*) G__getstructoffset())->GetSid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mbevts*) G__getstructoffset())->GetGen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mbevts*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mbevts*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((mbevts*) G__getstructoffset())->GetPen((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((mbevts*) G__getstructoffset())->GetNrParts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((mbevts*) G__getstructoffset())->GetSec((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((mbevts*) G__getstructoffset())->GetAnn((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) mbevts::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mbevts::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) mbevts::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      mbevts::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mbevts*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mbevts::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mbevts::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mbevts::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_633_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mbevts::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MntAnaDict_633_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mbevts *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mbevts[n];
     } else {
       p = new((void*) gvp) mbevts[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mbevts;
     } else {
       p = new((void*) gvp) mbevts;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_mbevts));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MntAnaDict_633_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   mbevts* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new mbevts(*(mbevts*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_mbevts));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef mbevts G__Tmbevts;
static int G__MntAnaDict_633_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (mbevts*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((mbevts*) (soff+(sizeof(mbevts)*i)))->~G__Tmbevts();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (mbevts*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((mbevts*) (soff))->~G__Tmbevts();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MntAnaDict_633_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mbevts* dest = (mbevts*) G__getstructoffset();
   *dest = *(mbevts*) libp->para[0].ref;
   const mbevts& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* g_clx */
static int G__MntAnaDict_638_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g_clx* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new g_clx((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) g_clx((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new g_clx[n];
       } else {
         p = new((void*) gvp) g_clx[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new g_clx;
       } else {
         p = new((void*) gvp) g_clx;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_g_clx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((g_clx*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((g_clx*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g_clx*) G__getstructoffset())->Init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g_clx*) G__getstructoffset())->Loop(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((g_clx*) G__getstructoffset())->Show((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((g_clx*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) g_clx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g_clx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) g_clx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      g_clx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g_clx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g_clx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g_clx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g_clx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_638_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g_clx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MntAnaDict_638_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   g_clx* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new g_clx(*(g_clx*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_g_clx));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef g_clx G__Tg_clx;
static int G__MntAnaDict_638_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (g_clx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((g_clx*) (soff+(sizeof(g_clx)*i)))->~G__Tg_clx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (g_clx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((g_clx*) (soff))->~G__Tg_clx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MntAnaDict_638_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g_clx* dest = (g_clx*) G__getstructoffset();
   *dest = *(g_clx*) libp->para[0].ref;
   const g_clx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* doppler */
static int G__MntAnaDict_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) doppler::Cut((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) doppler::Cut_2p((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) doppler::CutG_en2hit((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetTarDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetPTh((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) doppler::GetPPhi((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) doppler::GetPPhi((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetTTh((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetBTh((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetQPhi((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetTEn((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetBEn((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GetELoss((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((string*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::GammaAng((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::DC((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) doppler::DC_elec(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) doppler::stoppingpowers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, *((string*) G__int(libp->para[4]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = doppler::convertInt((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = doppler::convertFloat((float) G__double(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) doppler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) doppler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) doppler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      doppler::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((doppler*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) doppler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) doppler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) doppler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_641_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) doppler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MntAnaDict_641_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   doppler *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new doppler[n];
     } else {
       p = new((void*) gvp) doppler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new doppler;
     } else {
       p = new((void*) gvp) doppler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_doppler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MntAnaDict_641_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   doppler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new doppler(*(doppler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_doppler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef doppler G__Tdoppler;
static int G__MntAnaDict_641_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (doppler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((doppler*) (soff+(sizeof(doppler)*i)))->~G__Tdoppler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (doppler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((doppler*) (soff))->~G__Tdoppler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MntAnaDict_641_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   doppler* dest = (doppler*) G__getstructoffset();
   *dest = *(doppler*) libp->para[0].ref;
   const doppler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* hists */
static int G__MntAnaDict_670_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hists*) G__getstructoffset())->Initialise();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hists*) G__getstructoffset())->Set_ppwin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hists*) G__getstructoffset())->Set_maxrecoil((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hists*) G__getstructoffset())->Set_minrecoil((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      ((hists*) G__getstructoffset())->Fill1h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (bool) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (double) G__double(libp->para[13]));
      G__setnull(result7);
      break;
   case 13:
      ((hists*) G__getstructoffset())->Fill1h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (bool) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 16:
      ((hists*) G__getstructoffset())->Fill2h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (bool) G__int(libp->para[8]), *((vector<double>*) G__int(libp->para[9]))
, *((vector<int>*) G__int(libp->para[10])), *((vector<int>*) G__int(libp->para[11]))
, *((vector<int>*) G__int(libp->para[12])), *((vector<int>*) G__int(libp->para[13]))
, *((vector<double>*) G__int(libp->para[14])), (double) G__double(libp->para[15]));
      G__setnull(result7);
      break;
   case 15:
      ((hists*) G__getstructoffset())->Fill2h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (bool) G__int(libp->para[8]), *((vector<double>*) G__int(libp->para[9]))
, *((vector<int>*) G__int(libp->para[10])), *((vector<int>*) G__int(libp->para[11]))
, *((vector<int>*) G__int(libp->para[12])), *((vector<int>*) G__int(libp->para[13]))
, *((vector<double>*) G__int(libp->para[14])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      ((hists*) G__getstructoffset())->FillDelayed(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (bool) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (double) G__double(libp->para[13]));
      G__setnull(result7);
      break;
   case 13:
      ((hists*) G__getstructoffset())->FillDelayed(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (bool) G__int(libp->para[8]), (double) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((hists*) G__getstructoffset())->FillGam1h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((hists*) G__getstructoffset())->FillGam1h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((hists*) G__getstructoffset())->FillGam2h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<int>*) G__int(libp->para[4])), *((vector<int>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((hists*) G__getstructoffset())->FillGam2h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<int>*) G__int(libp->para[4])), *((vector<int>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      ((hists*) G__getstructoffset())->FillGamGam1h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (double) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (double) G__double(libp->para[13]));
      G__setnull(result7);
      break;
   case 13:
      ((hists*) G__getstructoffset())->FillGamGam1h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, (double) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 15:
      ((hists*) G__getstructoffset())->FillGamGam2h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, *((vector<double>*) G__int(libp->para[8])), *((vector<int>*) G__int(libp->para[9]))
, *((vector<int>*) G__int(libp->para[10])), *((vector<int>*) G__int(libp->para[11]))
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (double) G__double(libp->para[14]));
      G__setnull(result7);
      break;
   case 14:
      ((hists*) G__getstructoffset())->FillGamGam2h(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<int>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, *((vector<double>*) G__int(libp->para[8])), *((vector<int>*) G__int(libp->para[9]))
, *((vector<int>*) G__int(libp->para[10])), *((vector<int>*) G__int(libp->para[11]))
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((hists*) G__getstructoffset())->FillPar1h((double) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((hists*) G__getstructoffset())->FillPar1h((double) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((hists*) G__getstructoffset())->FillPar2h(
*((vector<double>*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1]))
, *((vector<int>*) G__int(libp->para[2])), *((vector<int>*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((hists*) G__getstructoffset())->FillPar2h(*((vector<double>*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1]))
, *((vector<int>*) G__int(libp->para[2])), *((vector<int>*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((hists*) G__getstructoffset())->PhiCalHists(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((hists*) G__getstructoffset())->PhiCalHists(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hists*) G__getstructoffset())->AddSpectra((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MntAnaDict_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hists *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hists[n];
     } else {
       p = new((void*) gvp) hists[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hists;
     } else {
       p = new((void*) gvp) hists;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_hists));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MntAnaDict_670_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   hists* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new hists(*(hists*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_hists));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef hists G__Thists;
static int G__MntAnaDict_670_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (hists*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((hists*) (soff+(sizeof(hists)*i)))->~G__Thists();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (hists*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((hists*) (soff))->~G__Thists();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MntAnaDict_670_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hists* dest = (hists*) G__getstructoffset();
   *dest = *(hists*) libp->para[0].ref;
   const hists& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MBGeometry */
static int G__MntAnaDict_706_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBGeometry* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBGeometry[n];
     } else {
       p = new((void*) gvp) MBGeometry[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MBGeometry;
     } else {
       p = new((void*) gvp) MBGeometry;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_MBGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBGeometry*) G__getstructoffset())->SetupCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBGeometry*) G__getstructoffset())->SetupCluster((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBGeometry*) G__getstructoffset())->SetCluTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBGeometry*) G__getstructoffset())->SetCluPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBGeometry*) G__getstructoffset())->SetCluAlpha((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MBGeometry*) G__getstructoffset())->SetCluR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MBGeometry*) G__getstructoffset())->GetCoreTheta((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MBGeometry*) G__getstructoffset())->GetCorePhi((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MBGeometry*) G__getstructoffset())->GetSegTheta((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_706_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MBGeometry*) G__getstructoffset())->GetSegPhi((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MntAnaDict_706_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MBGeometry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MBGeometry(*(MBGeometry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_MBGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MBGeometry G__TMBGeometry;
static int G__MntAnaDict_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MBGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MBGeometry*) (soff+(sizeof(MBGeometry)*i)))->~G__TMBGeometry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MBGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MBGeometry*) (soff))->~G__TMBGeometry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MntAnaDict_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MBGeometry* dest = (MBGeometry*) G__getstructoffset();
   *dest = *(MBGeometry*) libp->para[0].ref;
   const MBGeometry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SpedeGeometry */
static int G__MntAnaDict_707_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SpedeGeometry* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SpedeGeometry[n];
     } else {
       p = new((void*) gvp) SpedeGeometry[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SpedeGeometry;
     } else {
       p = new((void*) gvp) SpedeGeometry;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_SpedeGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_707_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SpedeGeometry*) G__getstructoffset())->SetupSpede();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_707_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SpedeGeometry*) G__getstructoffset())->SetupSpede((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_707_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SpedeGeometry*) G__getstructoffset())->SetSpedeR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_707_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SpedeGeometry*) G__getstructoffset())->SetSpedeAlpha((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_707_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SpedeGeometry*) G__getstructoffset())->GetSpedeTheta((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MntAnaDict_707_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SpedeGeometry*) G__getstructoffset())->GetSpedePhi((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MntAnaDict_707_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SpedeGeometry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SpedeGeometry(*(SpedeGeometry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MntAnaDictLN_SpedeGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SpedeGeometry G__TSpedeGeometry;
static int G__MntAnaDict_707_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SpedeGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SpedeGeometry*) (soff+(sizeof(SpedeGeometry)*i)))->~G__TSpedeGeometry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SpedeGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SpedeGeometry*) (soff))->~G__TSpedeGeometry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MntAnaDict_707_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SpedeGeometry* dest = (SpedeGeometry*) G__getstructoffset();
   *dest = *(SpedeGeometry*) libp->para[0].ref;
   const SpedeGeometry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* mbevts */

/* g_clx */

/* doppler */

/* hists */

/* MBGeometry */

/* SpedeGeometry */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMntAnaDict {
 public:
  G__Sizep2memfuncMntAnaDict(): p(&G__Sizep2memfuncMntAnaDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMntAnaDict::*p)();
};

size_t G__get_sizep2memfuncMntAnaDict()
{
  G__Sizep2memfuncMntAnaDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMntAnaDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MntAnaDictLN_mbevts))) {
     mbevts *G__Lderived;
     G__Lderived=(mbevts*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MntAnaDictLN_mbevts),G__get_linked_tagnum(&G__MntAnaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MntAnaDictLN_g_clx))) {
     g_clx *G__Lderived;
     G__Lderived=(g_clx*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MntAnaDictLN_g_clx),G__get_linked_tagnum(&G__MntAnaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MntAnaDictLN_doppler))) {
     doppler *G__Lderived;
     G__Lderived=(doppler*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MntAnaDictLN_doppler),G__get_linked_tagnum(&G__MntAnaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMntAnaDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MntAnaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MntAnaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MntAnaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MntAnaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MntAnaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MntAnaDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* mbevts */
static void G__setup_memvarmbevts(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MntAnaDictLN_mbevts));
   { mbevts *p; p=(mbevts*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->gen)-(long)(p)),100,0,0,-1,-1,-1,1,"gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cid)-(long)(p)),105,0,0,-1,-1,-1,1,"cid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sid)-(long)(p)),105,0,0,-1,-1,-1,1,"sid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cluid)-(long)(p)),105,0,0,-1,-1,-1,1,"cluid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tha)-(long)(p)),100,0,0,-1,-1,-1,1,"tha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pha)-(long)(p)),100,0,0,-1,-1,-1,1,"pha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_cid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"gcor_cid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_sid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"gcor_sid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_cluid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"gcor_cluid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_tha)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_tha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_pha)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_pha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_gtd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_gtd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sst)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"sst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->td)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"td=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ann)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ann=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"sec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"det=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"coin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->laser)-(long)(p)),105,0,0,-1,-1,-1,1,"laser=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pr_hits)-(long)(p)),105,0,0,-1,-1,-1,1,"pr_hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rndm_hits)-(long)(p)),105,0,0,-1,-1,-1,1,"rndm_hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->del_hits)-(long)(p)),105,0,0,-1,-1,-1,1,"del_hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pr_ptr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"pr_ptr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rndm_ptr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"rndm_ptr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->del_ptr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"del_ptr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->file)-(long)(p)),105,0,0,-1,-1,-1,1,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* g_clx */
static void G__setup_memvarg_clx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MntAnaDictLN_g_clx));
   { g_clx *p; p=(g_clx*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->fUniqueID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fUniqueID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBits)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fBits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gen)-(long)(p)),100,0,0,-1,-1,-1,1,"gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cid)-(long)(p)),105,0,0,-1,-1,-1,1,"cid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sid)-(long)(p)),105,0,0,-1,-1,-1,1,"sid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cluid)-(long)(p)),105,0,0,-1,-1,-1,1,"cluid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tha)-(long)(p)),100,0,0,-1,-1,-1,1,"tha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pha)-(long)(p)),100,0,0,-1,-1,-1,1,"pha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_cid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"gcor_cid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_sid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"gcor_sid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_cluid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"gcor_cluid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_tha)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_tha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_pha)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_pha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_gtd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"gcor_gtd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sst)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"sst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->td)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"td=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ann)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"ann=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"sec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->det)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"det=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"coin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->laser)-(long)(p)),105,0,0,-1,-1,-1,1,"laser=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pr_hits)-(long)(p)),105,0,0,-1,-1,-1,1,"pr_hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rndm_hits)-(long)(p)),105,0,0,-1,-1,-1,1,"rndm_hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->del_hits)-(long)(p)),105,0,0,-1,-1,-1,1,"del_hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pr_ptr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"pr_ptr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rndm_ptr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"rndm_ptr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->del_ptr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"del_ptr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->file)-(long)(p)),105,0,0,-1,-1,-1,1,"file=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GammaEnergy)-(long)(p)),100,0,0,-1,-1,-1,1,"GammaEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_mbevts_fUniqueID)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_fUniqueID=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_fBits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_fBits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gen=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_cid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_cid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_sid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_sid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_cluid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_cluid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_tha)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_tha=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_pha)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_pha=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gcor_gen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gcor_gen=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gcor_cid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gcor_cid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gcor_sid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gcor_sid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gcor_cluid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gcor_cluid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gcor_tha)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gcor_tha=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gcor_pha)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gcor_pha=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_gcor_gtd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_gcor_gtd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_pen)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_pen=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_time)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_time=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_sst)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_sst=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_td)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_td=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_ann)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_ann=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_sec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_sec=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_det)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_det=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_coin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_coin=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_laser)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_laser=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_pr_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_pr_hits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_rndm_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_rndm_hits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_del_hits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_del_hits=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_pr_ptr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_pr_ptr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_rndm_ptr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_rndm_ptr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_del_ptr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_del_ptr=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mbevts_file)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TBranch),-1,-1,1,"b_mbevts_file=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* doppler */
static void G__setup_memvardoppler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MntAnaDictLN_doppler));
   { doppler *p; p=(doppler*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TRandom3),-1,-2,4,"rand=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,4,"BTELoss_pars[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,4,"TTELoss_pars[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,4,"BSELoss_pars[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,4,"TSELoss_pars[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_string),-1,-2,4,"gElName[110]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,4,"gates[64][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* hists */
static void G__setup_memvarhists(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MntAnaDictLN_hists));
   { hists *p; p=(hists*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"r=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"d=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pmr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"pmr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dmr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"dmr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"pB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"rB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pBmrB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"pBmrB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"pT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"rT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pTmrT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"pTmrT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_1B)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"p_1B=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r_1B)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"r_1B=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_1T)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"p_1T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r_1T)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"r_1T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_2h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"p_2h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r_2h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"r_2h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"gg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gg_p)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"gg_p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"gd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"dd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gg_dcT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"gg_dcT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gg_dcB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"gg_dcB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gg_td)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"gg_td=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ge_td)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"ge_td=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gd_td)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"gd_td=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gcor_size)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"gcor_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B_dcB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"B_dcB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B_dcT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"B_dcT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B_1hdcB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"B_1hdcB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B_1hdcT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"B_1hdcT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_dcT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_dcT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_dcB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_dcB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_1hdcT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_1hdcT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_1hdcB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_1hdcB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_dcB_x)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_dcB_x[16]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_dcT_x)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_dcT_x[16]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B_dcB_x)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"B_dcB_x[16]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B_dcT_x)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"B_dcT_x[16]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gam_dcB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"gam_dcB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gam_dcT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"gam_dcT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_2hdcB)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_2hdcB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T_2hdcT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"T_2hdcT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->part)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"part=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->part1h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"part1h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->part2h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"part2h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partQ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"partQ[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->part_ann)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"part_ann=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bh)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Bh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Th)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Th=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B1h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"B1h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T1h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"T1h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B2h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"B2h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T2h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"T2h=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bhhigh)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Bhhigh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bhlow)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Bhlow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Thhigh)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Thhigh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Thlow)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Thlow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->target_ev)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"target_ev=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->target_1pev)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"target_1pev=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->target_2pev)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"target_2pev=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Bsim)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Bsim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tsim)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"Tsim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->en2hit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"en2hit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sum2hit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"sum2hit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cdpic)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"cdpic=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->multp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"multp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->multr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"multr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeReject)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"GeReject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GePass)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"GePass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeRatio)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"GeRatio=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeAng)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"GeAng=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdiff)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"tdiff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tegate)-(long)(p)),102,0,0,-1,-1,-1,1,"tegate[4]=",0,"Energy gates for tdiff spectra");
   G__memvar_setup((void*)((long)(&p->tdiffE)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"tdiffE[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdiffQ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"tdiffQ[4]=",0,"Energy and Quadrant gated");
   G__memvar_setup((void*)((long)(&p->tppdiff)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"tppdiff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH2F),-1,-1,1,"tpp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tQQ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TH1F),-1,-1,1,"tQQ[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ppwin)-(long)(p)),100,0,0,-1,-1,-1,1,"ppwin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxrecoil)-(long)(p)),105,0,0,-1,-1,-1,1,"maxrecoil=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->minrecoil)-(long)(p)),105,0,0,-1,-1,-1,1,"minrecoil=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cd_angles)-(long)(p)),100,0,0,-1,-1,-1,1,"cd_angles[17]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MBGeometry */
static void G__setup_memvarMBGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MntAnaDictLN_MBGeometry));
   { MBGeometry *p; p=(MBGeometry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"theta=",0,"deg");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi=",0,"deg");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpha=",0,"deg");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"r=",0,"mm");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TVector3),-1,-1,4,"seg_offset[18]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TVector3),-1,-1,4,"det_offset[3]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SpedeGeometry */
static void G__setup_memvarSpedeGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MntAnaDictLN_SpedeGeometry));
   { SpedeGeometry *p; p=(SpedeGeometry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"r=",0,"mm");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpha=",0,"deg");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MntAnaDictLN_TVector3),-1,-1,4,"seg_spede[24]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMntAnaDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmbevts(void) {
   /* mbevts */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MntAnaDictLN_mbevts));
   G__memfunc_setup("Initialize",1042,G__MntAnaDict_633_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGen",582,G__MntAnaDict_633_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__MntAnaDict_633_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__MntAnaDict_633_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCluid",797,G__MntAnaDict_633_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCid",572,G__MntAnaDict_633_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSid",588,G__MntAnaDict_633_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorGamGen",1151,G__MntAnaDict_633_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorGamTheta",1371,G__MntAnaDict_633_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorGamPhi",1158,G__MntAnaDict_633_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorGamCluid",1366,G__MntAnaDict_633_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorGamCid",1141,G__MntAnaDict_633_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorGamSid",1157,G__MntAnaDict_633_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorGamGtd",1156,G__MntAnaDict_633_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - td", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPart",707,G__MntAnaDict_633_0_15, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - - 0 - en i - - 0 - a "
"i - - 0 - s d - - 0 - t "
"d - - 0 - ss d - - 0 - ctd "
"i - - 0 - co i - - 0 - quad "
"i - - 0 - laserflag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SearchCoin",991,G__MntAnaDict_633_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyData",789,G__MntAnaDict_633_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'mbevts' - 0 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCluid",785,G__MntAnaDict_633_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCid",560,G__MntAnaDict_633_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSid",576,G__MntAnaDict_633_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGen",570,G__MntAnaDict_633_0_21, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__MntAnaDict_633_0_22, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__MntAnaDict_633_0_23, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPen",579,G__MntAnaDict_633_0_24, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrParts",1002,G__MntAnaDict_633_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSec",571,G__MntAnaDict_633_0_26, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnn",573,G__MntAnaDict_633_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MntAnaDict_633_0_28, 85, G__get_linked_tagnum(&G__MntAnaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&mbevts::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MntAnaDict_633_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&mbevts::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MntAnaDict_633_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&mbevts::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MntAnaDict_633_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&mbevts::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MntAnaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MntAnaDict_633_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MntAnaDict_633_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&mbevts::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MntAnaDict_633_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&mbevts::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MntAnaDict_633_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&mbevts::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MntAnaDict_633_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&mbevts::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("mbevts", 657, G__MntAnaDict_633_0_40, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_mbevts), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("mbevts", 657, G__MntAnaDict_633_0_41, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_mbevts), -1, 0, 1, 1, 1, 0, "u 'mbevts' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~mbevts", 783, G__MntAnaDict_633_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MntAnaDict_633_0_43, (int) ('u'), G__get_linked_tagnum(&G__MntAnaDictLN_mbevts), -1, 1, 1, 1, 1, 0, "u 'mbevts' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncg_clx(void) {
   /* g_clx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MntAnaDictLN_g_clx));
   G__memfunc_setup("g_clx",525,G__MntAnaDict_638_0_1, 105, G__get_linked_tagnum(&G__MntAnaDictLN_g_clx), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__MntAnaDict_638_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__MntAnaDict_638_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__MntAnaDict_638_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__MntAnaDict_638_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - outputfilename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__MntAnaDict_638_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MntAnaDict_638_0_8, 85, G__get_linked_tagnum(&G__MntAnaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&g_clx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MntAnaDict_638_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g_clx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MntAnaDict_638_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&g_clx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MntAnaDict_638_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&g_clx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MntAnaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MntAnaDict_638_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MntAnaDict_638_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g_clx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MntAnaDict_638_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g_clx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MntAnaDict_638_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g_clx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MntAnaDict_638_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g_clx::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("g_clx", 525, G__MntAnaDict_638_0_20, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_g_clx), -1, 0, 1, 1, 1, 0, "u 'g_clx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~g_clx", 651, G__MntAnaDict_638_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MntAnaDict_638_0_22, (int) ('u'), G__get_linked_tagnum(&G__MntAnaDictLN_g_clx), -1, 1, 1, 1, 1, 0, "u 'g_clx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdoppler(void) {
   /* doppler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MntAnaDictLN_doppler));
   G__memfunc_setup("Cut",300,G__MntAnaDict_641_0_1, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - PEn d - 'Double_t' 0 - anno "
"i - 'Int_t' 0 - quad", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Int_t))(&doppler::Cut) ), 0);
   G__memfunc_setup("Cut_2p",557,G__MntAnaDict_641_0_2, 105, -1, G__defined_typename("Int_t"), 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - PEn1 d - 'Double_t' 0 - anno1 "
"i - 'Int_t' 0 - quad1 d - 'Double_t' 0 - PEn2 "
"d - 'Double_t' 0 - anno2 i - 'Int_t' 0 - quad2", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Int_t, Double_t, Double_t, Int_t))(&doppler::Cut_2p) ), 0);
   G__memfunc_setup("CutG_en2hit",1052,G__MntAnaDict_641_0_3, 103, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - BEn d - - 0 - TEn", (char*)NULL, (void*) G__func2void( (bool (*)(double, double))(&doppler::CutG_en2hit) ), 0);
   G__memfunc_setup("GetTarDist",987,G__MntAnaDict_641_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&doppler::GetTarDist) ), 0);
   G__memfunc_setup("GetPTh",556,G__MntAnaDict_641_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - anno", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&doppler::GetPTh) ), 0);
   G__memfunc_setup("GetPPhi",657,G__MntAnaDict_641_0_6, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - quad i - 'Int_t' 0 - seg "
"d - 'Double_t' 0 '242.6' offset", "TODO Check this", (void*) G__func2void( (Double_t (*)(Int_t, Int_t, Double_t))(&doppler::GetPPhi) ), 0);
   G__memfunc_setup("GetTTh",560,G__MntAnaDict_641_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - Banno d - 'Double_t' 0 - BEn", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&doppler::GetTTh) ), 0);
   G__memfunc_setup("GetBTh",542,G__MntAnaDict_641_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "d - 'Double_t' 0 - Tanno", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t))(&doppler::GetBTh) ), 0);
   G__memfunc_setup("GetQPhi",658,G__MntAnaDict_641_0_9, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - quad i - 'Int_t' 0 - seg", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, Int_t))(&doppler::GetQPhi) ), 0);
   G__memfunc_setup("GetTEn",551,G__MntAnaDict_641_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - BEn d - 'Double_t' 0 - Banno", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&doppler::GetTEn) ), 0);
   G__memfunc_setup("GetBEn",533,G__MntAnaDict_641_0_11, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - TEn d - 'Double_t' 0 - Tanno", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&doppler::GetBEn) ), 0);
   G__memfunc_setup("GetELoss",774,G__MntAnaDict_641_0_12, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - Ei d - 'Double_t' 0 - dist "
"i - 'Int_t' 0 - opt u 'string' - 0 - combo", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Int_t, string))(&doppler::GetELoss) ), 0);
   G__memfunc_setup("GammaAng",761,G__MntAnaDict_641_0_13, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - PTh d - 'Double_t' 0 - PPhi "
"d - 'Double_t' 0 - GTh d - 'Double_t' 0 - GPhi", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t))(&doppler::GammaAng) ), 0);
   G__memfunc_setup("DC",135,G__MntAnaDict_641_0_14, 100, -1, G__defined_typename("Double_t"), 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - PEn d - 'Double_t' 0 - PTh "
"d - 'Double_t' 0 - PPhi d - 'Double_t' 0 - GTh "
"d - 'Double_t' 0 - GPhi d - 'Double_t' 0 - A", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t))(&doppler::DC) ), 0);
   G__memfunc_setup("DC_elec",639,G__MntAnaDict_641_0_15, 100, -1, G__defined_typename("Double_t"), 0, 7, 3, 1, 0, 
"d - - 0 - een d - - 0 - PEn "
"d - - 0 - PTh d - - 0 - PPhi "
"d - - 0 - GTh d - - 0 - GPhi "
"d - - 0 - A", (char*)NULL, (void*) G__func2void( (Double_t (*)(double, double, double, double, double, double, double))(&doppler::DC_elec) ), 0);
   G__memfunc_setup("stoppingpowers",1556,G__MntAnaDict_641_0_16, 103, -1, -1, 0, 5, 3, 1, 0, 
"i - 'Int_t' 0 - Zp i - 'Int_t' 0 - Zt "
"d - 'Double_t' 0 - Ap d - 'Double_t' 0 - At "
"u 'string' - 0 - opt", (char*)NULL, (void*) G__func2void( (bool (*)(Int_t, Int_t, Double_t, Double_t, string))(&doppler::stoppingpowers) ), 0);
   G__memfunc_setup("convertInt",1068,G__MntAnaDict_641_0_17, 117, G__get_linked_tagnum(&G__MntAnaDictLN_string), -1, 0, 1, 3, 1, 0, "i - - 0 - number", (char*)NULL, (void*) G__func2void( (string (*)(int))(&doppler::convertInt) ), 0);
   G__memfunc_setup("convertFloat",1271,G__MntAnaDict_641_0_18, 117, G__get_linked_tagnum(&G__MntAnaDictLN_string), -1, 0, 1, 3, 1, 0, "f - - 0 - number", (char*)NULL, (void*) G__func2void( (string (*)(float))(&doppler::convertFloat) ), 0);
   G__memfunc_setup("SP_function",1128,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 3, 4, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MntAnaDict_641_0_20, 85, G__get_linked_tagnum(&G__MntAnaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&doppler::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MntAnaDict_641_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&doppler::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MntAnaDict_641_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&doppler::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MntAnaDict_641_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&doppler::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MntAnaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MntAnaDict_641_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MntAnaDict_641_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&doppler::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MntAnaDict_641_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&doppler::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MntAnaDict_641_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&doppler::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MntAnaDict_641_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&doppler::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("doppler", 758, G__MntAnaDict_641_0_32, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_doppler), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("doppler", 758, G__MntAnaDict_641_0_33, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_doppler), -1, 0, 1, 1, 1, 0, "u 'doppler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~doppler", 884, G__MntAnaDict_641_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MntAnaDict_641_0_35, (int) ('u'), G__get_linked_tagnum(&G__MntAnaDictLN_doppler), -1, 1, 1, 1, 1, 0, "u 'doppler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunchists(void) {
   /* hists */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MntAnaDictLN_hists));
   G__memfunc_setup("Initialise",1035,G__MntAnaDict_670_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set_ppwin",953,G__MntAnaDict_670_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - user_ppwin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set_maxrecoil",1359,G__MntAnaDict_670_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - user_maxrecoil", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set_minrecoil",1357,G__MntAnaDict_670_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - user_minrecoil", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill1h",544,G__MntAnaDict_670_0_5, 121, -1, -1, 0, 14, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GEn "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GTh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GPh "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - GCor_GCluID u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_Gtd "
"g - - 0 - electron d - - 0 - PEn "
"i - 'Int_t' 0 - Pann i - 'Int_t' 0 - Psec "
"i - 'Int_t' 0 - Pquad d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill2h",545,G__MntAnaDict_670_0_6, 121, -1, -1, 0, 16, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GEn "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GTh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GPh "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - GCor_GCluID u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_Gtd "
"g - - 0 - electron u 'vector<double,allocator<double> >' 'vector<double>' 0 - PEn "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pann u 'vector<int,allocator<int> >' 'vector<int>' 0 - Psec "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pquad u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pptr "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - td d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillDelayed",1087,G__MntAnaDict_670_0_7, 121, -1, -1, 0, 14, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GEn "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GTh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GPh "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - GCor_GCluID u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_Gtd "
"g - - 0 - electron d - - 0 - PEn "
"i - 'Int_t' 0 - Pann i - 'Int_t' 0 - Psec "
"i - 'Int_t' 0 - Pquad d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillGam1h",821,G__MntAnaDict_670_0_8, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh d - - 0 - PEn "
"i - 'Int_t' 0 - Pann i - 'Int_t' 0 - Psec "
"i - 'Int_t' 0 - Pquad i - 'Int_t' 0 - cut "
"d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillGam2h",822,G__MntAnaDict_670_0_9, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh u 'vector<double,allocator<double> >' 'vector<double>' 0 - PEn "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pann u 'vector<int,allocator<int> >' 'vector<int>' 0 - Psec "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pquad i - 'Int_t' 0 - Bptr "
"i - 'Int_t' 0 - Tptr d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillGamGam1h",1098,G__MntAnaDict_670_0_10, 121, -1, -1, 0, 14, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GEn "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GTh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GPh "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - GCor_GCluID u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_Gtd "
"d - - 0 - PEn i - 'Int_t' 0 - Pann "
"i - 'Int_t' 0 - Psec i - 'Int_t' 0 - Pquad "
"i - 'Int_t' 0 - cut d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillGamGam2h",1099,G__MntAnaDict_670_0_11, 121, -1, -1, 0, 15, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GEn "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GTh u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_GPh "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - GCor_GCluID u 'vector<double,allocator<double> >' 'vector<double>' 0 - GCor_Gtd "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - PEn u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pann "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - Psec u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pquad "
"i - 'Int_t' 0 - Bptr i - 'Int_t' 0 - Tptr "
"d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPar1h",835,G__MntAnaDict_670_0_12, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - PEn i - 'Int_t' 0 - Pann "
"i - 'Int_t' 0 - Psec i - 'Int_t' 0 - Pquad "
"i - 'Int_t' 0 - cut d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPar2h",836,G__MntAnaDict_670_0_13, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - PEn u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pann "
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - Psec u 'vector<int,allocator<int> >' 'vector<int>' 0 - Pquad "
"i - 'Int_t' 0 - Bptr i - 'Int_t' 0 - Tptr "
"d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiCalHists",1084,G__MntAnaDict_670_0_14, 121, -1, -1, 0, 9, 1, 1, 0, 
"d - - 0 - GEn d - - 0 - GTh "
"d - - 0 - GPh d - - 0 - PEn "
"i - 'Int_t' 0 - Pann i - 'Int_t' 0 - Psec "
"i - 'Int_t' 0 - Pquad i - 'Int_t' 0 - cut "
"d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSpectra",987,G__MntAnaDict_670_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - bg_frac d - - 0 - del_frac", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("hists", 555, G__MntAnaDict_670_0_16, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_hists), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("hists", 555, G__MntAnaDict_670_0_17, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_hists), -1, 0, 1, 1, 1, 0, "u 'hists' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~hists", 681, G__MntAnaDict_670_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MntAnaDict_670_0_19, (int) ('u'), G__get_linked_tagnum(&G__MntAnaDictLN_hists), -1, 1, 1, 1, 1, 0, "u 'hists' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMBGeometry(void) {
   /* MBGeometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MntAnaDictLN_MBGeometry));
   G__memfunc_setup("MBGeometry",987,G__MntAnaDict_706_0_1, 105, G__get_linked_tagnum(&G__MntAnaDictLN_MBGeometry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupCluster",1267,G__MntAnaDict_706_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupCluster",1267,G__MntAnaDict_706_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - user_theta d - - 0 - user_phi "
"d - - 0 - user_alpha d - - 0 - user_r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCluTheta",1094,G__MntAnaDict_706_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - user_theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCluPhi",881,G__MntAnaDict_706_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - user_phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCluAlpha",1078,G__MntAnaDict_706_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - user_alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCluR",674,G__MntAnaDict_706_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - user_r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoreTheta",1183,G__MntAnaDict_706_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - core", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorePhi",970,G__MntAnaDict_706_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - core", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegTheta",1077,G__MntAnaDict_706_0_10, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - core i - - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegPhi",864,G__MntAnaDict_706_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - core i - - 0 - seg", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MBGeometry", 987, G__MntAnaDict_706_0_12, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_MBGeometry), -1, 0, 1, 1, 1, 0, "u 'MBGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MBGeometry", 1113, G__MntAnaDict_706_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MntAnaDict_706_0_14, (int) ('u'), G__get_linked_tagnum(&G__MntAnaDictLN_MBGeometry), -1, 1, 1, 1, 1, 0, "u 'MBGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSpedeGeometry(void) {
   /* SpedeGeometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MntAnaDictLN_SpedeGeometry));
   G__memfunc_setup("SpedeGeometry",1341,G__MntAnaDict_707_0_1, 105, G__get_linked_tagnum(&G__MntAnaDictLN_SpedeGeometry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupSpede",1026,G__MntAnaDict_707_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupSpede",1026,G__MntAnaDict_707_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - user_r d - - 0 - user_alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpedeR",879,G__MntAnaDict_707_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - user_r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpedeAlpha",1283,G__MntAnaDict_707_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - user_alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpedeTheta",1287,G__MntAnaDict_707_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpedePhi",1074,G__MntAnaDict_707_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - seg", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SpedeGeometry", 1341, G__MntAnaDict_707_0_8, (int) ('i'), G__get_linked_tagnum(&G__MntAnaDictLN_SpedeGeometry), -1, 0, 1, 1, 1, 0, "u 'SpedeGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SpedeGeometry", 1467, G__MntAnaDict_707_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MntAnaDict_707_0_10, (int) ('u'), G__get_linked_tagnum(&G__MntAnaDictLN_SpedeGeometry), -1, 1, 1, 1, 1, 0, "u 'SpedeGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMntAnaDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMntAnaDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMntAnaDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MntAnaDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MntAnaDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_mbevts = { "mbevts" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_g_clx = { "g_clx" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_doppler = { "doppler" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_hists = { "hists" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_MBGeometry = { "MBGeometry" , 99 , -1 };
G__linked_taginfo G__MntAnaDictLN_SpedeGeometry = { "SpedeGeometry" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMntAnaDict() {
  G__MntAnaDictLN_TClass.tagnum = -1 ;
  G__MntAnaDictLN_TBuffer.tagnum = -1 ;
  G__MntAnaDictLN_TMemberInspector.tagnum = -1 ;
  G__MntAnaDictLN_TObject.tagnum = -1 ;
  G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__MntAnaDictLN_string.tagnum = -1 ;
  G__MntAnaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MntAnaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MntAnaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MntAnaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MntAnaDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__MntAnaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MntAnaDictLN_TH1F.tagnum = -1 ;
  G__MntAnaDictLN_TTree.tagnum = -1 ;
  G__MntAnaDictLN_TBranch.tagnum = -1 ;
  G__MntAnaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MntAnaDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MntAnaDictLN_mbevts.tagnum = -1 ;
  G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MntAnaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MntAnaDictLN_g_clx.tagnum = -1 ;
  G__MntAnaDictLN_TRandom3.tagnum = -1 ;
  G__MntAnaDictLN_doppler.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MntAnaDictLN_TH2F.tagnum = -1 ;
  G__MntAnaDictLN_hists.tagnum = -1 ;
  G__MntAnaDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MntAnaDictLN_TVector3.tagnum = -1 ;
  G__MntAnaDictLN_MBGeometry.tagnum = -1 ;
  G__MntAnaDictLN_SpedeGeometry.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMntAnaDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_string);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TVectorTlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MntAnaDictLN_mbevts),sizeof(mbevts),-1,290816,(char*)NULL,G__setup_memvarmbevts,G__setup_memfuncmbevts);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MntAnaDictLN_g_clx),sizeof(g_clx),-1,292096,(char*)NULL,G__setup_memvarg_clx,G__setup_memfuncg_clx);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TRandom3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MntAnaDictLN_doppler),sizeof(doppler),-1,290816,(char*)NULL,G__setup_memvardoppler,G__setup_memfuncdoppler);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MntAnaDictLN_hists),sizeof(hists),-1,262144,(char*)NULL,G__setup_memvarhists,G__setup_memfunchists);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MntAnaDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MntAnaDictLN_MBGeometry),sizeof(MBGeometry),-1,263424,(char*)NULL,G__setup_memvarMBGeometry,G__setup_memfuncMBGeometry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MntAnaDictLN_SpedeGeometry),sizeof(SpedeGeometry),-1,263424,(char*)NULL,G__setup_memvarSpedeGeometry,G__setup_memfuncSpedeGeometry);
}
extern "C" void G__cpp_setupMntAnaDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMntAnaDict()");
  G__set_cpp_environmentMntAnaDict();
  G__cpp_setup_tagtableMntAnaDict();

  G__cpp_setup_inheritanceMntAnaDict();

  G__cpp_setup_typetableMntAnaDict();

  G__cpp_setup_memvarMntAnaDict();

  G__cpp_setup_memfuncMntAnaDict();
  G__cpp_setup_globalMntAnaDict();
  G__cpp_setup_funcMntAnaDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMntAnaDict();
  return;
}
class G__cpp_setup_initMntAnaDict {
  public:
    G__cpp_setup_initMntAnaDict() { G__add_setup_func("MntAnaDict",(G__incsetup)(&G__cpp_setupMntAnaDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMntAnaDict() { G__remove_setup_func("MntAnaDict"); }
};
G__cpp_setup_initMntAnaDict G__cpp_setup_initializerMntAnaDict;

