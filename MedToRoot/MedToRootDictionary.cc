//
// File generated by rootcint at Fri Aug  4 14:19:04 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MedToRootDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MedToRootDictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void GlobalSettings_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GlobalSettings(void *p = 0);
   static void *newArray_GlobalSettings(Long_t size, void *p);
   static void delete_GlobalSettings(void *p);
   static void deleteArray_GlobalSettings(void *p);
   static void destruct_GlobalSettings(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GlobalSettings*)
   {
      ::GlobalSettings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GlobalSettings >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GlobalSettings", ::GlobalSettings::Class_Version(), "./GlobalSettings.hh", 20,
                  typeid(::GlobalSettings), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GlobalSettings::Dictionary, isa_proxy, 4,
                  sizeof(::GlobalSettings) );
      instance.SetNew(&new_GlobalSettings);
      instance.SetNewArray(&newArray_GlobalSettings);
      instance.SetDelete(&delete_GlobalSettings);
      instance.SetDeleteArray(&deleteArray_GlobalSettings);
      instance.SetDestructor(&destruct_GlobalSettings);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GlobalSettings*)
   {
      return GenerateInitInstanceLocal((::GlobalSettings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GlobalSettings*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DgfSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DgfSubEvent(void *p = 0);
   static void *newArray_DgfSubEvent(Long_t size, void *p);
   static void delete_DgfSubEvent(void *p);
   static void deleteArray_DgfSubEvent(void *p);
   static void destruct_DgfSubEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DgfSubEvent*)
   {
      ::DgfSubEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DgfSubEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DgfSubEvent", ::DgfSubEvent::Class_Version(), "./SubEvents.hh", 16,
                  typeid(::DgfSubEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DgfSubEvent::Dictionary, isa_proxy, 4,
                  sizeof(::DgfSubEvent) );
      instance.SetNew(&new_DgfSubEvent);
      instance.SetNewArray(&newArray_DgfSubEvent);
      instance.SetDelete(&delete_DgfSubEvent);
      instance.SetDeleteArray(&deleteArray_DgfSubEvent);
      instance.SetDestructor(&destruct_DgfSubEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DgfSubEvent*)
   {
      return GenerateInitInstanceLocal((::DgfSubEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DgfSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AdcSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AdcSubEvent(void *p = 0);
   static void *newArray_AdcSubEvent(Long_t size, void *p);
   static void delete_AdcSubEvent(void *p);
   static void deleteArray_AdcSubEvent(void *p);
   static void destruct_AdcSubEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AdcSubEvent*)
   {
      ::AdcSubEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AdcSubEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AdcSubEvent", ::AdcSubEvent::Class_Version(), "./SubEvents.hh", 162,
                  typeid(::AdcSubEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AdcSubEvent::Dictionary, isa_proxy, 4,
                  sizeof(::AdcSubEvent) );
      instance.SetNew(&new_AdcSubEvent);
      instance.SetNewArray(&newArray_AdcSubEvent);
      instance.SetDelete(&delete_AdcSubEvent);
      instance.SetDeleteArray(&deleteArray_AdcSubEvent);
      instance.SetDestructor(&destruct_AdcSubEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AdcSubEvent*)
   {
      return GenerateInitInstanceLocal((::AdcSubEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AdcSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PatternUnitSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PatternUnitSubEvent(void *p = 0);
   static void *newArray_PatternUnitSubEvent(Long_t size, void *p);
   static void delete_PatternUnitSubEvent(void *p);
   static void deleteArray_PatternUnitSubEvent(void *p);
   static void destruct_PatternUnitSubEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PatternUnitSubEvent*)
   {
      ::PatternUnitSubEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PatternUnitSubEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PatternUnitSubEvent", ::PatternUnitSubEvent::Class_Version(), "./SubEvents.hh", 258,
                  typeid(::PatternUnitSubEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PatternUnitSubEvent::Dictionary, isa_proxy, 4,
                  sizeof(::PatternUnitSubEvent) );
      instance.SetNew(&new_PatternUnitSubEvent);
      instance.SetNewArray(&newArray_PatternUnitSubEvent);
      instance.SetDelete(&delete_PatternUnitSubEvent);
      instance.SetDeleteArray(&deleteArray_PatternUnitSubEvent);
      instance.SetDestructor(&destruct_PatternUnitSubEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PatternUnitSubEvent*)
   {
      return GenerateInitInstanceLocal((::PatternUnitSubEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PatternUnitSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ScalerSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ScalerSubEvent(void *p = 0);
   static void *newArray_ScalerSubEvent(Long_t size, void *p);
   static void delete_ScalerSubEvent(void *p);
   static void deleteArray_ScalerSubEvent(void *p);
   static void destruct_ScalerSubEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ScalerSubEvent*)
   {
      ::ScalerSubEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ScalerSubEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ScalerSubEvent", ::ScalerSubEvent::Class_Version(), "./SubEvents.hh", 296,
                  typeid(::ScalerSubEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ScalerSubEvent::Dictionary, isa_proxy, 4,
                  sizeof(::ScalerSubEvent) );
      instance.SetNew(&new_ScalerSubEvent);
      instance.SetNewArray(&newArray_ScalerSubEvent);
      instance.SetDelete(&delete_ScalerSubEvent);
      instance.SetDeleteArray(&deleteArray_ScalerSubEvent);
      instance.SetDestructor(&destruct_ScalerSubEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ScalerSubEvent*)
   {
      return GenerateInitInstanceLocal((::ScalerSubEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ScalerSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DgfScalerSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DgfScalerSubEvent(void *p = 0);
   static void *newArray_DgfScalerSubEvent(Long_t size, void *p);
   static void delete_DgfScalerSubEvent(void *p);
   static void deleteArray_DgfScalerSubEvent(void *p);
   static void destruct_DgfScalerSubEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DgfScalerSubEvent*)
   {
      ::DgfScalerSubEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DgfScalerSubEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DgfScalerSubEvent", ::DgfScalerSubEvent::Class_Version(), "./SubEvents.hh", 353,
                  typeid(::DgfScalerSubEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DgfScalerSubEvent::Dictionary, isa_proxy, 4,
                  sizeof(::DgfScalerSubEvent) );
      instance.SetNew(&new_DgfScalerSubEvent);
      instance.SetNewArray(&newArray_DgfScalerSubEvent);
      instance.SetDelete(&delete_DgfScalerSubEvent);
      instance.SetDeleteArray(&deleteArray_DgfScalerSubEvent);
      instance.SetDestructor(&destruct_DgfScalerSubEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DgfScalerSubEvent*)
   {
      return GenerateInitInstanceLocal((::DgfScalerSubEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DgfScalerSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BraggChamberSubEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BraggChamberSubEvent(void *p = 0);
   static void *newArray_BraggChamberSubEvent(Long_t size, void *p);
   static void delete_BraggChamberSubEvent(void *p);
   static void deleteArray_BraggChamberSubEvent(void *p);
   static void destruct_BraggChamberSubEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BraggChamberSubEvent*)
   {
      ::BraggChamberSubEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BraggChamberSubEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BraggChamberSubEvent", ::BraggChamberSubEvent::Class_Version(), "./SubEvents.hh", 575,
                  typeid(::BraggChamberSubEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BraggChamberSubEvent::Dictionary, isa_proxy, 4,
                  sizeof(::BraggChamberSubEvent) );
      instance.SetNew(&new_BraggChamberSubEvent);
      instance.SetNewArray(&newArray_BraggChamberSubEvent);
      instance.SetDelete(&delete_BraggChamberSubEvent);
      instance.SetDeleteArray(&deleteArray_BraggChamberSubEvent);
      instance.SetDestructor(&destruct_BraggChamberSubEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BraggChamberSubEvent*)
   {
      return GenerateInitInstanceLocal((::BraggChamberSubEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BraggChamberSubEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AdcData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AdcData(void *p = 0);
   static void *newArray_AdcData(Long_t size, void *p);
   static void delete_AdcData(void *p);
   static void deleteArray_AdcData(void *p);
   static void destruct_AdcData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AdcData*)
   {
      ::AdcData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AdcData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AdcData", ::AdcData::Class_Version(), "./Datas.hh", 10,
                  typeid(::AdcData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AdcData::Dictionary, isa_proxy, 4,
                  sizeof(::AdcData) );
      instance.SetNew(&new_AdcData);
      instance.SetNewArray(&newArray_AdcData);
      instance.SetDelete(&delete_AdcData);
      instance.SetDeleteArray(&deleteArray_AdcData);
      instance.SetDestructor(&destruct_AdcData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AdcData*)
   {
      return GenerateInitInstanceLocal((::AdcData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AdcData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DgfData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DgfData(void *p = 0);
   static void *newArray_DgfData(Long_t size, void *p);
   static void delete_DgfData(void *p);
   static void deleteArray_DgfData(void *p);
   static void destruct_DgfData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DgfData*)
   {
      ::DgfData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DgfData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DgfData", ::DgfData::Class_Version(), "./Datas.hh", 38,
                  typeid(::DgfData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DgfData::Dictionary, isa_proxy, 4,
                  sizeof(::DgfData) );
      instance.SetNew(&new_DgfData);
      instance.SetNewArray(&newArray_DgfData);
      instance.SetDelete(&delete_DgfData);
      instance.SetDeleteArray(&deleteArray_DgfData);
      instance.SetDestructor(&destruct_DgfData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DgfData*)
   {
      return GenerateInitInstanceLocal((::DgfData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DgfData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BuiltEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BuiltEvent(void *p = 0);
   static void *newArray_BuiltEvent(Long_t size, void *p);
   static void delete_BuiltEvent(void *p);
   static void deleteArray_BuiltEvent(void *p);
   static void destruct_BuiltEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BuiltEvent*)
   {
      ::BuiltEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BuiltEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BuiltEvent", ::BuiltEvent::Class_Version(), "./BuiltEvent.hh", 14,
                  typeid(::BuiltEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BuiltEvent::Dictionary, isa_proxy, 4,
                  sizeof(::BuiltEvent) );
      instance.SetNew(&new_BuiltEvent);
      instance.SetNewArray(&newArray_BuiltEvent);
      instance.SetDelete(&delete_BuiltEvent);
      instance.SetDeleteArray(&deleteArray_BuiltEvent);
      instance.SetDestructor(&destruct_BuiltEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BuiltEvent*)
   {
      return GenerateInitInstanceLocal((::BuiltEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BuiltEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DgfModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DgfModule(void *p = 0);
   static void *newArray_DgfModule(Long_t size, void *p);
   static void delete_DgfModule(void *p);
   static void deleteArray_DgfModule(void *p);
   static void destruct_DgfModule(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DgfModule*)
   {
      ::DgfModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DgfModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DgfModule", ::DgfModule::Class_Version(), "./Modules.hh", 11,
                  typeid(::DgfModule), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DgfModule::Dictionary, isa_proxy, 4,
                  sizeof(::DgfModule) );
      instance.SetNew(&new_DgfModule);
      instance.SetNewArray(&newArray_DgfModule);
      instance.SetDelete(&delete_DgfModule);
      instance.SetDeleteArray(&deleteArray_DgfModule);
      instance.SetDestructor(&destruct_DgfModule);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DgfModule*)
   {
      return GenerateInitInstanceLocal((::DgfModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DgfModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AdcModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AdcModule(void *p = 0);
   static void *newArray_AdcModule(Long_t size, void *p);
   static void delete_AdcModule(void *p);
   static void deleteArray_AdcModule(void *p);
   static void destruct_AdcModule(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AdcModule*)
   {
      ::AdcModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AdcModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AdcModule", ::AdcModule::Class_Version(), "./Modules.hh", 73,
                  typeid(::AdcModule), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AdcModule::Dictionary, isa_proxy, 4,
                  sizeof(::AdcModule) );
      instance.SetNew(&new_AdcModule);
      instance.SetNewArray(&newArray_AdcModule);
      instance.SetDelete(&delete_AdcModule);
      instance.SetDeleteArray(&deleteArray_AdcModule);
      instance.SetDestructor(&destruct_AdcModule);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AdcModule*)
   {
      return GenerateInitInstanceLocal((::AdcModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AdcModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PatternUnit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PatternUnit(void *p = 0);
   static void *newArray_PatternUnit(Long_t size, void *p);
   static void delete_PatternUnit(void *p);
   static void deleteArray_PatternUnit(void *p);
   static void destruct_PatternUnit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PatternUnit*)
   {
      ::PatternUnit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PatternUnit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PatternUnit", ::PatternUnit::Class_Version(), "./Modules.hh", 128,
                  typeid(::PatternUnit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PatternUnit::Dictionary, isa_proxy, 4,
                  sizeof(::PatternUnit) );
      instance.SetNew(&new_PatternUnit);
      instance.SetNewArray(&newArray_PatternUnit);
      instance.SetDelete(&delete_PatternUnit);
      instance.SetDeleteArray(&deleteArray_PatternUnit);
      instance.SetDestructor(&destruct_PatternUnit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PatternUnit*)
   {
      return GenerateInitInstanceLocal((::PatternUnit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PatternUnit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SISScaler_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SISScaler(void *p = 0);
   static void *newArray_SISScaler(Long_t size, void *p);
   static void delete_SISScaler(void *p);
   static void deleteArray_SISScaler(void *p);
   static void destruct_SISScaler(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SISScaler*)
   {
      ::SISScaler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SISScaler >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SISScaler", ::SISScaler::Class_Version(), "./Modules.hh", 183,
                  typeid(::SISScaler), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SISScaler::Dictionary, isa_proxy, 4,
                  sizeof(::SISScaler) );
      instance.SetNew(&new_SISScaler);
      instance.SetNewArray(&newArray_SISScaler);
      instance.SetDelete(&delete_SISScaler);
      instance.SetDeleteArray(&deleteArray_SISScaler);
      instance.SetDestructor(&destruct_SISScaler);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SISScaler*)
   {
      return GenerateInitInstanceLocal((::SISScaler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SISScaler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DgfScaler_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DgfScaler(void *p = 0);
   static void *newArray_DgfScaler(Long_t size, void *p);
   static void delete_DgfScaler(void *p);
   static void deleteArray_DgfScaler(void *p);
   static void destruct_DgfScaler(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DgfScaler*)
   {
      ::DgfScaler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DgfScaler >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DgfScaler", ::DgfScaler::Class_Version(), "./Modules.hh", 232,
                  typeid(::DgfScaler), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DgfScaler::Dictionary, isa_proxy, 4,
                  sizeof(::DgfScaler) );
      instance.SetNew(&new_DgfScaler);
      instance.SetNewArray(&newArray_DgfScaler);
      instance.SetDelete(&delete_DgfScaler);
      instance.SetDeleteArray(&deleteArray_DgfScaler);
      instance.SetDestructor(&destruct_DgfScaler);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DgfScaler*)
   {
      return GenerateInitInstanceLocal((::DgfScaler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DgfScaler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BraggChamber_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BraggChamber(void *p = 0);
   static void *newArray_BraggChamber(Long_t size, void *p);
   static void delete_BraggChamber(void *p);
   static void deleteArray_BraggChamber(void *p);
   static void destruct_BraggChamber(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BraggChamber*)
   {
      ::BraggChamber *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BraggChamber >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BraggChamber", ::BraggChamber::Class_Version(), "./Modules.hh", 273,
                  typeid(::BraggChamber), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BraggChamber::Dictionary, isa_proxy, 4,
                  sizeof(::BraggChamber) );
      instance.SetNew(&new_BraggChamber);
      instance.SetNewArray(&newArray_BraggChamber);
      instance.SetDelete(&delete_BraggChamber);
      instance.SetDeleteArray(&deleteArray_BraggChamber);
      instance.SetDestructor(&destruct_BraggChamber);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BraggChamber*)
   {
      return GenerateInitInstanceLocal((::BraggChamber*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BraggChamber*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EventBuffer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventBuffer(void *p = 0);
   static void *newArray_EventBuffer(Long_t size, void *p);
   static void delete_EventBuffer(void *p);
   static void deleteArray_EventBuffer(void *p);
   static void destruct_EventBuffer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EventBuffer*)
   {
      ::EventBuffer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventBuffer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventBuffer", ::EventBuffer::Class_Version(), "./EventBuffer.hh", 17,
                  typeid(::EventBuffer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EventBuffer::Dictionary, isa_proxy, 4,
                  sizeof(::EventBuffer) );
      instance.SetNew(&new_EventBuffer);
      instance.SetNewArray(&newArray_EventBuffer);
      instance.SetDelete(&delete_EventBuffer);
      instance.SetDeleteArray(&deleteArray_EventBuffer);
      instance.SetDestructor(&destruct_EventBuffer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EventBuffer*)
   {
      return GenerateInitInstanceLocal((::EventBuffer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventBuffer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void UnpackedEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_UnpackedEvent(void *p = 0);
   static void *newArray_UnpackedEvent(Long_t size, void *p);
   static void delete_UnpackedEvent(void *p);
   static void deleteArray_UnpackedEvent(void *p);
   static void destruct_UnpackedEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::UnpackedEvent*)
   {
      ::UnpackedEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::UnpackedEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("UnpackedEvent", ::UnpackedEvent::Class_Version(), "./UnpackedEvent.hh", 66,
                  typeid(::UnpackedEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::UnpackedEvent::Dictionary, isa_proxy, 4,
                  sizeof(::UnpackedEvent) );
      instance.SetNew(&new_UnpackedEvent);
      instance.SetNewArray(&newArray_UnpackedEvent);
      instance.SetDelete(&delete_UnpackedEvent);
      instance.SetDeleteArray(&deleteArray_UnpackedEvent);
      instance.SetDestructor(&destruct_UnpackedEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::UnpackedEvent*)
   {
      return GenerateInitInstanceLocal((::UnpackedEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::UnpackedEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EventBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventBuilder(void *p = 0);
   static void *newArray_EventBuilder(Long_t size, void *p);
   static void delete_EventBuilder(void *p);
   static void deleteArray_EventBuilder(void *p);
   static void destruct_EventBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EventBuilder*)
   {
      ::EventBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventBuilder", ::EventBuilder::Class_Version(), "./EventBuilder.hh", 19,
                  typeid(::EventBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EventBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::EventBuilder) );
      instance.SetNew(&new_EventBuilder);
      instance.SetNewArray(&newArray_EventBuilder);
      instance.SetDelete(&delete_EventBuilder);
      instance.SetDeleteArray(&deleteArray_EventBuilder);
      instance.SetDestructor(&destruct_EventBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EventBuilder*)
   {
      return GenerateInitInstanceLocal((::EventBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr GlobalSettings::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GlobalSettings::Class_Name()
{
   return "GlobalSettings";
}

//______________________________________________________________________________
const char *GlobalSettings::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GlobalSettings*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GlobalSettings::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GlobalSettings*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GlobalSettings::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GlobalSettings*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GlobalSettings::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GlobalSettings*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DgfSubEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DgfSubEvent::Class_Name()
{
   return "DgfSubEvent";
}

//______________________________________________________________________________
const char *DgfSubEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DgfSubEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DgfSubEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DgfSubEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfSubEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AdcSubEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AdcSubEvent::Class_Name()
{
   return "AdcSubEvent";
}

//______________________________________________________________________________
const char *AdcSubEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AdcSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AdcSubEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AdcSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AdcSubEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AdcSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AdcSubEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AdcSubEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PatternUnitSubEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PatternUnitSubEvent::Class_Name()
{
   return "PatternUnitSubEvent";
}

//______________________________________________________________________________
const char *PatternUnitSubEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnitSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PatternUnitSubEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnitSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PatternUnitSubEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnitSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PatternUnitSubEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnitSubEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ScalerSubEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScalerSubEvent::Class_Name()
{
   return "ScalerSubEvent";
}

//______________________________________________________________________________
const char *ScalerSubEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScalerSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScalerSubEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScalerSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScalerSubEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScalerSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScalerSubEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScalerSubEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DgfScalerSubEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DgfScalerSubEvent::Class_Name()
{
   return "DgfScalerSubEvent";
}

//______________________________________________________________________________
const char *DgfScalerSubEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScalerSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DgfScalerSubEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScalerSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DgfScalerSubEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScalerSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DgfScalerSubEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScalerSubEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BraggChamberSubEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BraggChamberSubEvent::Class_Name()
{
   return "BraggChamberSubEvent";
}

//______________________________________________________________________________
const char *BraggChamberSubEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamberSubEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BraggChamberSubEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamberSubEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BraggChamberSubEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamberSubEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BraggChamberSubEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamberSubEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AdcData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AdcData::Class_Name()
{
   return "AdcData";
}

//______________________________________________________________________________
const char *AdcData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AdcData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AdcData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AdcData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AdcData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AdcData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AdcData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AdcData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DgfData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DgfData::Class_Name()
{
   return "DgfData";
}

//______________________________________________________________________________
const char *DgfData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DgfData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DgfData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DgfData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BuiltEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BuiltEvent::Class_Name()
{
   return "BuiltEvent";
}

//______________________________________________________________________________
const char *BuiltEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BuiltEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BuiltEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BuiltEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BuiltEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BuiltEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BuiltEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BuiltEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DgfModule::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DgfModule::Class_Name()
{
   return "DgfModule";
}

//______________________________________________________________________________
const char *DgfModule::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DgfModule::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DgfModule::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DgfModule::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfModule*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AdcModule::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AdcModule::Class_Name()
{
   return "AdcModule";
}

//______________________________________________________________________________
const char *AdcModule::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AdcModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AdcModule::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AdcModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AdcModule::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AdcModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AdcModule::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AdcModule*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PatternUnit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PatternUnit::Class_Name()
{
   return "PatternUnit";
}

//______________________________________________________________________________
const char *PatternUnit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PatternUnit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PatternUnit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PatternUnit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PatternUnit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SISScaler::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SISScaler::Class_Name()
{
   return "SISScaler";
}

//______________________________________________________________________________
const char *SISScaler::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SISScaler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SISScaler::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SISScaler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SISScaler::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SISScaler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SISScaler::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SISScaler*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DgfScaler::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DgfScaler::Class_Name()
{
   return "DgfScaler";
}

//______________________________________________________________________________
const char *DgfScaler::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScaler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DgfScaler::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScaler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DgfScaler::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScaler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DgfScaler::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DgfScaler*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BraggChamber::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BraggChamber::Class_Name()
{
   return "BraggChamber";
}

//______________________________________________________________________________
const char *BraggChamber::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamber*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BraggChamber::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamber*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BraggChamber::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamber*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BraggChamber::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BraggChamber*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EventBuffer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventBuffer::Class_Name()
{
   return "EventBuffer";
}

//______________________________________________________________________________
const char *EventBuffer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuffer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventBuffer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuffer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventBuffer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuffer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventBuffer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuffer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr UnpackedEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *UnpackedEvent::Class_Name()
{
   return "UnpackedEvent";
}

//______________________________________________________________________________
const char *UnpackedEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UnpackedEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int UnpackedEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UnpackedEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void UnpackedEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UnpackedEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *UnpackedEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UnpackedEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EventBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventBuilder::Class_Name()
{
   return "EventBuilder";
}

//______________________________________________________________________________
const char *EventBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EventBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void BuiltEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class BuiltEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BuiltEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(BuiltEvent::Class(),this);
   }
}

//______________________________________________________________________________
void BuiltEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BuiltEvent.
      TClass *R__cl = ::BuiltEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ebisTime", &ebisTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t1Time", &t1Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "superCycleTime", &superCycleTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventNumber", &eventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subEventNumber", &subEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcData", (void*)&adcData);
      R__insp.InspectMember("vector<AdcData>", (void*)&adcData, "adcData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dgfData", (void*)&dgfData);
      R__insp.InspectMember("vector<DgfData>", (void*)&dgfData, "dgfData.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BuiltEvent(void *p) {
      return  p ? new(p) ::BuiltEvent : new ::BuiltEvent;
   }
   static void *newArray_BuiltEvent(Long_t nElements, void *p) {
      return p ? new(p) ::BuiltEvent[nElements] : new ::BuiltEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_BuiltEvent(void *p) {
      delete ((::BuiltEvent*)p);
   }
   static void deleteArray_BuiltEvent(void *p) {
      delete [] ((::BuiltEvent*)p);
   }
   static void destruct_BuiltEvent(void *p) {
      typedef ::BuiltEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BuiltEvent

//______________________________________________________________________________
void AdcData::Streamer(TBuffer &R__b)
{
   // Stream an object of class AdcData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AdcData::Class(),this);
   } else {
      R__b.WriteClassBuffer(AdcData::Class(),this);
   }
}

//______________________________________________________________________________
void AdcData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AdcData.
      TClass *R__cl = ::AdcData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModuleNumber", &fModuleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLaserOn", &fLaserOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFieldUp", &fFieldUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFieldDown", &fFieldDown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdcSubEvent", &fAdcSubEvent);
      R__insp.InspectMember(fAdcSubEvent, "fAdcSubEvent.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AdcData(void *p) {
      return  p ? new(p) ::AdcData : new ::AdcData;
   }
   static void *newArray_AdcData(Long_t nElements, void *p) {
      return p ? new(p) ::AdcData[nElements] : new ::AdcData[nElements];
   }
   // Wrapper around operator delete
   static void delete_AdcData(void *p) {
      delete ((::AdcData*)p);
   }
   static void deleteArray_AdcData(void *p) {
      delete [] ((::AdcData*)p);
   }
   static void destruct_AdcData(void *p) {
      typedef ::AdcData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AdcData

//______________________________________________________________________________
void DgfData::Streamer(TBuffer &R__b)
{
   // Stream an object of class DgfData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DgfData::Class(),this);
   } else {
      R__b.WriteClassBuffer(DgfData::Class(),this);
   }
}

//______________________________________________________________________________
void DgfData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DgfData.
      TClass *R__cl = ::DgfData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModuleNumber", &fModuleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannel", &fChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventTime", &fEventTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFastTriggerTime", &fFastTriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLongFastTriggerTime", &fLongFastTriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUserValues[6]", fUserValues);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DgfData(void *p) {
      return  p ? new(p) ::DgfData : new ::DgfData;
   }
   static void *newArray_DgfData(Long_t nElements, void *p) {
      return p ? new(p) ::DgfData[nElements] : new ::DgfData[nElements];
   }
   // Wrapper around operator delete
   static void delete_DgfData(void *p) {
      delete ((::DgfData*)p);
   }
   static void deleteArray_DgfData(void *p) {
      delete [] ((::DgfData*)p);
   }
   static void destruct_DgfData(void *p) {
      typedef ::DgfData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DgfData

//______________________________________________________________________________
void EventBuffer::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventBuffer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventBuffer::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventBuffer::Class(),this);
   }
}

//______________________________________________________________________________
void EventBuffer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventBuffer.
      TClass *R__cl = ::EventBuffer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Settings", &Settings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sorted", &Sorted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SubEventNumber", &SubEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BuiltEvents", (void*)&BuiltEvents);
      R__insp.InspectMember("vector<BuiltEvent>", (void*)&BuiltEvents, "BuiltEvents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EventBuffer(void *p) {
      return  p ? new(p) ::EventBuffer : new ::EventBuffer;
   }
   static void *newArray_EventBuffer(Long_t nElements, void *p) {
      return p ? new(p) ::EventBuffer[nElements] : new ::EventBuffer[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventBuffer(void *p) {
      delete ((::EventBuffer*)p);
   }
   static void deleteArray_EventBuffer(void *p) {
      delete [] ((::EventBuffer*)p);
   }
   static void destruct_EventBuffer(void *p) {
      typedef ::EventBuffer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EventBuffer

//______________________________________________________________________________
void EventBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void EventBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventBuilder.
      TClass *R__cl = ::EventBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Settings", &Settings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnBeamFile", &OnBeamFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnBeamTree", &OnBeamTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnBeamEvent", &OnBeamEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnBeamBackgroundFile", &OnBeamBackgroundFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnBeamBackgroundTree", &OnBeamBackgroundTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnBeamBackgroundEvent", &OnBeamBackgroundEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OffBeamFile", &OffBeamFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OffBeamTree", &OffBeamTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OffBeamEvent", &OffBeamEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ScalerFile", &ScalerFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ScalerTree", &ScalerTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScaler", &fScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDgfScaler", &fDgfScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBraggChamber", &fBraggChamber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unpackedEvent", &unpackedEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventBuffer", &eventBuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalNumberOfBytesCommittedToOnBeamTree", &TotalNumberOfBytesCommittedToOnBeamTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalNumberOfBytesCommittedToOnBeamBackgroundTree", &TotalNumberOfBytesCommittedToOnBeamBackgroundTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalNumberOfBytesCommittedToOffBeamTree", &TotalNumberOfBytesCommittedToOffBeamTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalNumberOfBytesCommittedToScalerTree", &TotalNumberOfBytesCommittedToScalerTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfBytesWrittenToOnBeamFile", &NumberOfBytesWrittenToOnBeamFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfBytesWrittenToOnBeamBackgroundFile", &NumberOfBytesWrittenToOnBeamBackgroundFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfBytesWrittenToOffBeamFile", &NumberOfBytesWrittenToOffBeamFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfBytesWrittenToScalerFile", &NumberOfBytesWrittenToScalerFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PatternUnitMismatches", &PatternUnitMismatches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalNumberOfEbisPulses", &TotalNumberOfEbisPulses);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalNumberOfT1Pulses", &TotalNumberOfT1Pulses);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TotalNumberOfSuperCyclePulses", &TotalNumberOfSuperCyclePulses);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EbisTime", &EbisTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T1Time", &T1Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SuperCycleTime", &SuperCycleTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LaserOn", &LaserOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Field", &Field);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FieldUp", &FieldUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FieldDown", &FieldDown);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EventBuilder(void *p) {
      return  p ? new(p) ::EventBuilder : new ::EventBuilder;
   }
   static void *newArray_EventBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::EventBuilder[nElements] : new ::EventBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventBuilder(void *p) {
      delete ((::EventBuilder*)p);
   }
   static void deleteArray_EventBuilder(void *p) {
      delete [] ((::EventBuilder*)p);
   }
   static void destruct_EventBuilder(void *p) {
      typedef ::EventBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EventBuilder

//______________________________________________________________________________
void GlobalSettings::Streamer(TBuffer &R__b)
{
   // Stream an object of class GlobalSettings.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GlobalSettings::Class(),this);
   } else {
      R__b.WriteClassBuffer(GlobalSettings::Class(),this);
   }
}

//______________________________________________________________________________
void GlobalSettings::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GlobalSettings.
      TClass *R__cl = ::GlobalSettings::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMedFile", (void*)&fMedFile);
      R__insp.InspectMember("string", (void*)&fMedFile, "fMedFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOnBeamFile", (void*)&fOnBeamFile);
      R__insp.InspectMember("string", (void*)&fOnBeamFile, "fOnBeamFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOnBeamBackgroundFile", (void*)&fOnBeamBackgroundFile);
      R__insp.InspectMember("string", (void*)&fOnBeamBackgroundFile, "fOnBeamBackgroundFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffBeamFile", (void*)&fOffBeamFile);
      R__insp.InspectMember("string", (void*)&fOffBeamFile, "fOffBeamFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalerFile", (void*)&fScalerFile);
      R__insp.InspectMember("string", (void*)&fScalerFile, "fScalerFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSettingsFile", (void*)&fSettingsFile);
      R__insp.InspectMember("string", (void*)&fSettingsFile, "fSettingsFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSettings", &fSettings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVerboseLevel", &fVerboseLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastEvent", &fLastEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstMiniballDgf", &fFirstMiniballDgf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastMiniballDgf", &fLastMiniballDgf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamdumpDgf", &fBeamdumpDgf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstAdc", &fFirstAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastAdc", &fLastAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBraggChamber", &fBraggChamber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScaler", &fScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPatternUnit", &fPatternUnit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstDgfScaler", &fFirstDgfScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastDgfScaler", &fLastDgfScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoincidenceWindowWidth", &fCoincidenceWindowWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReferencePointOfCoincidenceWindow", &fReferencePointOfCoincidenceWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLowestCoincidence", &fLowestCoincidence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHighestCoincidence", &fHighestCoincidence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfDgfModules", &fNumberOfDgfModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfAdcModules", &fNumberOfAdcModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfPatternUnits", &fNumberOfPatternUnits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfDgfChannels", &fNumberOfDgfChannels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfAdcsPerTimestampModule", &fNumberOfAdcsPerTimestampModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfTimestampModules", &fNumberOfTimestampModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimestampModule", &fTimestampModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimestampModuleOffset", &fTimestampModuleOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestampChannel", &fTimestampChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEbisT1AndSuperCycleModule", &fEbisT1AndSuperCycleModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEbisChannel", &fEbisChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT1Channel", &fT1Channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSuperCycleChannel", &fSuperCycleChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMarabouDgfModuleOffset", &fMarabouDgfModuleOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMarabouAdcModuleOffset", &fMarabouAdcModuleOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMarabouPatternUnitOffset", &fMarabouPatternUnitOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealTimeIndex", &fRealTimeIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunTimeIndex", &fRunTimeIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGSLTTimeIndex", &fGSLTTimeIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfEventsIndex", &fNumberOfEventsIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChannelIndicesOffset", &fChannelIndicesOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLiveTimeIndex", &fLiveTimeIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFastPeakIndex", &fFastPeakIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBraggTraceLength", &fBraggTraceLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSourceRun", &fSourceRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIncludeScaler", &fIncludeScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMesytecAdc", &fMesytecAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSPEDEChamb", &fSPEDEChamb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNofCaenAdc", &fNofCaenAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTypeOfSetup", &fTypeOfSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEbisWindowLowerEdge", &fEbisWindowLowerEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEbisWindowUpperEdge", &fEbisWindowUpperEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDgfInitDelay", &fDgfInitDelay);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GlobalSettings(void *p) {
      return  p ? new(p) ::GlobalSettings : new ::GlobalSettings;
   }
   static void *newArray_GlobalSettings(Long_t nElements, void *p) {
      return p ? new(p) ::GlobalSettings[nElements] : new ::GlobalSettings[nElements];
   }
   // Wrapper around operator delete
   static void delete_GlobalSettings(void *p) {
      delete ((::GlobalSettings*)p);
   }
   static void deleteArray_GlobalSettings(void *p) {
      delete [] ((::GlobalSettings*)p);
   }
   static void destruct_GlobalSettings(void *p) {
      typedef ::GlobalSettings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GlobalSettings

//______________________________________________________________________________
void DgfModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class DgfModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DgfModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(DgfModule::Class(),this);
   }
}

//______________________________________________________________________________
void DgfModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DgfModule.
      TClass *R__cl = ::DgfModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModuleNumber", &fModuleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubEvents", (void*)&fSubEvents);
      R__insp.InspectMember("vector<DgfSubEvent>", (void*)&fSubEvents, "fSubEvents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DgfModule(void *p) {
      return  p ? new(p) ::DgfModule : new ::DgfModule;
   }
   static void *newArray_DgfModule(Long_t nElements, void *p) {
      return p ? new(p) ::DgfModule[nElements] : new ::DgfModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_DgfModule(void *p) {
      delete ((::DgfModule*)p);
   }
   static void deleteArray_DgfModule(void *p) {
      delete [] ((::DgfModule*)p);
   }
   static void destruct_DgfModule(void *p) {
      typedef ::DgfModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DgfModule

//______________________________________________________________________________
void AdcModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class AdcModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AdcModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(AdcModule::Class(),this);
   }
}

//______________________________________________________________________________
void AdcModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AdcModule.
      TClass *R__cl = ::AdcModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ModuleNumber", &ModuleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SubEvents", (void*)&SubEvents);
      R__insp.InspectMember("vector<AdcSubEvent>", (void*)&SubEvents, "SubEvents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AdcModule(void *p) {
      return  p ? new(p) ::AdcModule : new ::AdcModule;
   }
   static void *newArray_AdcModule(Long_t nElements, void *p) {
      return p ? new(p) ::AdcModule[nElements] : new ::AdcModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_AdcModule(void *p) {
      delete ((::AdcModule*)p);
   }
   static void deleteArray_AdcModule(void *p) {
      delete [] ((::AdcModule*)p);
   }
   static void destruct_AdcModule(void *p) {
      typedef ::AdcModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AdcModule

//______________________________________________________________________________
void PatternUnit::Streamer(TBuffer &R__b)
{
   // Stream an object of class PatternUnit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PatternUnit::Class(),this);
   } else {
      R__b.WriteClassBuffer(PatternUnit::Class(),this);
   }
}

//______________________________________________________________________________
void PatternUnit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PatternUnit.
      TClass *R__cl = ::PatternUnit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ModuleNumber", &ModuleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SubEvents", (void*)&SubEvents);
      R__insp.InspectMember("vector<PatternUnitSubEvent>", (void*)&SubEvents, "SubEvents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PatternUnit(void *p) {
      return  p ? new(p) ::PatternUnit : new ::PatternUnit;
   }
   static void *newArray_PatternUnit(Long_t nElements, void *p) {
      return p ? new(p) ::PatternUnit[nElements] : new ::PatternUnit[nElements];
   }
   // Wrapper around operator delete
   static void delete_PatternUnit(void *p) {
      delete ((::PatternUnit*)p);
   }
   static void deleteArray_PatternUnit(void *p) {
      delete [] ((::PatternUnit*)p);
   }
   static void destruct_PatternUnit(void *p) {
      typedef ::PatternUnit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PatternUnit

//______________________________________________________________________________
void SISScaler::Streamer(TBuffer &R__b)
{
   // Stream an object of class SISScaler.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SISScaler::Class(),this);
   } else {
      R__b.WriteClassBuffer(SISScaler::Class(),this);
   }
}

//______________________________________________________________________________
void SISScaler::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SISScaler.
      TClass *R__cl = ::SISScaler::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ModuleNumber", &ModuleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SubEvents", (void*)&SubEvents);
      R__insp.InspectMember("vector<ScalerSubEvent>", (void*)&SubEvents, "SubEvents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SISScaler(void *p) {
      return  p ? new(p) ::SISScaler : new ::SISScaler;
   }
   static void *newArray_SISScaler(Long_t nElements, void *p) {
      return p ? new(p) ::SISScaler[nElements] : new ::SISScaler[nElements];
   }
   // Wrapper around operator delete
   static void delete_SISScaler(void *p) {
      delete ((::SISScaler*)p);
   }
   static void deleteArray_SISScaler(void *p) {
      delete [] ((::SISScaler*)p);
   }
   static void destruct_SISScaler(void *p) {
      typedef ::SISScaler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SISScaler

//______________________________________________________________________________
void DgfScaler::Streamer(TBuffer &R__b)
{
   // Stream an object of class DgfScaler.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DgfScaler::Class(),this);
   } else {
      R__b.WriteClassBuffer(DgfScaler::Class(),this);
   }
}

//______________________________________________________________________________
void DgfScaler::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DgfScaler.
      TClass *R__cl = ::DgfScaler::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SubEvents", (void*)&SubEvents);
      R__insp.InspectMember("vector<DgfScalerSubEvent>", (void*)&SubEvents, "SubEvents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DgfScaler(void *p) {
      return  p ? new(p) ::DgfScaler : new ::DgfScaler;
   }
   static void *newArray_DgfScaler(Long_t nElements, void *p) {
      return p ? new(p) ::DgfScaler[nElements] : new ::DgfScaler[nElements];
   }
   // Wrapper around operator delete
   static void delete_DgfScaler(void *p) {
      delete ((::DgfScaler*)p);
   }
   static void deleteArray_DgfScaler(void *p) {
      delete [] ((::DgfScaler*)p);
   }
   static void destruct_DgfScaler(void *p) {
      typedef ::DgfScaler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DgfScaler

//______________________________________________________________________________
void BraggChamber::Streamer(TBuffer &R__b)
{
   // Stream an object of class BraggChamber.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BraggChamber::Class(),this);
   } else {
      R__b.WriteClassBuffer(BraggChamber::Class(),this);
   }
}

//______________________________________________________________________________
void BraggChamber::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BraggChamber.
      TClass *R__cl = ::BraggChamber::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SubEvents", (void*)&SubEvents);
      R__insp.InspectMember("vector<BraggChamberSubEvent>", (void*)&SubEvents, "SubEvents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BraggChamber(void *p) {
      return  p ? new(p) ::BraggChamber : new ::BraggChamber;
   }
   static void *newArray_BraggChamber(Long_t nElements, void *p) {
      return p ? new(p) ::BraggChamber[nElements] : new ::BraggChamber[nElements];
   }
   // Wrapper around operator delete
   static void delete_BraggChamber(void *p) {
      delete ((::BraggChamber*)p);
   }
   static void deleteArray_BraggChamber(void *p) {
      delete [] ((::BraggChamber*)p);
   }
   static void destruct_BraggChamber(void *p) {
      typedef ::BraggChamber current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BraggChamber

//______________________________________________________________________________
void DgfSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class DgfSubEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DgfSubEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(DgfSubEvent::Class(),this);
   }
}

//______________________________________________________________________________
void DgfSubEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DgfSubEvent.
      TClass *R__cl = ::DgfSubEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitPattern", &HitPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventTime", &EventTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy[4]", Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FastTriggerTime[4]", FastTriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LongFastTriggerTime[4]", LongFastTriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UserValues[4][6]", UserValues);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DgfSubEvent(void *p) {
      return  p ? new(p) ::DgfSubEvent : new ::DgfSubEvent;
   }
   static void *newArray_DgfSubEvent(Long_t nElements, void *p) {
      return p ? new(p) ::DgfSubEvent[nElements] : new ::DgfSubEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_DgfSubEvent(void *p) {
      delete ((::DgfSubEvent*)p);
   }
   static void deleteArray_DgfSubEvent(void *p) {
      delete [] ((::DgfSubEvent*)p);
   }
   static void destruct_DgfSubEvent(void *p) {
      typedef ::DgfSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DgfSubEvent

//______________________________________________________________________________
void AdcSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class AdcSubEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AdcSubEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(AdcSubEvent::Class(),this);
   }
}

//______________________________________________________________________________
void AdcSubEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AdcSubEvent.
      TClass *R__cl = ::AdcSubEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimestamp", &fTimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdcChannel", (void*)&fAdcChannel);
      R__insp.InspectMember("vector<unsigned short>", (void*)&fAdcChannel, "fAdcChannel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdcValue", (void*)&fAdcValue);
      R__insp.InspectMember("vector<unsigned short>", (void*)&fAdcValue, "fAdcValue.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AdcSubEvent(void *p) {
      return  p ? new(p) ::AdcSubEvent : new ::AdcSubEvent;
   }
   static void *newArray_AdcSubEvent(Long_t nElements, void *p) {
      return p ? new(p) ::AdcSubEvent[nElements] : new ::AdcSubEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_AdcSubEvent(void *p) {
      delete ((::AdcSubEvent*)p);
   }
   static void deleteArray_AdcSubEvent(void *p) {
      delete [] ((::AdcSubEvent*)p);
   }
   static void destruct_AdcSubEvent(void *p) {
      typedef ::AdcSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AdcSubEvent

//______________________________________________________________________________
void PatternUnitSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class PatternUnitSubEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PatternUnitSubEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(PatternUnitSubEvent::Class(),this);
   }
}

//______________________________________________________________________________
void PatternUnitSubEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PatternUnitSubEvent.
      TClass *R__cl = ::PatternUnitSubEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Values", (void*)&Values);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Values, "Values.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PatternUnitSubEvent(void *p) {
      return  p ? new(p) ::PatternUnitSubEvent : new ::PatternUnitSubEvent;
   }
   static void *newArray_PatternUnitSubEvent(Long_t nElements, void *p) {
      return p ? new(p) ::PatternUnitSubEvent[nElements] : new ::PatternUnitSubEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_PatternUnitSubEvent(void *p) {
      delete ((::PatternUnitSubEvent*)p);
   }
   static void deleteArray_PatternUnitSubEvent(void *p) {
      delete [] ((::PatternUnitSubEvent*)p);
   }
   static void destruct_PatternUnitSubEvent(void *p) {
      typedef ::PatternUnitSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PatternUnitSubEvent

//______________________________________________________________________________
void ScalerSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ScalerSubEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ScalerSubEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(ScalerSubEvent::Class(),this);
   }
}

//______________________________________________________________________________
void ScalerSubEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ScalerSubEvent.
      TClass *R__cl = ::ScalerSubEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Channels", (void*)&Channels);
      R__insp.InspectMember("vector<unsigned short>", (void*)&Channels, "Channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Values", (void*)&Values);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Values, "Values.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ScalerSubEvent(void *p) {
      return  p ? new(p) ::ScalerSubEvent : new ::ScalerSubEvent;
   }
   static void *newArray_ScalerSubEvent(Long_t nElements, void *p) {
      return p ? new(p) ::ScalerSubEvent[nElements] : new ::ScalerSubEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_ScalerSubEvent(void *p) {
      delete ((::ScalerSubEvent*)p);
   }
   static void deleteArray_ScalerSubEvent(void *p) {
      delete [] ((::ScalerSubEvent*)p);
   }
   static void destruct_ScalerSubEvent(void *p) {
      typedef ::ScalerSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ScalerSubEvent

//______________________________________________________________________________
void DgfScalerSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class DgfScalerSubEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DgfScalerSubEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(DgfScalerSubEvent::Class(),this);
   }
}

//______________________________________________________________________________
void DgfScalerSubEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DgfScalerSubEvent.
      TClass *R__cl = ::DgfScalerSubEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModuleNumber", &fModuleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusterID", &fClusterID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunTime", &fRunTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGSLTTime", &fGSLTTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfEvents", &fNumberOfEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLiveTime", (void*)&fLiveTime);
      R__insp.InspectMember("vector<Long64_t>", (void*)&fLiveTime, "fLiveTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFastPeak", (void*)&fFastPeak);
      R__insp.InspectMember("vector<int>", (void*)&fFastPeak, "fFastPeak.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberOfDgfChannels", &fNumberOfDgfChannels);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DgfScalerSubEvent(void *p) {
      return  p ? new(p) ::DgfScalerSubEvent : new ::DgfScalerSubEvent;
   }
   static void *newArray_DgfScalerSubEvent(Long_t nElements, void *p) {
      return p ? new(p) ::DgfScalerSubEvent[nElements] : new ::DgfScalerSubEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_DgfScalerSubEvent(void *p) {
      delete ((::DgfScalerSubEvent*)p);
   }
   static void deleteArray_DgfScalerSubEvent(void *p) {
      delete [] ((::DgfScalerSubEvent*)p);
   }
   static void destruct_DgfScalerSubEvent(void *p) {
      typedef ::DgfScalerSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DgfScalerSubEvent

//______________________________________________________________________________
void BraggChamberSubEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class BraggChamberSubEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BraggChamberSubEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(BraggChamberSubEvent::Class(),this);
   }
}

//______________________________________________________________________________
void BraggChamberSubEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BraggChamberSubEvent.
      TClass *R__cl = ::BraggChamberSubEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataSize", &fDataSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrigger[2]", fTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOverflow[2]", fOverflow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData[2]", fData);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BraggChamberSubEvent(void *p) {
      return  p ? new(p) ::BraggChamberSubEvent : new ::BraggChamberSubEvent;
   }
   static void *newArray_BraggChamberSubEvent(Long_t nElements, void *p) {
      return p ? new(p) ::BraggChamberSubEvent[nElements] : new ::BraggChamberSubEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_BraggChamberSubEvent(void *p) {
      delete ((::BraggChamberSubEvent*)p);
   }
   static void deleteArray_BraggChamberSubEvent(void *p) {
      delete [] ((::BraggChamberSubEvent*)p);
   }
   static void destruct_BraggChamberSubEvent(void *p) {
      typedef ::BraggChamberSubEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BraggChamberSubEvent

//______________________________________________________________________________
void UnpackedEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class UnpackedEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(UnpackedEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(UnpackedEvent::Class(),this);
   }
}

//______________________________________________________________________________
void UnpackedEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class UnpackedEvent.
      TClass *R__cl = ::UnpackedEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Settings", &Settings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventNumber", &EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WrongHitPattern", &WrongHitPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WrongAdcHeader", &WrongAdcHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AdcOverflow", &AdcOverflow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AdcUnderflow", &AdcUnderflow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DgfModules", (void*)&DgfModules);
      R__insp.InspectMember("vector<DgfModule>", (void*)&DgfModules, "DgfModules.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AdcModules", (void*)&AdcModules);
      R__insp.InspectMember("vector<AdcModule>", (void*)&AdcModules, "AdcModules.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PatternUnits", (void*)&PatternUnits);
      R__insp.InspectMember("vector<PatternUnit>", (void*)&PatternUnits, "PatternUnits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Scaler", &Scaler);
      R__insp.InspectMember(Scaler, "Scaler.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDgfScaler", &fDgfScaler);
      R__insp.InspectMember(fDgfScaler, "fDgfScaler.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBraggChamber", &fBraggChamber);
      R__insp.InspectMember(fBraggChamber, "fBraggChamber.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalerData", &fScalerData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBufferTime", &fBufferTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_UnpackedEvent(void *p) {
      return  p ? new(p) ::UnpackedEvent : new ::UnpackedEvent;
   }
   static void *newArray_UnpackedEvent(Long_t nElements, void *p) {
      return p ? new(p) ::UnpackedEvent[nElements] : new ::UnpackedEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_UnpackedEvent(void *p) {
      delete ((::UnpackedEvent*)p);
   }
   static void deleteArray_UnpackedEvent(void *p) {
      delete [] ((::UnpackedEvent*)p);
   }
   static void destruct_UnpackedEvent(void *p) {
      typedef ::UnpackedEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::UnpackedEvent

namespace ROOTDict {
   void vectorlEAdcDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEAdcDatagR_Dictionary();
   static void *new_vectorlEAdcDatagR(void *p = 0);
   static void *newArray_vectorlEAdcDatagR(Long_t size, void *p);
   static void delete_vectorlEAdcDatagR(void *p);
   static void deleteArray_vectorlEAdcDatagR(void *p);
   static void destruct_vectorlEAdcDatagR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<AdcData>*)
   {
      vector<AdcData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<AdcData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<AdcData>", -2, "prec_stl/vector", 49,
                  typeid(vector<AdcData>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEAdcDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<AdcData>) );
      instance.SetNew(&new_vectorlEAdcDatagR);
      instance.SetNewArray(&newArray_vectorlEAdcDatagR);
      instance.SetDelete(&delete_vectorlEAdcDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlEAdcDatagR);
      instance.SetDestructor(&destruct_vectorlEAdcDatagR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<AdcData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<AdcData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEAdcDatagR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<AdcData>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEAdcDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AdcData> : new vector<AdcData>;
   }
   static void *newArray_vectorlEAdcDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AdcData>[nElements] : new vector<AdcData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEAdcDatagR(void *p) {
      delete ((vector<AdcData>*)p);
   }
   static void deleteArray_vectorlEAdcDatagR(void *p) {
      delete [] ((vector<AdcData>*)p);
   }
   static void destruct_vectorlEAdcDatagR(void *p) {
      typedef vector<AdcData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<AdcData>

namespace ROOTDict {
   void vectorlEAdcModulegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEAdcModulegR_Dictionary();
   static void *new_vectorlEAdcModulegR(void *p = 0);
   static void *newArray_vectorlEAdcModulegR(Long_t size, void *p);
   static void delete_vectorlEAdcModulegR(void *p);
   static void deleteArray_vectorlEAdcModulegR(void *p);
   static void destruct_vectorlEAdcModulegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<AdcModule>*)
   {
      vector<AdcModule> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<AdcModule>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<AdcModule>", -2, "prec_stl/vector", 49,
                  typeid(vector<AdcModule>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEAdcModulegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<AdcModule>) );
      instance.SetNew(&new_vectorlEAdcModulegR);
      instance.SetNewArray(&newArray_vectorlEAdcModulegR);
      instance.SetDelete(&delete_vectorlEAdcModulegR);
      instance.SetDeleteArray(&deleteArray_vectorlEAdcModulegR);
      instance.SetDestructor(&destruct_vectorlEAdcModulegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<AdcModule> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<AdcModule>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEAdcModulegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<AdcModule>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEAdcModulegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AdcModule> : new vector<AdcModule>;
   }
   static void *newArray_vectorlEAdcModulegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AdcModule>[nElements] : new vector<AdcModule>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEAdcModulegR(void *p) {
      delete ((vector<AdcModule>*)p);
   }
   static void deleteArray_vectorlEAdcModulegR(void *p) {
      delete [] ((vector<AdcModule>*)p);
   }
   static void destruct_vectorlEAdcModulegR(void *p) {
      typedef vector<AdcModule> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<AdcModule>

namespace ROOTDict {
   void vectorlEAdcSubEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEAdcSubEventgR_Dictionary();
   static void *new_vectorlEAdcSubEventgR(void *p = 0);
   static void *newArray_vectorlEAdcSubEventgR(Long_t size, void *p);
   static void delete_vectorlEAdcSubEventgR(void *p);
   static void deleteArray_vectorlEAdcSubEventgR(void *p);
   static void destruct_vectorlEAdcSubEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<AdcSubEvent>*)
   {
      vector<AdcSubEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<AdcSubEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<AdcSubEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<AdcSubEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEAdcSubEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<AdcSubEvent>) );
      instance.SetNew(&new_vectorlEAdcSubEventgR);
      instance.SetNewArray(&newArray_vectorlEAdcSubEventgR);
      instance.SetDelete(&delete_vectorlEAdcSubEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEAdcSubEventgR);
      instance.SetDestructor(&destruct_vectorlEAdcSubEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<AdcSubEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<AdcSubEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEAdcSubEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<AdcSubEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEAdcSubEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AdcSubEvent> : new vector<AdcSubEvent>;
   }
   static void *newArray_vectorlEAdcSubEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<AdcSubEvent>[nElements] : new vector<AdcSubEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEAdcSubEventgR(void *p) {
      delete ((vector<AdcSubEvent>*)p);
   }
   static void deleteArray_vectorlEAdcSubEventgR(void *p) {
      delete [] ((vector<AdcSubEvent>*)p);
   }
   static void destruct_vectorlEAdcSubEventgR(void *p) {
      typedef vector<AdcSubEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<AdcSubEvent>

namespace ROOTDict {
   void vectorlEBraggChamberSubEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEBraggChamberSubEventgR_Dictionary();
   static void *new_vectorlEBraggChamberSubEventgR(void *p = 0);
   static void *newArray_vectorlEBraggChamberSubEventgR(Long_t size, void *p);
   static void delete_vectorlEBraggChamberSubEventgR(void *p);
   static void deleteArray_vectorlEBraggChamberSubEventgR(void *p);
   static void destruct_vectorlEBraggChamberSubEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<BraggChamberSubEvent>*)
   {
      vector<BraggChamberSubEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<BraggChamberSubEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<BraggChamberSubEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<BraggChamberSubEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEBraggChamberSubEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<BraggChamberSubEvent>) );
      instance.SetNew(&new_vectorlEBraggChamberSubEventgR);
      instance.SetNewArray(&newArray_vectorlEBraggChamberSubEventgR);
      instance.SetDelete(&delete_vectorlEBraggChamberSubEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEBraggChamberSubEventgR);
      instance.SetDestructor(&destruct_vectorlEBraggChamberSubEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<BraggChamberSubEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<BraggChamberSubEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEBraggChamberSubEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<BraggChamberSubEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEBraggChamberSubEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BraggChamberSubEvent> : new vector<BraggChamberSubEvent>;
   }
   static void *newArray_vectorlEBraggChamberSubEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BraggChamberSubEvent>[nElements] : new vector<BraggChamberSubEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEBraggChamberSubEventgR(void *p) {
      delete ((vector<BraggChamberSubEvent>*)p);
   }
   static void deleteArray_vectorlEBraggChamberSubEventgR(void *p) {
      delete [] ((vector<BraggChamberSubEvent>*)p);
   }
   static void destruct_vectorlEBraggChamberSubEventgR(void *p) {
      typedef vector<BraggChamberSubEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<BraggChamberSubEvent>

namespace ROOTDict {
   void vectorlEBuiltEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEBuiltEventgR_Dictionary();
   static void *new_vectorlEBuiltEventgR(void *p = 0);
   static void *newArray_vectorlEBuiltEventgR(Long_t size, void *p);
   static void delete_vectorlEBuiltEventgR(void *p);
   static void deleteArray_vectorlEBuiltEventgR(void *p);
   static void destruct_vectorlEBuiltEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<BuiltEvent>*)
   {
      vector<BuiltEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<BuiltEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<BuiltEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<BuiltEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEBuiltEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<BuiltEvent>) );
      instance.SetNew(&new_vectorlEBuiltEventgR);
      instance.SetNewArray(&newArray_vectorlEBuiltEventgR);
      instance.SetDelete(&delete_vectorlEBuiltEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEBuiltEventgR);
      instance.SetDestructor(&destruct_vectorlEBuiltEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<BuiltEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<BuiltEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEBuiltEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<BuiltEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEBuiltEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BuiltEvent> : new vector<BuiltEvent>;
   }
   static void *newArray_vectorlEBuiltEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BuiltEvent>[nElements] : new vector<BuiltEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEBuiltEventgR(void *p) {
      delete ((vector<BuiltEvent>*)p);
   }
   static void deleteArray_vectorlEBuiltEventgR(void *p) {
      delete [] ((vector<BuiltEvent>*)p);
   }
   static void destruct_vectorlEBuiltEventgR(void *p) {
      typedef vector<BuiltEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<BuiltEvent>

namespace ROOTDict {
   void vectorlEDgfDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDgfDatagR_Dictionary();
   static void *new_vectorlEDgfDatagR(void *p = 0);
   static void *newArray_vectorlEDgfDatagR(Long_t size, void *p);
   static void delete_vectorlEDgfDatagR(void *p);
   static void deleteArray_vectorlEDgfDatagR(void *p);
   static void destruct_vectorlEDgfDatagR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<DgfData>*)
   {
      vector<DgfData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DgfData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DgfData>", -2, "prec_stl/vector", 49,
                  typeid(vector<DgfData>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEDgfDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DgfData>) );
      instance.SetNew(&new_vectorlEDgfDatagR);
      instance.SetNewArray(&newArray_vectorlEDgfDatagR);
      instance.SetDelete(&delete_vectorlEDgfDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlEDgfDatagR);
      instance.SetDestructor(&destruct_vectorlEDgfDatagR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<DgfData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DgfData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDgfDatagR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<DgfData>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEDgfDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfData> : new vector<DgfData>;
   }
   static void *newArray_vectorlEDgfDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfData>[nElements] : new vector<DgfData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDgfDatagR(void *p) {
      delete ((vector<DgfData>*)p);
   }
   static void deleteArray_vectorlEDgfDatagR(void *p) {
      delete [] ((vector<DgfData>*)p);
   }
   static void destruct_vectorlEDgfDatagR(void *p) {
      typedef vector<DgfData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<DgfData>

namespace ROOTDict {
   void vectorlEDgfModulegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDgfModulegR_Dictionary();
   static void *new_vectorlEDgfModulegR(void *p = 0);
   static void *newArray_vectorlEDgfModulegR(Long_t size, void *p);
   static void delete_vectorlEDgfModulegR(void *p);
   static void deleteArray_vectorlEDgfModulegR(void *p);
   static void destruct_vectorlEDgfModulegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<DgfModule>*)
   {
      vector<DgfModule> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DgfModule>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DgfModule>", -2, "prec_stl/vector", 49,
                  typeid(vector<DgfModule>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEDgfModulegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DgfModule>) );
      instance.SetNew(&new_vectorlEDgfModulegR);
      instance.SetNewArray(&newArray_vectorlEDgfModulegR);
      instance.SetDelete(&delete_vectorlEDgfModulegR);
      instance.SetDeleteArray(&deleteArray_vectorlEDgfModulegR);
      instance.SetDestructor(&destruct_vectorlEDgfModulegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<DgfModule> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DgfModule>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDgfModulegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<DgfModule>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEDgfModulegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfModule> : new vector<DgfModule>;
   }
   static void *newArray_vectorlEDgfModulegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfModule>[nElements] : new vector<DgfModule>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDgfModulegR(void *p) {
      delete ((vector<DgfModule>*)p);
   }
   static void deleteArray_vectorlEDgfModulegR(void *p) {
      delete [] ((vector<DgfModule>*)p);
   }
   static void destruct_vectorlEDgfModulegR(void *p) {
      typedef vector<DgfModule> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<DgfModule>

namespace ROOTDict {
   void vectorlEDgfScalerSubEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDgfScalerSubEventgR_Dictionary();
   static void *new_vectorlEDgfScalerSubEventgR(void *p = 0);
   static void *newArray_vectorlEDgfScalerSubEventgR(Long_t size, void *p);
   static void delete_vectorlEDgfScalerSubEventgR(void *p);
   static void deleteArray_vectorlEDgfScalerSubEventgR(void *p);
   static void destruct_vectorlEDgfScalerSubEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<DgfScalerSubEvent>*)
   {
      vector<DgfScalerSubEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DgfScalerSubEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DgfScalerSubEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<DgfScalerSubEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEDgfScalerSubEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DgfScalerSubEvent>) );
      instance.SetNew(&new_vectorlEDgfScalerSubEventgR);
      instance.SetNewArray(&newArray_vectorlEDgfScalerSubEventgR);
      instance.SetDelete(&delete_vectorlEDgfScalerSubEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDgfScalerSubEventgR);
      instance.SetDestructor(&destruct_vectorlEDgfScalerSubEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<DgfScalerSubEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DgfScalerSubEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDgfScalerSubEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<DgfScalerSubEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEDgfScalerSubEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfScalerSubEvent> : new vector<DgfScalerSubEvent>;
   }
   static void *newArray_vectorlEDgfScalerSubEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfScalerSubEvent>[nElements] : new vector<DgfScalerSubEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDgfScalerSubEventgR(void *p) {
      delete ((vector<DgfScalerSubEvent>*)p);
   }
   static void deleteArray_vectorlEDgfScalerSubEventgR(void *p) {
      delete [] ((vector<DgfScalerSubEvent>*)p);
   }
   static void destruct_vectorlEDgfScalerSubEventgR(void *p) {
      typedef vector<DgfScalerSubEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<DgfScalerSubEvent>

namespace ROOTDict {
   void vectorlEDgfSubEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDgfSubEventgR_Dictionary();
   static void *new_vectorlEDgfSubEventgR(void *p = 0);
   static void *newArray_vectorlEDgfSubEventgR(Long_t size, void *p);
   static void delete_vectorlEDgfSubEventgR(void *p);
   static void deleteArray_vectorlEDgfSubEventgR(void *p);
   static void destruct_vectorlEDgfSubEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<DgfSubEvent>*)
   {
      vector<DgfSubEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DgfSubEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DgfSubEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<DgfSubEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEDgfSubEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DgfSubEvent>) );
      instance.SetNew(&new_vectorlEDgfSubEventgR);
      instance.SetNewArray(&newArray_vectorlEDgfSubEventgR);
      instance.SetDelete(&delete_vectorlEDgfSubEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDgfSubEventgR);
      instance.SetDestructor(&destruct_vectorlEDgfSubEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<DgfSubEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DgfSubEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDgfSubEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<DgfSubEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEDgfSubEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfSubEvent> : new vector<DgfSubEvent>;
   }
   static void *newArray_vectorlEDgfSubEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DgfSubEvent>[nElements] : new vector<DgfSubEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDgfSubEventgR(void *p) {
      delete ((vector<DgfSubEvent>*)p);
   }
   static void deleteArray_vectorlEDgfSubEventgR(void *p) {
      delete [] ((vector<DgfSubEvent>*)p);
   }
   static void destruct_vectorlEDgfSubEventgR(void *p) {
      typedef vector<DgfSubEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<DgfSubEvent>

namespace ROOTDict {
   void vectorlEPatternUnitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPatternUnitgR_Dictionary();
   static void *new_vectorlEPatternUnitgR(void *p = 0);
   static void *newArray_vectorlEPatternUnitgR(Long_t size, void *p);
   static void delete_vectorlEPatternUnitgR(void *p);
   static void deleteArray_vectorlEPatternUnitgR(void *p);
   static void destruct_vectorlEPatternUnitgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<PatternUnit>*)
   {
      vector<PatternUnit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PatternUnit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PatternUnit>", -2, "prec_stl/vector", 49,
                  typeid(vector<PatternUnit>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPatternUnitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<PatternUnit>) );
      instance.SetNew(&new_vectorlEPatternUnitgR);
      instance.SetNewArray(&newArray_vectorlEPatternUnitgR);
      instance.SetDelete(&delete_vectorlEPatternUnitgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPatternUnitgR);
      instance.SetDestructor(&destruct_vectorlEPatternUnitgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<PatternUnit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PatternUnit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPatternUnitgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<PatternUnit>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPatternUnitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PatternUnit> : new vector<PatternUnit>;
   }
   static void *newArray_vectorlEPatternUnitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PatternUnit>[nElements] : new vector<PatternUnit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPatternUnitgR(void *p) {
      delete ((vector<PatternUnit>*)p);
   }
   static void deleteArray_vectorlEPatternUnitgR(void *p) {
      delete [] ((vector<PatternUnit>*)p);
   }
   static void destruct_vectorlEPatternUnitgR(void *p) {
      typedef vector<PatternUnit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<PatternUnit>

namespace ROOTDict {
   void vectorlEPatternUnitSubEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPatternUnitSubEventgR_Dictionary();
   static void *new_vectorlEPatternUnitSubEventgR(void *p = 0);
   static void *newArray_vectorlEPatternUnitSubEventgR(Long_t size, void *p);
   static void delete_vectorlEPatternUnitSubEventgR(void *p);
   static void deleteArray_vectorlEPatternUnitSubEventgR(void *p);
   static void destruct_vectorlEPatternUnitSubEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<PatternUnitSubEvent>*)
   {
      vector<PatternUnitSubEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PatternUnitSubEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PatternUnitSubEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<PatternUnitSubEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEPatternUnitSubEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<PatternUnitSubEvent>) );
      instance.SetNew(&new_vectorlEPatternUnitSubEventgR);
      instance.SetNewArray(&newArray_vectorlEPatternUnitSubEventgR);
      instance.SetDelete(&delete_vectorlEPatternUnitSubEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPatternUnitSubEventgR);
      instance.SetDestructor(&destruct_vectorlEPatternUnitSubEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<PatternUnitSubEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PatternUnitSubEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPatternUnitSubEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<PatternUnitSubEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEPatternUnitSubEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PatternUnitSubEvent> : new vector<PatternUnitSubEvent>;
   }
   static void *newArray_vectorlEPatternUnitSubEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PatternUnitSubEvent>[nElements] : new vector<PatternUnitSubEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPatternUnitSubEventgR(void *p) {
      delete ((vector<PatternUnitSubEvent>*)p);
   }
   static void deleteArray_vectorlEPatternUnitSubEventgR(void *p) {
      delete [] ((vector<PatternUnitSubEvent>*)p);
   }
   static void destruct_vectorlEPatternUnitSubEventgR(void *p) {
      typedef vector<PatternUnitSubEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<PatternUnitSubEvent>

namespace ROOTDict {
   void vectorlEScalerSubEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEScalerSubEventgR_Dictionary();
   static void *new_vectorlEScalerSubEventgR(void *p = 0);
   static void *newArray_vectorlEScalerSubEventgR(Long_t size, void *p);
   static void delete_vectorlEScalerSubEventgR(void *p);
   static void deleteArray_vectorlEScalerSubEventgR(void *p);
   static void destruct_vectorlEScalerSubEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<ScalerSubEvent>*)
   {
      vector<ScalerSubEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ScalerSubEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ScalerSubEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<ScalerSubEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEScalerSubEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ScalerSubEvent>) );
      instance.SetNew(&new_vectorlEScalerSubEventgR);
      instance.SetNewArray(&newArray_vectorlEScalerSubEventgR);
      instance.SetDelete(&delete_vectorlEScalerSubEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEScalerSubEventgR);
      instance.SetDestructor(&destruct_vectorlEScalerSubEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<ScalerSubEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ScalerSubEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEScalerSubEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<ScalerSubEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEScalerSubEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ScalerSubEvent> : new vector<ScalerSubEvent>;
   }
   static void *newArray_vectorlEScalerSubEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ScalerSubEvent>[nElements] : new vector<ScalerSubEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEScalerSubEventgR(void *p) {
      delete ((vector<ScalerSubEvent>*)p);
   }
   static void deleteArray_vectorlEScalerSubEventgR(void *p) {
      delete [] ((vector<ScalerSubEvent>*)p);
   }
   static void destruct_vectorlEScalerSubEventgR(void *p) {
      typedef vector<ScalerSubEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<ScalerSubEvent>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlELong64_tgR_Dictionary();
   static void *new_vectorlELong64_tgR(void *p = 0);
   static void *newArray_vectorlELong64_tgR(Long_t size, void *p);
   static void delete_vectorlELong64_tgR(void *p);
   static void deleteArray_vectorlELong64_tgR(void *p);
   static void destruct_vectorlELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Long64_t>*)
   {
      vector<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Long64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Long64_t>", -2, "vector.dll", 0,
                  typeid(vector<Long64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlELong64_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Long64_t>) );
      instance.SetNew(&new_vectorlELong64_tgR);
      instance.SetNewArray(&newArray_vectorlELong64_tgR);
      instance.SetDelete(&delete_vectorlELong64_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlELong64_tgR);
      instance.SetDestructor(&destruct_vectorlELong64_tgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Long64_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlELong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlELong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t> : new vector<Long64_t>;
   }
   static void *newArray_vectorlELong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t>[nElements] : new vector<Long64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlELong64_tgR(void *p) {
      delete ((vector<Long64_t>*)p);
   }
   static void deleteArray_vectorlELong64_tgR(void *p) {
      delete [] ((vector<Long64_t>*)p);
   }
   static void destruct_vectorlELong64_tgR(void *p) {
      typedef vector<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Long64_t>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

namespace ROOTDict {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned short>

/********************************************************
* MedToRootDictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMedToRootDictionary();

extern "C" void G__set_cpp_environmentMedToRootDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("BuiltEvent.hh");
  G__add_compiledheader("Datas.hh");
  G__add_compiledheader("EventBuffer.hh");
  G__add_compiledheader("EventBuilder.hh");
  G__add_compiledheader("GlobalSettings.hh");
  G__add_compiledheader("Modules.hh");
  G__add_compiledheader("SubEvents.hh");
  G__add_compiledheader("UnpackedEvent.hh");
  G__cpp_reset_tagtableMedToRootDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevMedToRootDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GlobalSettings */
static int G__MedToRootDictionary_557_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GlobalSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GlobalSettings[n];
     } else {
       p = new((void*) gvp) GlobalSettings[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GlobalSettings;
     } else {
       p = new((void*) gvp) GlobalSettings;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GlobalSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GlobalSettings((unsigned int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) GlobalSettings((unsigned int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->FirstMiniballDgf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->LastMiniballDgf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->BeamdumpDgf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->FirstAdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->LastAdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->BraggChamber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->Scaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->PatternUnit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->FirstDgfScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->LastDgfScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NumberOfDgfModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NumberOfAdcModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NumberOfPatternUnits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NumberOfDgfChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NumberOfTimestampModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->TimestampModule((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GlobalSettings*) G__getstructoffset())->TimestampModuleOffset((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->TimestampChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NumberOfAdcsPerTimestampModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->EbisT1AndSuperCycleModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->EbisChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->T1Channel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->SuperCycleChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->MarabouDgfModuleOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->MarabouAdcModuleOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->MarabouPatternUnitOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((GlobalSettings*) G__getstructoffset())->LastEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GlobalSettings*) G__getstructoffset())->VerboseLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GlobalSettings*) G__getstructoffset())->MedFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GlobalSettings*) G__getstructoffset())->OnBeamFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GlobalSettings*) G__getstructoffset())->OnBeamBackgroundFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GlobalSettings*) G__getstructoffset())->OffBeamFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GlobalSettings*) G__getstructoffset())->ScalerFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GlobalSettings*) G__getstructoffset())->IsTimestampModule((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GlobalSettings*) G__getstructoffset())->Coincident((long long) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->RealTimeIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->RunTimeIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->GSLTTimeIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NumberOfEventsIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->ChannelIndicesOffset((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->LiveTimeIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->FastPeakIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->BraggTraceLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GlobalSettings*) G__getstructoffset())->SourceRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GlobalSettings*) G__getstructoffset())->IncludeScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GlobalSettings*) G__getstructoffset())->MesytecAdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GlobalSettings*) G__getstructoffset())->SPEDEChamb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->NofCaenAdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->TypeOfSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->EbisWindowLowerEdge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((GlobalSettings*) G__getstructoffset())->EbisWindowUpperEdge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((GlobalSettings*) G__getstructoffset())->DgfInitDelay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GlobalSettings*) G__getstructoffset())->Verify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GlobalSettings::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlobalSettings::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GlobalSettings::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GlobalSettings::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GlobalSettings*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlobalSettings::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GlobalSettings::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GlobalSettings::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_557_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GlobalSettings::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_557_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GlobalSettings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GlobalSettings(*(GlobalSettings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GlobalSettings G__TGlobalSettings;
static int G__MedToRootDictionary_557_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GlobalSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GlobalSettings*) (soff+(sizeof(GlobalSettings)*i)))->~G__TGlobalSettings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GlobalSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GlobalSettings*) (soff))->~G__TGlobalSettings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_557_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GlobalSettings* dest = (GlobalSettings*) G__getstructoffset();
   *dest = *(GlobalSettings*) libp->para[0].ref;
   const GlobalSettings& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DgfSubEvent */
static int G__MedToRootDictionary_558_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfSubEvent[n];
     } else {
       p = new((void*) gvp) DgfSubEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfSubEvent;
     } else {
       p = new((void*) gvp) DgfSubEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->SetHitPattern((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->SetEventTime((unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (unsigned short) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->SetFastTriggerTime((unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->SetEnergy((unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->SetLongFastTriggerTime((unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (unsigned short) G__int(libp->para[2]), (unsigned short) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->SetUserValues(libp->para[0].ref ? *(unsigned short**) libp->para[0].ref : *(unsigned short**) (void*) (&G__Mlong(libp->para[0])), (unsigned short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfSubEvent*) G__getstructoffset())->GetHitPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfSubEvent*) G__getstructoffset())->GetEventTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfSubEvent*) G__getstructoffset())->GetFastTriggerTime((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfSubEvent*) G__getstructoffset())->GetEnergy((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfSubEvent*) G__getstructoffset())->GetNumberOfChannels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((DgfSubEvent*) G__getstructoffset())->GetLongFastTriggerTime((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->GetUserValues((unsigned short) G__int(libp->para[0]), (unsigned short*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DgfSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DgfSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DgfSubEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfSubEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_558_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_558_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DgfSubEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DgfSubEvent(*(DgfSubEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DgfSubEvent G__TDgfSubEvent;
static int G__MedToRootDictionary_558_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DgfSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DgfSubEvent*) (soff+(sizeof(DgfSubEvent)*i)))->~G__TDgfSubEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DgfSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DgfSubEvent*) (soff))->~G__TDgfSubEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_558_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfSubEvent* dest = (DgfSubEvent*) G__getstructoffset();
   *dest = *(DgfSubEvent*) libp->para[0].ref;
   const DgfSubEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AdcSubEvent */
static int G__MedToRootDictionary_559_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AdcSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AdcSubEvent[n];
     } else {
       p = new((void*) gvp) AdcSubEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AdcSubEvent;
     } else {
       p = new((void*) gvp) AdcSubEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcSubEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((AdcSubEvent*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcSubEvent*) G__getstructoffset())->Add((unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcSubEvent*) G__getstructoffset())->Timestamp((long long) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short>* pobj;
         vector<unsigned short> xobj = ((AdcSubEvent*) G__getstructoffset())->AdcChannel();
         pobj = new vector<unsigned short>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<unsigned short>* pobj;
         vector<unsigned short> xobj = ((AdcSubEvent*) G__getstructoffset())->AdcValue();
         pobj = new vector<unsigned short>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AdcSubEvent*) G__getstructoffset())->AdcChannel((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AdcSubEvent*) G__getstructoffset())->AdcValue((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AdcSubEvent*) G__getstructoffset())->GetLastAdcChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AdcSubEvent*) G__getstructoffset())->GetLastAdcValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcSubEvent*) G__getstructoffset())->Get((unsigned short) G__int(libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1])
, *(unsigned short*) G__UShortref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((AdcSubEvent*) G__getstructoffset())->Timestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AdcSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AdcSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AdcSubEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcSubEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AdcSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_559_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AdcSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_559_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AdcSubEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AdcSubEvent(*(AdcSubEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AdcSubEvent G__TAdcSubEvent;
static int G__MedToRootDictionary_559_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AdcSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AdcSubEvent*) (soff+(sizeof(AdcSubEvent)*i)))->~G__TAdcSubEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AdcSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AdcSubEvent*) (soff))->~G__TAdcSubEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_559_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AdcSubEvent* dest = (AdcSubEvent*) G__getstructoffset();
   *dest = *(AdcSubEvent*) libp->para[0].ref;
   const AdcSubEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PatternUnitSubEvent */
static int G__MedToRootDictionary_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PatternUnitSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PatternUnitSubEvent[n];
     } else {
       p = new((void*) gvp) PatternUnitSubEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PatternUnitSubEvent;
     } else {
       p = new((void*) gvp) PatternUnitSubEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((PatternUnitSubEvent*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PatternUnitSubEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PatternUnitSubEvent*) G__getstructoffset())->Add((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((PatternUnitSubEvent*) G__getstructoffset())->GetValue((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((PatternUnitSubEvent*) G__getstructoffset())->GetLastValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PatternUnitSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PatternUnitSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PatternUnitSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PatternUnitSubEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PatternUnitSubEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PatternUnitSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PatternUnitSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PatternUnitSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_560_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PatternUnitSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_560_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PatternUnitSubEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PatternUnitSubEvent(*(PatternUnitSubEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PatternUnitSubEvent G__TPatternUnitSubEvent;
static int G__MedToRootDictionary_560_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PatternUnitSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PatternUnitSubEvent*) (soff+(sizeof(PatternUnitSubEvent)*i)))->~G__TPatternUnitSubEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PatternUnitSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PatternUnitSubEvent*) (soff))->~G__TPatternUnitSubEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_560_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PatternUnitSubEvent* dest = (PatternUnitSubEvent*) G__getstructoffset();
   *dest = *(PatternUnitSubEvent*) libp->para[0].ref;
   const PatternUnitSubEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ScalerSubEvent */
static int G__MedToRootDictionary_561_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScalerSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScalerSubEvent[n];
     } else {
       p = new((void*) gvp) ScalerSubEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScalerSubEvent;
     } else {
       p = new((void*) gvp) ScalerSubEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((ScalerSubEvent*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScalerSubEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScalerSubEvent*) G__getstructoffset())->Add((unsigned short) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((ScalerSubEvent*) G__getstructoffset())->GetChannel((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ScalerSubEvent*) G__getstructoffset())->GetValue((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((ScalerSubEvent*) G__getstructoffset())->GetLastChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ScalerSubEvent*) G__getstructoffset())->GetLastValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ScalerSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScalerSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ScalerSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ScalerSubEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScalerSubEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScalerSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScalerSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScalerSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_561_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScalerSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_561_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ScalerSubEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ScalerSubEvent(*(ScalerSubEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ScalerSubEvent G__TScalerSubEvent;
static int G__MedToRootDictionary_561_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ScalerSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ScalerSubEvent*) (soff+(sizeof(ScalerSubEvent)*i)))->~G__TScalerSubEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ScalerSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ScalerSubEvent*) (soff))->~G__TScalerSubEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_561_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScalerSubEvent* dest = (ScalerSubEvent*) G__getstructoffset();
   *dest = *(ScalerSubEvent*) libp->para[0].ref;
   const ScalerSubEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DgfScalerSubEvent */
static int G__MedToRootDictionary_562_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfScalerSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfScalerSubEvent[n];
     } else {
       p = new((void*) gvp) DgfScalerSubEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfScalerSubEvent;
     } else {
       p = new((void*) gvp) DgfScalerSubEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfScalerSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DgfScalerSubEvent((unsigned short) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) DgfScalerSubEvent((unsigned short) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->ModuleNumber((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->ClusterID((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->RealTime((long long) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->RunTime((long long) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->GSLTTime((long long) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->NumberOfEvents((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->LiveTime((unsigned short) G__int(libp->para[0]), (long long) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->FastPeak((unsigned short) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfScalerSubEvent*) G__getstructoffset())->ModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfScalerSubEvent*) G__getstructoffset())->ClusterID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((DgfScalerSubEvent*) G__getstructoffset())->RealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((DgfScalerSubEvent*) G__getstructoffset())->RunTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((DgfScalerSubEvent*) G__getstructoffset())->GSLTTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfScalerSubEvent*) G__getstructoffset())->NumberOfEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((DgfScalerSubEvent*) G__getstructoffset())->LiveTime((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DgfScalerSubEvent*) G__getstructoffset())->FastPeak((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DgfScalerSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfScalerSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DgfScalerSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DgfScalerSubEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScalerSubEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfScalerSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfScalerSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfScalerSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_562_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfScalerSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_562_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DgfScalerSubEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DgfScalerSubEvent(*(DgfScalerSubEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DgfScalerSubEvent G__TDgfScalerSubEvent;
static int G__MedToRootDictionary_562_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DgfScalerSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DgfScalerSubEvent*) (soff+(sizeof(DgfScalerSubEvent)*i)))->~G__TDgfScalerSubEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DgfScalerSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DgfScalerSubEvent*) (soff))->~G__TDgfScalerSubEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_562_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfScalerSubEvent* dest = (DgfScalerSubEvent*) G__getstructoffset();
   *dest = *(DgfScalerSubEvent*) libp->para[0].ref;
   const DgfScalerSubEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BraggChamberSubEvent */
static int G__MedToRootDictionary_563_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BraggChamberSubEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BraggChamberSubEvent[n];
     } else {
       p = new((void*) gvp) BraggChamberSubEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BraggChamberSubEvent;
     } else {
       p = new((void*) gvp) BraggChamberSubEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamberSubEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamberSubEvent*) G__getstructoffset())->DataSize((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamberSubEvent*) G__getstructoffset())->Trigger((unsigned short) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamberSubEvent*) G__getstructoffset())->Overflow((unsigned short) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BraggChamberSubEvent*) G__getstructoffset())->GetChannel((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((BraggChamberSubEvent*) G__getstructoffset())->DataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BraggChamberSubEvent*) G__getstructoffset())->Trigger((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BraggChamberSubEvent*) G__getstructoffset())->Overflow((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BraggChamberSubEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BraggChamberSubEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BraggChamberSubEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BraggChamberSubEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamberSubEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BraggChamberSubEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BraggChamberSubEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BraggChamberSubEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_563_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BraggChamberSubEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_563_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BraggChamberSubEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BraggChamberSubEvent(*(BraggChamberSubEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BraggChamberSubEvent G__TBraggChamberSubEvent;
static int G__MedToRootDictionary_563_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BraggChamberSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BraggChamberSubEvent*) (soff+(sizeof(BraggChamberSubEvent)*i)))->~G__TBraggChamberSubEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BraggChamberSubEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BraggChamberSubEvent*) (soff))->~G__TBraggChamberSubEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_563_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BraggChamberSubEvent* dest = (BraggChamberSubEvent*) G__getstructoffset();
   *dest = *(BraggChamberSubEvent*) libp->para[0].ref;
   const BraggChamberSubEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AdcData */
static int G__MedToRootDictionary_564_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AdcData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AdcData[n];
     } else {
       p = new((void*) gvp) AdcData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AdcData;
     } else {
       p = new((void*) gvp) AdcData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AdcData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AdcData(
(unsigned short) G__int(libp->para[0]), (long long) G__Longlong(libp->para[1])
, (AdcSubEvent*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) AdcData(
(unsigned short) G__int(libp->para[0]), (long long) G__Longlong(libp->para[1])
, (AdcSubEvent*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((AdcData*) G__getstructoffset())->Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AdcData*) G__getstructoffset())->ModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AdcData*) G__getstructoffset())->LaserOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AdcData*) G__getstructoffset())->FieldUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((AdcData*) G__getstructoffset())->FieldDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AdcData*) G__getstructoffset())->SubEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AdcData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AdcData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AdcData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AdcData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_564_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AdcData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_564_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AdcData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AdcData(*(AdcData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AdcData G__TAdcData;
static int G__MedToRootDictionary_564_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AdcData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AdcData*) (soff+(sizeof(AdcData)*i)))->~G__TAdcData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AdcData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AdcData*) (soff))->~G__TAdcData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_564_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AdcData* dest = (AdcData*) G__getstructoffset();
   *dest = *(AdcData*) libp->para[0].ref;
   const AdcData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DgfData */
static int G__MedToRootDictionary_565_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfData[n];
     } else {
       p = new((void*) gvp) DgfData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfData;
     } else {
       p = new((void*) gvp) DgfData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfData(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (DgfSubEvent*) G__int(libp->para[2]), (unsigned short) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) DgfData(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (DgfSubEvent*) G__int(libp->para[2]), (unsigned short) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfData(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (DgfSubEvent*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) DgfData(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (DgfSubEvent*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfData*) G__getstructoffset())->ModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfData*) G__getstructoffset())->Channel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfData*) G__getstructoffset())->Multiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfData*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((DgfData*) G__getstructoffset())->UserValues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((DgfData*) G__getstructoffset())->Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DgfData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DgfData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DgfData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_565_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_565_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DgfData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DgfData(*(DgfData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DgfData G__TDgfData;
static int G__MedToRootDictionary_565_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DgfData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DgfData*) (soff+(sizeof(DgfData)*i)))->~G__TDgfData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DgfData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DgfData*) (soff))->~G__TDgfData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_565_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfData* dest = (DgfData*) G__getstructoffset();
   *dest = *(DgfData*) libp->para[0].ref;
   const DgfData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BuiltEvent */
static int G__MedToRootDictionary_566_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BuiltEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BuiltEvent[n];
     } else {
       p = new((void*) gvp) BuiltEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BuiltEvent;
     } else {
       p = new((void*) gvp) BuiltEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BuiltEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BuiltEvent(
(unsigned short) G__int(libp->para[0]), (AdcSubEvent*) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) BuiltEvent(
(unsigned short) G__int(libp->para[0]), (AdcSubEvent*) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BuiltEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BuiltEvent(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (DgfSubEvent*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) BuiltEvent(
(unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (DgfSubEvent*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuiltEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuiltEvent*) G__getstructoffset())->AddParticle((unsigned short) G__int(libp->para[0]), (AdcSubEvent*) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuiltEvent*) G__getstructoffset())->AddGamma((unsigned short) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (DgfSubEvent*) G__int(libp->para[2]), (unsigned short) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuiltEvent*) G__getstructoffset())->AddTiming((long long) G__Longlong(libp->para[0]), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuiltEvent*) G__getstructoffset())->EventNumber((long long) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuiltEvent*) G__getstructoffset())->SubEventNumber((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((BuiltEvent*) G__getstructoffset())->NumberOfAdcs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((BuiltEvent*) G__getstructoffset())->NumberOfDgfs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((BuiltEvent*) G__getstructoffset())->EbisTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((BuiltEvent*) G__getstructoffset())->T1Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((BuiltEvent*) G__getstructoffset())->SuperCycleTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((BuiltEvent*) G__getstructoffset())->EventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((BuiltEvent*) G__getstructoffset())->SubEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BuiltEvent*) G__getstructoffset())->Adc((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BuiltEvent*) G__getstructoffset())->Dgf((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BuiltEvent*) G__getstructoffset())->Coincident((GlobalSettings*) G__int(libp->para[0]), (long long) G__Longlong(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((BuiltEvent*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BuiltEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BuiltEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BuiltEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BuiltEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuiltEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BuiltEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BuiltEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BuiltEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_566_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BuiltEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_566_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BuiltEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BuiltEvent(*(BuiltEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BuiltEvent G__TBuiltEvent;
static int G__MedToRootDictionary_566_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BuiltEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BuiltEvent*) (soff+(sizeof(BuiltEvent)*i)))->~G__TBuiltEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BuiltEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BuiltEvent*) (soff))->~G__TBuiltEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_566_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BuiltEvent* dest = (BuiltEvent*) G__getstructoffset();
   *dest = *(BuiltEvent*) libp->para[0].ref;
   const BuiltEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DgfModule */
static int G__MedToRootDictionary_588_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfModule[n];
     } else {
       p = new((void*) gvp) DgfModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfModule;
     } else {
       p = new((void*) gvp) DgfModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfModule*) G__getstructoffset())->AddSubEvent(*((DgfSubEvent*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfModule*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfModule*) G__getstructoffset())->SetModuleNumber((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfModule*) G__getstructoffset())->SetType((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfModule*) G__getstructoffset())->GetModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((DgfModule*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((DgfModule*) G__getstructoffset())->GetNumberOfSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DgfModule*) G__getstructoffset())->GetSubEvent((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DgfModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DgfModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DgfModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_588_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_588_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DgfModule* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DgfModule(*(DgfModule*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DgfModule G__TDgfModule;
static int G__MedToRootDictionary_588_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DgfModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DgfModule*) (soff+(sizeof(DgfModule)*i)))->~G__TDgfModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DgfModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DgfModule*) (soff))->~G__TDgfModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_588_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfModule* dest = (DgfModule*) G__getstructoffset();
   *dest = *(DgfModule*) libp->para[0].ref;
   const DgfModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AdcModule */
static int G__MedToRootDictionary_593_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AdcModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AdcModule[n];
     } else {
       p = new((void*) gvp) AdcModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AdcModule;
     } else {
       p = new((void*) gvp) AdcModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcModule*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcModule*) G__getstructoffset())->SetModuleNumber((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcModule*) G__getstructoffset())->AddSubEvent(*((AdcSubEvent*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcModule*) G__getstructoffset())->DeletaLastSubEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((AdcModule*) G__getstructoffset())->GetNumberOfSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((AdcModule*) G__getstructoffset())->GetModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AdcModule*) G__getstructoffset())->GetSubEvent((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         AdcSubEvent* pobj;
         AdcSubEvent xobj = ((AdcModule*) G__getstructoffset())->GetLastSubEvent();
         pobj = new AdcSubEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AdcModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AdcModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AdcModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AdcModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AdcModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AdcModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_593_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AdcModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_593_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AdcModule* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AdcModule(*(AdcModule*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AdcModule G__TAdcModule;
static int G__MedToRootDictionary_593_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AdcModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AdcModule*) (soff+(sizeof(AdcModule)*i)))->~G__TAdcModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AdcModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AdcModule*) (soff))->~G__TAdcModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_593_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AdcModule* dest = (AdcModule*) G__getstructoffset();
   *dest = *(AdcModule*) libp->para[0].ref;
   const AdcModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PatternUnit */
static int G__MedToRootDictionary_598_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PatternUnit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PatternUnit[n];
     } else {
       p = new((void*) gvp) PatternUnit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PatternUnit;
     } else {
       p = new((void*) gvp) PatternUnit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PatternUnit*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PatternUnit*) G__getstructoffset())->SetModuleNumber((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PatternUnit*) G__getstructoffset())->AddSubEvent(*((PatternUnitSubEvent*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((PatternUnit*) G__getstructoffset())->GetNumberOfSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((PatternUnit*) G__getstructoffset())->GetModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PatternUnit*) G__getstructoffset())->GetSubEvent((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         PatternUnitSubEvent* pobj;
         PatternUnitSubEvent xobj = ((PatternUnit*) G__getstructoffset())->GetLastSubEvent();
         pobj = new PatternUnitSubEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((PatternUnit*) G__getstructoffset())->GetNumberOfTriggers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PatternUnit*) G__getstructoffset())->LaserOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PatternUnit*) G__getstructoffset())->FieldUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PatternUnit*) G__getstructoffset())->FieldDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PatternUnit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PatternUnit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PatternUnit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PatternUnit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PatternUnit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PatternUnit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PatternUnit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PatternUnit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_598_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PatternUnit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_598_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PatternUnit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PatternUnit(*(PatternUnit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PatternUnit G__TPatternUnit;
static int G__MedToRootDictionary_598_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PatternUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PatternUnit*) (soff+(sizeof(PatternUnit)*i)))->~G__TPatternUnit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PatternUnit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PatternUnit*) (soff))->~G__TPatternUnit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_598_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PatternUnit* dest = (PatternUnit*) G__getstructoffset();
   *dest = *(PatternUnit*) libp->para[0].ref;
   const PatternUnit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SISScaler */
static int G__MedToRootDictionary_603_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SISScaler* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SISScaler[n];
     } else {
       p = new((void*) gvp) SISScaler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SISScaler;
     } else {
       p = new((void*) gvp) SISScaler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SISScaler*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SISScaler*) G__getstructoffset())->SetModuleNumber((unsigned short) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SISScaler*) G__getstructoffset())->AddSubEvent(*((ScalerSubEvent*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((SISScaler*) G__getstructoffset())->GetNumberOfSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((SISScaler*) G__getstructoffset())->GetModuleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SISScaler*) G__getstructoffset())->GetSubEvent((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ScalerSubEvent* pobj;
         ScalerSubEvent xobj = ((SISScaler*) G__getstructoffset())->GetLastSubEvent();
         pobj = new ScalerSubEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SISScaler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SISScaler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SISScaler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SISScaler::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SISScaler*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SISScaler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SISScaler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SISScaler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_603_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SISScaler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_603_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SISScaler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SISScaler(*(SISScaler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SISScaler G__TSISScaler;
static int G__MedToRootDictionary_603_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SISScaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SISScaler*) (soff+(sizeof(SISScaler)*i)))->~G__TSISScaler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SISScaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SISScaler*) (soff))->~G__TSISScaler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_603_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SISScaler* dest = (SISScaler*) G__getstructoffset();
   *dest = *(SISScaler*) libp->para[0].ref;
   const SISScaler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DgfScaler */
static int G__MedToRootDictionary_608_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfScaler* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfScaler[n];
     } else {
       p = new((void*) gvp) DgfScaler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DgfScaler;
     } else {
       p = new((void*) gvp) DgfScaler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScaler*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScaler*) G__getstructoffset())->AddSubEvent(*(DgfScalerSubEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((DgfScaler*) G__getstructoffset())->GetNumberOfSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DgfScaler*) G__getstructoffset())->GetSubEvent((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         DgfScalerSubEvent* pobj;
         DgfScalerSubEvent xobj = ((DgfScaler*) G__getstructoffset())->GetLastSubEvent();
         pobj = new DgfScalerSubEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DgfScaler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfScaler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DgfScaler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DgfScaler::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DgfScaler*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfScaler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfScaler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DgfScaler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_608_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DgfScaler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_608_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DgfScaler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DgfScaler(*(DgfScaler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DgfScaler G__TDgfScaler;
static int G__MedToRootDictionary_608_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DgfScaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DgfScaler*) (soff+(sizeof(DgfScaler)*i)))->~G__TDgfScaler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DgfScaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DgfScaler*) (soff))->~G__TDgfScaler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_608_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DgfScaler* dest = (DgfScaler*) G__getstructoffset();
   *dest = *(DgfScaler*) libp->para[0].ref;
   const DgfScaler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BraggChamber */
static int G__MedToRootDictionary_613_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BraggChamber* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BraggChamber[n];
     } else {
       p = new((void*) gvp) BraggChamber[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BraggChamber;
     } else {
       p = new((void*) gvp) BraggChamber;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamber*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamber*) G__getstructoffset())->AddSubEvent(*((BraggChamberSubEvent*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((BraggChamber*) G__getstructoffset())->GetNumberOfSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BraggChamber*) G__getstructoffset())->GetSubEvent((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         BraggChamberSubEvent* pobj;
         BraggChamberSubEvent xobj = ((BraggChamber*) G__getstructoffset())->GetLastSubEvent();
         pobj = new BraggChamberSubEvent(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BraggChamber::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BraggChamber::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BraggChamber::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BraggChamber::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BraggChamber*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BraggChamber::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BraggChamber::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BraggChamber::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_613_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BraggChamber::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_613_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BraggChamber* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BraggChamber(*(BraggChamber*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BraggChamber G__TBraggChamber;
static int G__MedToRootDictionary_613_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BraggChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BraggChamber*) (soff+(sizeof(BraggChamber)*i)))->~G__TBraggChamber();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BraggChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BraggChamber*) (soff))->~G__TBraggChamber();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_613_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BraggChamber* dest = (BraggChamber*) G__getstructoffset();
   *dest = *(BraggChamber*) libp->para[0].ref;
   const BraggChamber& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventBuffer */
static int G__MedToRootDictionary_618_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBuffer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventBuffer[n];
     } else {
       p = new((void*) gvp) EventBuffer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventBuffer;
     } else {
       p = new((void*) gvp) EventBuffer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBuffer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventBuffer((GlobalSettings*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EventBuffer((GlobalSettings*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuffer*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuffer*) G__getstructoffset())->Sort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuffer*) G__getstructoffset())->EventNumber((long long) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((EventBuffer*) G__getstructoffset())->AddParticle((unsigned short) G__int(libp->para[0]), (AdcSubEvent*) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((EventBuffer*) G__getstructoffset())->AddParticle((unsigned short) G__int(libp->para[0]), (AdcSubEvent*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((EventBuffer*) G__getstructoffset())->AddGamma((unsigned short) G__int(libp->para[0]), (DgfSubEvent*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuffer*) G__getstructoffset())->AddTiming((long long) G__Longlong(libp->para[0]), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((EventBuffer*) G__getstructoffset())->NumberOfBuiltEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EventBuffer*) G__getstructoffset())->GetSortedEvent((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventBuffer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventBuffer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventBuffer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventBuffer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuffer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventBuffer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventBuffer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventBuffer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_618_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventBuffer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_618_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventBuffer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventBuffer(*(EventBuffer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventBuffer G__TEventBuffer;
static int G__MedToRootDictionary_618_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventBuffer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventBuffer*) (soff+(sizeof(EventBuffer)*i)))->~G__TEventBuffer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventBuffer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventBuffer*) (soff))->~G__TEventBuffer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_618_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBuffer* dest = (EventBuffer*) G__getstructoffset();
   *dest = *(EventBuffer*) libp->para[0].ref;
   const EventBuffer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UnpackedEvent */
static int G__MedToRootDictionary_655_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UnpackedEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UnpackedEvent[n];
     } else {
       p = new((void*) gvp) UnpackedEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UnpackedEvent;
     } else {
       p = new((void*) gvp) UnpackedEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UnpackedEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new UnpackedEvent((GlobalSettings*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) UnpackedEvent((GlobalSettings*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackedEvent*) G__getstructoffset())->ProcessEvent((MBSDataIO*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->ExtractSubevents((MBSDataIO*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->DecodeDgf((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->DecodeAdc((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->DecodeMesytecAdc((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->DecodeSIS3600PatternUnit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->DecodeBraggChamber((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->DecodeScaler((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->DecodeDgfScaler((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackedEvent*) G__getstructoffset())->SetDgfModule((size_t) G__int(libp->para[0]), *((DgfModule*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackedEvent*) G__getstructoffset())->SetAdcModule((size_t) G__int(libp->para[0]), *((AdcModule*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackedEvent*) G__getstructoffset())->SetPatternUnit((size_t) G__int(libp->para[0]), *((PatternUnit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackedEvent*) G__getstructoffset())->ClearEvt();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->Verify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((UnpackedEvent*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackedEvent*) G__getstructoffset())->GetNumberOfDgfModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackedEvent*) G__getstructoffset())->GetNumberOfAdcModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackedEvent*) G__getstructoffset())->GetNumberOfPatternUnits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetDgfModule((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetAdcModule((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetPatternUnit((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetTimestampModule((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((UnpackedEvent*) G__getstructoffset())->GetTimestamps(*(vector<unsigned short>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((UnpackedEvent*) G__getstructoffset())->GetTimestamps((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetEbisT1AndSuperCycleModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackedEvent*) G__getstructoffset())->ScalerData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetDgfScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackedEvent*) G__getstructoffset())->GetBraggChamber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackedEvent*) G__getstructoffset())->Statistics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) UnpackedEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UnpackedEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) UnpackedEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      UnpackedEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackedEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UnpackedEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UnpackedEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UnpackedEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_655_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UnpackedEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_655_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   UnpackedEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new UnpackedEvent(*(UnpackedEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UnpackedEvent G__TUnpackedEvent;
static int G__MedToRootDictionary_655_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (UnpackedEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((UnpackedEvent*) (soff+(sizeof(UnpackedEvent)*i)))->~G__TUnpackedEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (UnpackedEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((UnpackedEvent*) (soff))->~G__TUnpackedEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_655_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UnpackedEvent* dest = (UnpackedEvent*) G__getstructoffset();
   *dest = *(UnpackedEvent*) libp->para[0].ref;
   const UnpackedEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventBuilder */
static int G__MedToRootDictionary_668_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventBuilder[n];
     } else {
       p = new((void*) gvp) EventBuilder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventBuilder;
     } else {
       p = new((void*) gvp) EventBuilder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventBuilder((GlobalSettings*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) EventBuilder((GlobalSettings*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventBuilder*) G__getstructoffset())->ProcessEvent((MBSDataIO*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuilder*) G__getstructoffset())->BuildEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuilder*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuilder*) G__getstructoffset())->Statistics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MedToRootDictionary_668_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MedToRootDictionary_668_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventBuilder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventBuilder(*(EventBuilder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventBuilder G__TEventBuilder;
static int G__MedToRootDictionary_668_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventBuilder*) (soff+(sizeof(EventBuilder)*i)))->~G__TEventBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventBuilder*) (soff))->~G__TEventBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MedToRootDictionary_668_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventBuilder* dest = (EventBuilder*) G__getstructoffset();
   *dest = *(EventBuilder*) libp->para[0].ref;
   const EventBuilder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GlobalSettings */

/* DgfSubEvent */

/* AdcSubEvent */

/* PatternUnitSubEvent */

/* ScalerSubEvent */

/* DgfScalerSubEvent */

/* BraggChamberSubEvent */

/* AdcData */

/* DgfData */

/* BuiltEvent */

/* DgfModule */

/* AdcModule */

/* PatternUnit */

/* SISScaler */

/* DgfScaler */

/* BraggChamber */

/* EventBuffer */

/* UnpackedEvent */

/* EventBuilder */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMedToRootDictionary {
 public:
  G__Sizep2memfuncMedToRootDictionary(): p(&G__Sizep2memfuncMedToRootDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMedToRootDictionary::*p)();
};

size_t G__get_sizep2memfuncMedToRootDictionary()
{
  G__Sizep2memfuncMedToRootDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMedToRootDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings))) {
     GlobalSettings *G__Lderived;
     G__Lderived=(GlobalSettings*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent))) {
     DgfSubEvent *G__Lderived;
     G__Lderived=(DgfSubEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent))) {
     AdcSubEvent *G__Lderived;
     G__Lderived=(AdcSubEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent))) {
     PatternUnitSubEvent *G__Lderived;
     G__Lderived=(PatternUnitSubEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent))) {
     ScalerSubEvent *G__Lderived;
     G__Lderived=(ScalerSubEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent))) {
     DgfScalerSubEvent *G__Lderived;
     G__Lderived=(DgfScalerSubEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent))) {
     BraggChamberSubEvent *G__Lderived;
     G__Lderived=(BraggChamberSubEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData))) {
     AdcData *G__Lderived;
     G__Lderived=(AdcData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData))) {
     DgfData *G__Lderived;
     G__Lderived=(DgfData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent))) {
     BuiltEvent *G__Lderived;
     G__Lderived=(BuiltEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule))) {
     DgfModule *G__Lderived;
     G__Lderived=(DgfModule*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule))) {
     AdcModule *G__Lderived;
     G__Lderived=(AdcModule*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit))) {
     PatternUnit *G__Lderived;
     G__Lderived=(PatternUnit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler))) {
     SISScaler *G__Lderived;
     G__Lderived=(SISScaler*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler))) {
     DgfScaler *G__Lderived;
     G__Lderived=(DgfScaler*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber))) {
     BraggChamber *G__Lderived;
     G__Lderived=(BraggChamber*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer))) {
     EventBuffer *G__Lderived;
     G__Lderived=(EventBuffer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent))) {
     UnpackedEvent *G__Lderived;
     G__Lderived=(UnpackedEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder))) {
     EventBuilder *G__Lderived;
     G__Lderived=(EventBuilder*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder),G__get_linked_tagnum(&G__MedToRootDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMedToRootDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AdcData>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcDatacOallocatorlEAdcDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcDatacOallocatorlEAdcDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcDatacOallocatorlEAdcDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcDatacOallocatorlEAdcDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcDatacOallocatorlEAdcDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DgfData>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfDatacOallocatorlEDgfDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfDatacOallocatorlEDgfDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfDatacOallocatorlEDgfDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfDatacOallocatorlEDgfDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfDatacOallocatorlEDgfDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MBSDataIO",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN__MBSDataIO),0,-1);
   G__setnewtype(-1,"!< mbsio: main struct to keep track of i/o */",0);
   G__search_typename2("vector<DgfSubEvent>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AdcSubEvent>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PatternUnitSubEvent>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ScalerSubEvent>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DgfScalerSubEvent>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BraggChamberSubEvent>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BuiltEvent>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBuiltEventcOallocatorlEBuiltEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBuiltEventcOallocatorlEBuiltEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBuiltEventcOallocatorlEBuiltEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBuiltEventcOallocatorlEBuiltEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBuiltEventcOallocatorlEBuiltEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DgfModule>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfModulecOallocatorlEDgfModulegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfModulecOallocatorlEDgfModulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfModulecOallocatorlEDgfModulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfModulecOallocatorlEDgfModulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfModulecOallocatorlEDgfModulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AdcModule>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcModulecOallocatorlEAdcModulegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcModulecOallocatorlEAdcModulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcModulecOallocatorlEAdcModulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcModulecOallocatorlEAdcModulegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcModulecOallocatorlEAdcModulegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PatternUnit>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitcOallocatorlEPatternUnitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitcOallocatorlEPatternUnitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitcOallocatorlEPatternUnitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitcOallocatorlEPatternUnitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitcOallocatorlEPatternUnitgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GlobalSettings */
static void G__setup_memvarGlobalSettings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings));
   { GlobalSettings *p; p=(GlobalSettings*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_string),-1,-1,2,"fMedFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_string),-1,-1,2,"fOnBeamFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_string),-1,-1,2,"fOnBeamBackgroundFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_string),-1,-1,2,"fOffBeamFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_string),-1,-1,2,"fScalerFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_string),-1,-1,2,"fSettingsFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TEnv),-1,-1,2,"fSettings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fVerboseLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fLastEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fFirstMiniballDgf=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fLastMiniballDgf=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fBeamdumpDgf=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fFirstAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fLastAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fBraggChamber=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fPatternUnit=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fFirstDgfScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fLastDgfScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fCoincidenceWindowWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fReferencePointOfCoincidenceWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fLowestCoincidence=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fHighestCoincidence=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfDgfModules=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfAdcModules=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfPatternUnits=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfDgfChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfAdcsPerTimestampModule=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfTimestampModules=",0,(char*)NULL);
   G__memvar_setup((void*)0,82,0,0,-1,-1,-1,2,"fTimestampModule=",0,"!fNumberOfTimestampModules");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fTimestampModuleOffset=",0,"!fNumberOfTimestampModules");
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fTimestampChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fEbisT1AndSuperCycleModule=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fEbisChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fT1Channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fSuperCycleChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fMarabouDgfModuleOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fMarabouAdcModuleOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fMarabouPatternUnitOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fRealTimeIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fRunTimeIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fGSLTTimeIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfEventsIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,82,0,0,-1,-1,-1,2,"fChannelIndicesOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fLiveTimeIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fFastPeakIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fBraggTraceLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fSourceRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fIncludeScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fMesytecAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fSPEDEChamb=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNofCaenAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fTypeOfSetup=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fEbisWindowLowerEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fEbisWindowUpperEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fDgfInitDelay=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DgfSubEvent */
static void G__setup_memvarDgfSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent));
   { DgfSubEvent *p; p=(DgfSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"HitPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"EventTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"Energy[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"FastTriggerTime[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"LongFastTriggerTime[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"UserValues[4][6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AdcSubEvent */
static void G__setup_memvarAdcSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent));
   { AdcSubEvent *p; p=(AdcSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fTimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<unsigned short>"),-1,2,"fAdcChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<unsigned short>"),-1,2,"fAdcValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PatternUnitSubEvent */
static void G__setup_memvarPatternUnitSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent));
   { PatternUnitSubEvent *p; p=(PatternUnitSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,2,"Values=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ScalerSubEvent */
static void G__setup_memvarScalerSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent));
   { ScalerSubEvent *p; p=(ScalerSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<unsigned short>"),-1,2,"Channels=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,2,"Values=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DgfScalerSubEvent */
static void G__setup_memvarDgfScalerSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent));
   { DgfScalerSubEvent *p; p=(DgfScalerSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fModuleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fClusterID=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fRealTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fRunTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fGSLTTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),G__defined_typename("vector<long long>"),-1,2,"fLiveTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fFastPeak=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fNumberOfDgfChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BraggChamberSubEvent */
static void G__setup_memvarBraggChamberSubEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent));
   { BraggChamberSubEvent *p; p=(BraggChamberSubEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fDataSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fTrigger[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fOverflow[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,2,"fData[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AdcData */
static void G__setup_memvarAdcData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData));
   { AdcData *p; p=(AdcData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fModuleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fLaserOn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fFieldUp=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fFieldDown=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent),-1,-1,2,"fAdcSubEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DgfData */
static void G__setup_memvarDgfData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData));
   { DgfData *p; p=(DgfData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fModuleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"fEventTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fFastTriggerTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"fLongFastTriggerTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fUserValues[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BuiltEvent */
static void G__setup_memvarBuiltEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent));
   { BuiltEvent *p; p=(BuiltEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"ebisTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"t1Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"superCycleTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"eventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"subEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcDatacOallocatorlEAdcDatagRsPgR),G__defined_typename("vector<AdcData>"),-1,2,"adcData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfDatacOallocatorlEDgfDatagRsPgR),G__defined_typename("vector<DgfData>"),-1,2,"dgfData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DgfModule */
static void G__setup_memvarDgfModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule));
   { DgfModule *p; p=(DgfModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fModuleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgR),G__defined_typename("vector<DgfSubEvent>"),-1,2,"fSubEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AdcModule */
static void G__setup_memvarAdcModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule));
   { AdcModule *p; p=(AdcModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"ModuleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgR),G__defined_typename("vector<AdcSubEvent>"),-1,2,"SubEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PatternUnit */
static void G__setup_memvarPatternUnit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit));
   { PatternUnit *p; p=(PatternUnit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"ModuleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgR),G__defined_typename("vector<PatternUnitSubEvent>"),-1,2,"SubEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SISScaler */
static void G__setup_memvarSISScaler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler));
   { SISScaler *p; p=(SISScaler*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"ModuleNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgR),G__defined_typename("vector<ScalerSubEvent>"),-1,2,"SubEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DgfScaler */
static void G__setup_memvarDgfScaler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler));
   { DgfScaler *p; p=(DgfScaler*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgR),G__defined_typename("vector<DgfScalerSubEvent>"),-1,2,"SubEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BraggChamber */
static void G__setup_memvarBraggChamber(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber));
   { BraggChamber *p; p=(BraggChamber*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgR),G__defined_typename("vector<BraggChamberSubEvent>"),-1,2,"SubEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventBuffer */
static void G__setup_memvarEventBuffer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer));
   { EventBuffer *p; p=(EventBuffer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings),-1,-1,2,"Settings=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"Sorted=",0,(char*)NULL);
   G__memvar_setup((void*)0,82,0,0,-1,-1,-1,2,"SubEventNumber=",0,"!BuiltEvents.size()");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEBuiltEventcOallocatorlEBuiltEventgRsPgR),G__defined_typename("vector<BuiltEvent>"),-1,2,"BuiltEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UnpackedEvent */
static void G__setup_memvarUnpackedEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent));
   { UnpackedEvent *p; p=(UnpackedEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings),-1,-1,2,"Settings=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"EventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"WrongHitPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"WrongAdcHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"AdcOverflow=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"AdcUnderflow=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEDgfModulecOallocatorlEDgfModulegRsPgR),G__defined_typename("vector<DgfModule>"),-1,2,"DgfModules=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEAdcModulecOallocatorlEAdcModulegRsPgR),G__defined_typename("vector<AdcModule>"),-1,2,"AdcModules=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEPatternUnitcOallocatorlEPatternUnitgRsPgR),G__defined_typename("vector<PatternUnit>"),-1,2,"PatternUnits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler),-1,-1,2,"Scaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler),-1,-1,2,"fDgfScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber),-1,-1,2,"fBraggChamber=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fScalerData=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fBufferTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventBuilder */
static void G__setup_memvarEventBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder));
   { EventBuilder *p; p=(EventBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings),-1,-1,4,"Settings=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TFile),-1,-1,4,"OnBeamFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TTree),-1,-1,4,"OnBeamTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent),-1,-1,4,"OnBeamEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TFile),-1,-1,4,"OnBeamBackgroundFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TTree),-1,-1,4,"OnBeamBackgroundTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent),-1,-1,4,"OnBeamBackgroundEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TFile),-1,-1,4,"OffBeamFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TTree),-1,-1,4,"OffBeamTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent),-1,-1,4,"OffBeamEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TFile),-1,-1,4,"ScalerFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TTree),-1,-1,4,"ScalerTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler),-1,-1,4,"fScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler),-1,-1,4,"fDgfScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber),-1,-1,4,"fBraggChamber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent),-1,-1,4,"unpackedEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer),-1,-1,4,"eventBuffer=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"TotalNumberOfBytesCommittedToOnBeamTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"TotalNumberOfBytesCommittedToOnBeamBackgroundTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"TotalNumberOfBytesCommittedToOffBeamTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"TotalNumberOfBytesCommittedToScalerTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"NumberOfBytesWrittenToOnBeamFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"NumberOfBytesWrittenToOnBeamBackgroundFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"NumberOfBytesWrittenToOffBeamFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"NumberOfBytesWrittenToScalerFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"PatternUnitMismatches=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"TotalNumberOfEbisPulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"TotalNumberOfT1Pulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"TotalNumberOfSuperCyclePulses=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"EbisTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"T1Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"SuperCycleTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"LaserOn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"Field=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FieldUp=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FieldDown=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMedToRootDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGlobalSettings(void) {
   /* GlobalSettings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings));
   G__memfunc_setup("GlobalSettings",1442,G__MedToRootDictionary_557_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings), -1, 0, 0, 1, 1, 0, "", "default ctor", (void*) NULL, 0);
   G__memfunc_setup("GlobalSettings",1442,G__MedToRootDictionary_557_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings), -1, 0, 2, 1, 1, 0, 
"h - - 0 - - C - - 2 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirstMiniballDgf",1601,G__MedToRootDictionary_557_0_3, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LastMiniballDgf",1485,G__MedToRootDictionary_557_0_4, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamdumpDgf",1084,G__MedToRootDictionary_557_0_5, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirstAdc",784,G__MedToRootDictionary_557_0_6, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LastAdc",668,G__MedToRootDictionary_557_0_7, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BraggChamber",1173,G__MedToRootDictionary_557_0_8, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Scaler",602,G__MedToRootDictionary_557_0_9, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PatternUnit",1150,G__MedToRootDictionary_557_0_10, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirstDgfScaler",1395,G__MedToRootDictionary_557_0_11, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LastDgfScaler",1279,G__MedToRootDictionary_557_0_12, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfDgfModules",1800,G__MedToRootDictionary_557_0_13, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfAdcModules",1791,G__MedToRootDictionary_557_0_14, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfPatternUnits",2063,G__MedToRootDictionary_557_0_15, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfDgfChannels",1883,G__MedToRootDictionary_557_0_16, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfTimestampModules",2475,G__MedToRootDictionary_557_0_17, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimestampModule",1562,G__MedToRootDictionary_557_0_18, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimestampModuleOffset",2177,G__MedToRootDictionary_557_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimestampChannel",1645,G__MedToRootDictionary_557_0_20, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfAdcsPerTimestampModule",3034,G__MedToRootDictionary_557_0_21, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EbisT1AndSuperCycleModule",2432,G__MedToRootDictionary_557_0_22, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EbisChannel",1084,G__MedToRootDictionary_557_0_23, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T1Channel",830,G__MedToRootDictionary_557_0_24, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SuperCycleChannel",1720,G__MedToRootDictionary_557_0_25, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarabouDgfModuleOffset",2213,G__MedToRootDictionary_557_0_26, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarabouAdcModuleOffset",2204,G__MedToRootDictionary_557_0_27, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MarabouPatternUnitOffset",2476,G__MedToRootDictionary_557_0_28, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LastEvent",918,G__MedToRootDictionary_557_0_29, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerboseLevel",1230,G__MedToRootDictionary_557_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MedFile",662,G__MedToRootDictionary_557_0_31, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBeamFile",946,G__MedToRootDictionary_557_0_32, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OnBeamBackgroundFile",1970,G__MedToRootDictionary_557_0_33, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OffBeamFile",1040,G__MedToRootDictionary_557_0_34, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScalerFile",986,G__MedToRootDictionary_557_0_35, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTimestampModule",1750,G__MedToRootDictionary_557_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - ModuleNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coincident",1024,G__MedToRootDictionary_557_0_37, 103, -1, -1, 0, 1, 1, 1, 0, "n - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RealTimeIndex",1291,G__MedToRootDictionary_557_0_38, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunTimeIndex",1212,G__MedToRootDictionary_557_0_39, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GSLTTimeIndex",1217,G__MedToRootDictionary_557_0_40, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfEventsIndex",1931,G__MedToRootDictionary_557_0_41, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChannelIndicesOffset",2015,G__MedToRootDictionary_557_0_42, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LiveTimeIndex",1303,G__MedToRootDictionary_557_0_43, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastPeakIndex",1287,G__MedToRootDictionary_557_0_44, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BraggTraceLength",1588,G__MedToRootDictionary_557_0_45, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SourceRun",934,G__MedToRootDictionary_557_0_46, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncludeScaler",1310,G__MedToRootDictionary_557_0_47, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MesytecAdc",994,G__MedToRootDictionary_557_0_48, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SPEDEChamb",844,G__MedToRootDictionary_557_0_49, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NofCaenAdc",930,G__MedToRootDictionary_557_0_50, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TypeOfSetup",1128,G__MedToRootDictionary_557_0_51, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EbisWindowLowerEdge",1913,G__MedToRootDictionary_557_0_52, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EbisWindowUpperEdge",1916,G__MedToRootDictionary_557_0_53, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DgfInitDelay",1172,G__MedToRootDictionary_557_0_54, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Verify",629,G__MedToRootDictionary_557_0_55, 103, -1, -1, 0, 0, 1, 1, 0, "", "performs some consistency checks on the settings", (void*) NULL, 0);
   G__memfunc_setup("ReadSettings",1229,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadUnpackerSettings",2054,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_557_0_58, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GlobalSettings::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_557_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlobalSettings::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_557_0_60, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GlobalSettings::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_557_0_61, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GlobalSettings::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_557_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_557_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlobalSettings::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_557_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GlobalSettings::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_557_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GlobalSettings::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_557_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GlobalSettings::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GlobalSettings", 1442, G__MedToRootDictionary_557_0_70, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings), -1, 0, 1, 1, 1, 0, "u 'GlobalSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GlobalSettings", 1568, G__MedToRootDictionary_557_0_71, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_557_0_72, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_GlobalSettings), -1, 1, 1, 1, 1, 0, "u 'GlobalSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDgfSubEvent(void) {
   /* DgfSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent));
   G__memfunc_setup("DgfSubEvent",1085,G__MedToRootDictionary_558_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent), -1, 0, 0, 1, 1, 0, "", "default ctor", (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_558_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitPattern",1327,G__MedToRootDictionary_558_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - hitPattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTime",1213,G__MedToRootDictionary_558_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"r - - 0 - RunTime r - - 0 - EventTimeHigh "
"r - - 0 - EventTimeLow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFastTriggerTime",1821,G__MedToRootDictionary_558_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - channelNumber r - - 0 - fastTriggerTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__MedToRootDictionary_558_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - channelNumber r - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLongFastTriggerTime",2221,G__MedToRootDictionary_558_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"r - - 0 - channelNumber r - - 0 - RunTime "
"r - - 0 - EventTimeHigh r - - 0 - EventTimeLow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUserValues",1339,G__MedToRootDictionary_558_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"R - - 1 - q r - - 0 - channelNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPattern",1315,G__MedToRootDictionary_558_0_9, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventTime",1201,G__MedToRootDictionary_558_0_10, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFastTriggerTime",1809,G__MedToRootDictionary_558_0_11, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - channelNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__MedToRootDictionary_558_0_12, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - channelNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfChannels",1898,G__MedToRootDictionary_558_0_13, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLongFastTriggerTime",2209,G__MedToRootDictionary_558_0_14, 110, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - channelNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserValues",1327,G__MedToRootDictionary_558_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - channelNumber R - - 0 - userValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_558_0_16, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DgfSubEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_558_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfSubEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_558_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DgfSubEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_558_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DgfSubEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_558_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_558_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfSubEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_558_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfSubEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_558_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfSubEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_558_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfSubEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DgfSubEvent", 1085, G__MedToRootDictionary_558_0_28, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent), -1, 0, 1, 1, 1, 0, "u 'DgfSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DgfSubEvent", 1211, G__MedToRootDictionary_558_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_558_0_30, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent), -1, 1, 1, 1, 1, 0, "u 'DgfSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAdcSubEvent(void) {
   /* AdcSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent));
   G__memfunc_setup("AdcSubEvent",1076,G__MedToRootDictionary_559_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_559_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__MedToRootDictionary_559_0_3, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__MedToRootDictionary_559_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - adcChannel r - - 0 - adcValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Timestamp",948,G__MedToRootDictionary_559_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "n - - 0 - timeStamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdcChannel",961,G__MedToRootDictionary_559_0_6, 117, G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<unsigned short>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdcValue",773,G__MedToRootDictionary_559_0_7, 117, G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("vector<unsigned short>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdcChannel",961,G__MedToRootDictionary_559_0_8, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdcValue",773,G__MedToRootDictionary_559_0_9, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastAdcChannel",1653,G__MedToRootDictionary_559_0_10, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastAdcValue",1465,G__MedToRootDictionary_559_0_11, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__MedToRootDictionary_559_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"r - - 0 - Index r - - 1 - adcChannel "
"r - - 1 - adcValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Timestamp",948,G__MedToRootDictionary_559_0_13, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_559_0_14, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AdcSubEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_559_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcSubEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_559_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AdcSubEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_559_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AdcSubEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_559_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_559_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcSubEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_559_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AdcSubEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_559_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcSubEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_559_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AdcSubEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AdcSubEvent", 1076, G__MedToRootDictionary_559_0_26, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent), -1, 0, 1, 1, 1, 0, "u 'AdcSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AdcSubEvent", 1202, G__MedToRootDictionary_559_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_559_0_28, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent), -1, 1, 1, 1, 1, 0, "u 'AdcSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPatternUnitSubEvent(void) {
   /* PatternUnitSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent));
   G__memfunc_setup("PatternUnitSubEvent",1962,G__MedToRootDictionary_560_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__MedToRootDictionary_560_0_2, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_560_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__MedToRootDictionary_560_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__MedToRootDictionary_560_0_5, 104, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastValue",1201,G__MedToRootDictionary_560_0_6, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_560_0_7, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PatternUnitSubEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_560_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PatternUnitSubEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_560_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PatternUnitSubEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_560_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PatternUnitSubEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_560_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_560_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PatternUnitSubEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_560_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PatternUnitSubEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_560_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PatternUnitSubEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_560_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PatternUnitSubEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PatternUnitSubEvent", 1962, G__MedToRootDictionary_560_0_19, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent), -1, 0, 1, 1, 1, 0, "u 'PatternUnitSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PatternUnitSubEvent", 2088, G__MedToRootDictionary_560_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_560_0_21, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent), -1, 1, 1, 1, 1, 0, "u 'PatternUnitSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncScalerSubEvent(void) {
   /* ScalerSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent));
   G__memfunc_setup("ScalerSubEvent",1414,G__MedToRootDictionary_561_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__MedToRootDictionary_561_0_2, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_561_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__MedToRootDictionary_561_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - Channel h - - 0 - Value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__MedToRootDictionary_561_0_5, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__MedToRootDictionary_561_0_6, 104, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastChannel",1389,G__MedToRootDictionary_561_0_7, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastValue",1201,G__MedToRootDictionary_561_0_8, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_561_0_9, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ScalerSubEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_561_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScalerSubEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_561_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ScalerSubEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_561_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ScalerSubEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_561_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_561_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScalerSubEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_561_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScalerSubEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_561_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScalerSubEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_561_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScalerSubEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScalerSubEvent", 1414, G__MedToRootDictionary_561_0_21, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent), -1, 0, 1, 1, 1, 0, "u 'ScalerSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScalerSubEvent", 1540, G__MedToRootDictionary_561_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_561_0_23, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent), -1, 1, 1, 1, 1, 0, "u 'ScalerSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDgfScalerSubEvent(void) {
   /* DgfScalerSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent));
   G__memfunc_setup("DgfScalerSubEvent",1687,G__MedToRootDictionary_562_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DgfScalerSubEvent",1687,G__MedToRootDictionary_562_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent), -1, 0, 1, 1, 1, 0, "r - - 0 - NumberOfDgfChannels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_562_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModuleNumber",1231,G__MedToRootDictionary_562_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - DgfID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterID",879,G__MedToRootDictionary_562_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - ClusterID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RealTime",787,G__MedToRootDictionary_562_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "n - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunTime",708,G__MedToRootDictionary_562_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "n - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GSLTTime",713,G__MedToRootDictionary_562_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "n - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfEvents",1427,G__MedToRootDictionary_562_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - numberofevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LiveTime",799,G__MedToRootDictionary_562_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - i n - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastPeak",783,G__MedToRootDictionary_562_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - i h - - 0 - fastpeak", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModuleNumber",1231,G__MedToRootDictionary_562_0_12, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterID",879,G__MedToRootDictionary_562_0_13, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RealTime",787,G__MedToRootDictionary_562_0_14, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunTime",708,G__MedToRootDictionary_562_0_15, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GSLTTime",713,G__MedToRootDictionary_562_0_16, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfEvents",1427,G__MedToRootDictionary_562_0_17, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LiveTime",799,G__MedToRootDictionary_562_0_18, 110, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastPeak",783,G__MedToRootDictionary_562_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_562_0_20, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DgfScalerSubEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_562_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfScalerSubEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_562_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DgfScalerSubEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_562_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DgfScalerSubEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_562_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_562_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfScalerSubEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_562_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfScalerSubEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_562_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfScalerSubEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_562_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfScalerSubEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DgfScalerSubEvent", 1687, G__MedToRootDictionary_562_0_32, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent), -1, 0, 1, 1, 1, 0, "u 'DgfScalerSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DgfScalerSubEvent", 1813, G__MedToRootDictionary_562_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_562_0_34, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent), -1, 1, 1, 1, 1, 0, "u 'DgfScalerSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBraggChamberSubEvent(void) {
   /* BraggChamberSubEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent));
   G__memfunc_setup("BraggChamberSubEvent",1985,G__MedToRootDictionary_563_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_563_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataSize",789,G__MedToRootDictionary_563_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - Size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trigger",724,G__MedToRootDictionary_563_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - i g - - 0 - Trigger", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Overflow",852,G__MedToRootDictionary_563_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - i g - - 0 - Overflow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__MedToRootDictionary_563_0_6, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<unsigned int>"), 0, 1, 1, 1, 0, "r - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataSize",789,G__MedToRootDictionary_563_0_7, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trigger",724,G__MedToRootDictionary_563_0_8, 103, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Overflow",852,G__MedToRootDictionary_563_0_9, 103, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_563_0_10, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BraggChamberSubEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_563_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BraggChamberSubEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_563_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BraggChamberSubEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_563_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BraggChamberSubEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_563_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_563_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BraggChamberSubEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_563_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BraggChamberSubEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_563_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BraggChamberSubEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_563_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BraggChamberSubEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BraggChamberSubEvent", 1985, G__MedToRootDictionary_563_0_22, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent), -1, 0, 1, 1, 1, 0, "u 'BraggChamberSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BraggChamberSubEvent", 2111, G__MedToRootDictionary_563_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_563_0_24, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent), -1, 1, 1, 1, 1, 0, "u 'BraggChamberSubEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAdcData(void) {
   /* AdcData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData));
   G__memfunc_setup("AdcData",642,G__MedToRootDictionary_564_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdcData",642,G__MedToRootDictionary_564_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData), -1, 0, 6, 1, 1, 0, 
"r - - 0 - - n - - 0 - - "
"U 'AdcSubEvent' - 0 - - g - - 0 - - "
"g - - 0 - - g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__MedToRootDictionary_564_0_3, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModuleNumber",1231,G__MedToRootDictionary_564_0_4, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LaserOn",692,G__MedToRootDictionary_564_0_5, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FieldUp",681,G__MedToRootDictionary_564_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FieldDown",892,G__MedToRootDictionary_564_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubEvent",812,G__MedToRootDictionary_564_0_8, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_564_0_9, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AdcData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_564_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_564_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AdcData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_564_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AdcData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_564_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_564_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_564_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AdcData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_564_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_564_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AdcData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AdcData", 642, G__MedToRootDictionary_564_0_21, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData), -1, 0, 1, 1, 1, 0, "u 'AdcData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AdcData", 768, G__MedToRootDictionary_564_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_564_0_23, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData), -1, 1, 1, 1, 1, 0, "u 'AdcData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDgfData(void) {
   /* DgfData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData));
   G__memfunc_setup("DgfData",651,G__MedToRootDictionary_565_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DgfData",651,G__MedToRootDictionary_565_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData), -1, 0, 4, 1, 1, 0, 
"r - - 0 - - r - - 0 - - "
"U 'DgfSubEvent' - 0 - - r - - 0 '1' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModuleNumber",1231,G__MedToRootDictionary_565_0_3, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Channel",697,G__MedToRootDictionary_565_0_4, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiplicity",1289,G__MedToRootDictionary_565_0_5, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__MedToRootDictionary_565_0_6, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UserValues",1039,G__MedToRootDictionary_565_0_7, 82, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__MedToRootDictionary_565_0_8, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_565_0_9, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DgfData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_565_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_565_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DgfData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_565_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DgfData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_565_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_565_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_565_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_565_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_565_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DgfData", 651, G__MedToRootDictionary_565_0_21, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData), -1, 0, 1, 1, 1, 0, "u 'DgfData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DgfData", 777, G__MedToRootDictionary_565_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_565_0_23, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData), -1, 1, 1, 1, 1, 0, "u 'DgfData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBuiltEvent(void) {
   /* BuiltEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent));
   G__memfunc_setup("BuiltEvent",1026,G__MedToRootDictionary_566_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuiltEvent",1026,G__MedToRootDictionary_566_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent), -1, 0, 6, 1, 1, 0, 
"r - - 0 - - U 'AdcSubEvent' - 0 - - "
"n - - 0 - - g - - 0 - - "
"g - - 0 - - g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuiltEvent",1026,G__MedToRootDictionary_566_0_3, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent), -1, 0, 3, 1, 1, 0, 
"r - - 0 - - r - - 0 - - "
"U 'DgfSubEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_566_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__MedToRootDictionary_566_0_5, 121, -1, -1, 0, 6, 1, 1, 0, 
"r - - 0 - - U 'AdcSubEvent' - 0 - - "
"n - - 0 - - g - - 0 - - "
"g - - 0 - - g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGamma",748,G__MedToRootDictionary_566_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"r - - 0 - - r - - 0 - - "
"U 'DgfSubEvent' - 0 - - r - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTiming",881,G__MedToRootDictionary_566_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - - 0 - EbisTime n - - 0 - T1Time "
"n - - 0 - SuperCycleTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventNumber",1131,G__MedToRootDictionary_566_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "n - - 0 - EventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubEventNumber",1429,G__MedToRootDictionary_566_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - SubEventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfAdcs",1177,G__MedToRootDictionary_566_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfDgfs",1186,G__MedToRootDictionary_566_0_11, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EbisTime",786,G__MedToRootDictionary_566_0_12, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T1Time",532,G__MedToRootDictionary_566_0_13, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SuperCycleTime",1422,G__MedToRootDictionary_566_0_14, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventNumber",1131,G__MedToRootDictionary_566_0_15, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubEventNumber",1429,G__MedToRootDictionary_566_0_16, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Adc",264,G__MedToRootDictionary_566_0_17, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcData), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dgf",273,G__MedToRootDictionary_566_0_18, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfData), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Coincident",1024,G__MedToRootDictionary_566_0_19, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'GlobalSettings' - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__MedToRootDictionary_566_0_20, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_566_0_21, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BuiltEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_566_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BuiltEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_566_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BuiltEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_566_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BuiltEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_566_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_566_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BuiltEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_566_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BuiltEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_566_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BuiltEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_566_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BuiltEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BuiltEvent", 1026, G__MedToRootDictionary_566_0_33, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent), -1, 0, 1, 1, 1, 0, "u 'BuiltEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BuiltEvent", 1152, G__MedToRootDictionary_566_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_566_0_35, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent), -1, 1, 1, 1, 1, 0, "u 'BuiltEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDgfModule(void) {
   /* DgfModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule));
   G__memfunc_setup("DgfModule",887,G__MedToRootDictionary_588_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSubEvent",1077,G__MedToRootDictionary_588_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'DgfSubEvent' - 0 - NewSubEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_588_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModuleNumber",1531,G__MedToRootDictionary_588_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - moduleNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__MedToRootDictionary_588_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleNumber",1519,G__MedToRootDictionary_588_0_6, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__MedToRootDictionary_588_0_7, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSubEvents",2013,G__MedToRootDictionary_588_0_8, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubEvent",1100,G__MedToRootDictionary_588_0_9, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfSubEvent), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_588_0_10, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DgfModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_588_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_588_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DgfModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_588_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DgfModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_588_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_588_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_588_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_588_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_588_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfModule::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DgfModule", 887, G__MedToRootDictionary_588_0_22, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule), -1, 0, 1, 1, 1, 0, "u 'DgfModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DgfModule", 1013, G__MedToRootDictionary_588_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_588_0_24, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule), -1, 1, 1, 1, 1, 0, "u 'DgfModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAdcModule(void) {
   /* AdcModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule));
   G__memfunc_setup("AdcModule",878,G__MedToRootDictionary_593_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule), -1, 0, 0, 1, 1, 0, "", "default ctor", (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_593_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModuleNumber",1531,G__MedToRootDictionary_593_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - moduleNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSubEvent",1077,G__MedToRootDictionary_593_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AdcSubEvent' - 0 - NewSubEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeletaLastSubEvent",1807,G__MedToRootDictionary_593_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSubEvents",2013,G__MedToRootDictionary_593_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleNumber",1519,G__MedToRootDictionary_593_0_7, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubEvent",1100,G__MedToRootDictionary_593_0_8, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastSubEvent",1504,G__MedToRootDictionary_593_0_9, 117, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_593_0_10, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AdcModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_593_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_593_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AdcModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_593_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AdcModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_593_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_593_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_593_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AdcModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_593_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AdcModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_593_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AdcModule::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AdcModule", 878, G__MedToRootDictionary_593_0_22, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule), -1, 0, 1, 1, 1, 0, "u 'AdcModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AdcModule", 1004, G__MedToRootDictionary_593_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_593_0_24, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule), -1, 1, 1, 1, 1, 0, "u 'AdcModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPatternUnit(void) {
   /* PatternUnit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit));
   G__memfunc_setup("PatternUnit",1150,G__MedToRootDictionary_598_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_598_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModuleNumber",1531,G__MedToRootDictionary_598_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - moduleNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSubEvent",1077,G__MedToRootDictionary_598_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PatternUnitSubEvent' - 0 - SubEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSubEvents",2013,G__MedToRootDictionary_598_0_5, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleNumber",1519,G__MedToRootDictionary_598_0_6, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubEvent",1100,G__MedToRootDictionary_598_0_7, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastSubEvent",1504,G__MedToRootDictionary_598_0_8, 117, G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnitSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfTriggers",1925,G__MedToRootDictionary_598_0_9, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LaserOn",692,G__MedToRootDictionary_598_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FieldUp",681,G__MedToRootDictionary_598_0_11, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FieldDown",892,G__MedToRootDictionary_598_0_12, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_598_0_13, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PatternUnit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_598_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PatternUnit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_598_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PatternUnit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_598_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PatternUnit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_598_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_598_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PatternUnit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_598_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PatternUnit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_598_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PatternUnit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_598_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PatternUnit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PatternUnit", 1150, G__MedToRootDictionary_598_0_25, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit), -1, 0, 1, 1, 1, 0, "u 'PatternUnit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PatternUnit", 1276, G__MedToRootDictionary_598_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_598_0_27, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit), -1, 1, 1, 1, 1, 0, "u 'PatternUnit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSISScaler(void) {
   /* SISScaler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler));
   G__memfunc_setup("SISScaler",841,G__MedToRootDictionary_603_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_603_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetModuleNumber",1531,G__MedToRootDictionary_603_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - moduleNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSubEvent",1077,G__MedToRootDictionary_603_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ScalerSubEvent' - 0 - SubEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSubEvents",2013,G__MedToRootDictionary_603_0_5, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleNumber",1519,G__MedToRootDictionary_603_0_6, 114, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubEvent",1100,G__MedToRootDictionary_603_0_7, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastSubEvent",1504,G__MedToRootDictionary_603_0_8, 117, G__get_linked_tagnum(&G__MedToRootDictionaryLN_ScalerSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_603_0_9, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SISScaler::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_603_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SISScaler::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_603_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SISScaler::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_603_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SISScaler::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_603_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_603_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SISScaler::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_603_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SISScaler::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_603_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SISScaler::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_603_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SISScaler::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SISScaler", 841, G__MedToRootDictionary_603_0_21, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler), -1, 0, 1, 1, 1, 0, "u 'SISScaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SISScaler", 967, G__MedToRootDictionary_603_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_603_0_23, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler), -1, 1, 1, 1, 1, 0, "u 'SISScaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDgfScaler(void) {
   /* DgfScaler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler));
   G__memfunc_setup("DgfScaler",875,G__MedToRootDictionary_608_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_608_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSubEvent",1077,G__MedToRootDictionary_608_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'DgfScalerSubEvent' - 1 - SubEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSubEvents",2013,G__MedToRootDictionary_608_0_4, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubEvent",1100,G__MedToRootDictionary_608_0_5, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastSubEvent",1504,G__MedToRootDictionary_608_0_6, 117, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScalerSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_608_0_7, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DgfScaler::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_608_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfScaler::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_608_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DgfScaler::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_608_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DgfScaler::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_608_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_608_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfScaler::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_608_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfScaler::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_608_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DgfScaler::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_608_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DgfScaler::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DgfScaler", 875, G__MedToRootDictionary_608_0_19, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler), -1, 0, 1, 1, 1, 0, "u 'DgfScaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DgfScaler", 1001, G__MedToRootDictionary_608_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_608_0_21, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler), -1, 1, 1, 1, 1, 0, "u 'DgfScaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBraggChamber(void) {
   /* BraggChamber */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber));
   G__memfunc_setup("BraggChamber",1173,G__MedToRootDictionary_613_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_613_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSubEvent",1077,G__MedToRootDictionary_613_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'BraggChamberSubEvent' - 0 - SubEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSubEvents",2013,G__MedToRootDictionary_613_0_4, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubEvent",1100,G__MedToRootDictionary_613_0_5, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastSubEvent",1504,G__MedToRootDictionary_613_0_6, 117, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamberSubEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_613_0_7, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BraggChamber::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_613_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BraggChamber::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_613_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BraggChamber::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_613_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BraggChamber::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_613_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_613_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BraggChamber::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_613_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BraggChamber::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_613_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BraggChamber::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_613_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BraggChamber::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BraggChamber", 1173, G__MedToRootDictionary_613_0_19, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber), -1, 0, 1, 1, 1, 0, "u 'BraggChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BraggChamber", 1299, G__MedToRootDictionary_613_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_613_0_21, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber), -1, 1, 1, 1, 1, 0, "u 'BraggChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventBuffer(void) {
   /* EventBuffer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer));
   G__memfunc_setup("EventBuffer",1116,G__MedToRootDictionary_618_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventBuffer",1116,G__MedToRootDictionary_618_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer), -1, 0, 1, 1, 1, 0, "U 'GlobalSettings' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_618_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sort",424,G__MedToRootDictionary_618_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventNumber",1131,G__MedToRootDictionary_618_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "n - - 0 - eventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__MedToRootDictionary_618_0_6, 107, -1, G__defined_typename("size_t"), 0, 6, 1, 1, 0, 
"r - - 0 - - U 'AdcSubEvent' - 0 - - "
"n - - 0 - - g - - 0 - - "
"g - - 0 - - g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__MedToRootDictionary_618_0_7, 107, -1, G__defined_typename("size_t"), 0, 5, 1, 1, 0, 
"r - - 0 - - U 'AdcSubEvent' - 0 - - "
"g - - 0 - - g - - 0 - - "
"g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGamma",748,G__MedToRootDictionary_618_0_8, 107, -1, G__defined_typename("size_t"), 0, 2, 1, 1, 0, 
"r - - 0 - - U 'DgfSubEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTiming",881,G__MedToRootDictionary_618_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - - 0 - - n - - 0 - - "
"n - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfBuiltEvents",1939,G__MedToRootDictionary_618_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSortedEvent",1427,G__MedToRootDictionary_618_0_11, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BuiltEvent), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_618_0_12, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventBuffer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_618_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventBuffer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_618_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventBuffer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_618_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventBuffer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_618_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_618_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventBuffer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_618_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventBuffer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_618_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventBuffer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_618_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventBuffer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventBuffer", 1116, G__MedToRootDictionary_618_0_24, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer), -1, 0, 1, 1, 1, 0, "u 'EventBuffer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventBuffer", 1242, G__MedToRootDictionary_618_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_618_0_26, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuffer), -1, 1, 1, 1, 1, 0, "u 'EventBuffer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpackedEvent(void) {
   /* UnpackedEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent));
   G__memfunc_setup("UnpackedEvent",1325,G__MedToRootDictionary_655_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnpackedEvent",1325,G__MedToRootDictionary_655_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent), -1, 0, 1, 1, 1, 0, "U 'GlobalSettings' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,G__MedToRootDictionary_655_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U '_MBSDataIO' 'MBSDataIO' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtractSubevents",1690,G__MedToRootDictionary_655_0_4, 103, -1, -1, 0, 1, 1, 1, 0, "U '_MBSDataIO' 'MBSDataIO' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeDgf",853,G__MedToRootDictionary_655_0_5, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeAdc",844,G__MedToRootDictionary_655_0_6, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeMesytecAdc",1574,G__MedToRootDictionary_655_0_7, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeSIS3600PatternUnit",2170,G__MedToRootDictionary_655_0_8, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeBraggChamber",1753,G__MedToRootDictionary_655_0_9, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeScaler",1182,G__MedToRootDictionary_655_0_10, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeDgfScaler",1455,G__MedToRootDictionary_655_0_11, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDgfModule",1187,G__MedToRootDictionary_655_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - Index u 'DgfModule' - 0 - NewDgfModule", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAdcModule",1178,G__MedToRootDictionary_655_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - Index u 'AdcModule' - 0 - NewAdcModule", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPatternUnit",1450,G__MedToRootDictionary_655_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - Index u 'PatternUnit' - 0 - NewPatternUnit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvt",790,G__MedToRootDictionary_655_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Verify",629,G__MedToRootDictionary_655_0_16, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventNumber",1419,G__MedToRootDictionary_655_0_17, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfDgfModules",2088,G__MedToRootDictionary_655_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfAdcModules",2079,G__MedToRootDictionary_655_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfPatternUnits",2351,G__MedToRootDictionary_655_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDgfModule",1175,G__MedToRootDictionary_655_0_21, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAdcModule",1166,G__MedToRootDictionary_655_0_22, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_AdcModule), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPatternUnit",1438,G__MedToRootDictionary_655_0_23, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_PatternUnit), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestampModule",1850,G__MedToRootDictionary_655_0_24, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestamps",1351,G__MedToRootDictionary_655_0_25, 114, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimestamps",1351,G__MedToRootDictionary_655_0_26, 114, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEbisT1AndSuperCycleModule",2720,G__MedToRootDictionary_655_0_27, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScalerData",980,G__MedToRootDictionary_655_0_28, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaler",890,G__MedToRootDictionary_655_0_29, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_SISScaler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDgfScaler",1163,G__MedToRootDictionary_655_0_30, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_DgfScaler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBraggChamber",1461,G__MedToRootDictionary_655_0_31, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_BraggChamber), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Statistics",1067,G__MedToRootDictionary_655_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CorrectMesytecAdcTimestamps",2779,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_655_0_34, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&UnpackedEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_655_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UnpackedEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_655_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&UnpackedEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_655_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&UnpackedEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_655_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_655_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UnpackedEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_655_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UnpackedEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_655_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UnpackedEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_655_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UnpackedEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("UnpackedEvent", 1325, G__MedToRootDictionary_655_0_46, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent), -1, 0, 1, 1, 1, 0, "u 'UnpackedEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UnpackedEvent", 1451, G__MedToRootDictionary_655_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_655_0_48, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_UnpackedEvent), -1, 1, 1, 1, 1, 0, "u 'UnpackedEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventBuilder(void) {
   /* EventBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder));
   G__memfunc_setup("EventBuilder",1225,G__MedToRootDictionary_668_0_1, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventBuilder",1225,G__MedToRootDictionary_668_0_2, 105, G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder), -1, 0, 1, 1, 1, 0, "U 'GlobalSettings' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,G__MedToRootDictionary_668_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U '_MBSDataIO' 'MBSDataIO' 10 - mbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,G__MedToRootDictionary_668_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finish",609,G__MedToRootDictionary_668_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Statistics",1067,G__MedToRootDictionary_668_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MedToRootDictionary_668_0_7, 85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MedToRootDictionary_668_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MedToRootDictionary_668_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MedToRootDictionary_668_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MedToRootDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MedToRootDictionary_668_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MedToRootDictionary_668_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MedToRootDictionary_668_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MedToRootDictionary_668_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MedToRootDictionary_668_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventBuilder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventBuilder", 1225, G__MedToRootDictionary_668_0_19, (int) ('i'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder), -1, 0, 1, 1, 1, 0, "u 'EventBuilder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventBuilder", 1351, G__MedToRootDictionary_668_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MedToRootDictionary_668_0_21, (int) ('u'), G__get_linked_tagnum(&G__MedToRootDictionaryLN_EventBuilder), -1, 1, 1, 1, 1, 0, "u 'EventBuilder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMedToRootDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMedToRootDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMedToRootDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MedToRootDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR = { "vector<long long,allocator<long long> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_TEnv = { "TEnv" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_GlobalSettings = { "GlobalSettings" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_DgfSubEvent = { "DgfSubEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_AdcSubEvent = { "AdcSubEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_PatternUnitSubEvent = { "PatternUnitSubEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_ScalerSubEvent = { "ScalerSubEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_DgfScalerSubEvent = { "DgfScalerSubEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_BraggChamberSubEvent = { "BraggChamberSubEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_AdcData = { "AdcData" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_DgfData = { "DgfData" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_BuiltEvent = { "BuiltEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEAdcDatacOallocatorlEAdcDatagRsPgR = { "vector<AdcData,allocator<AdcData> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcDatacOallocatorlEAdcDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AdcData,allocator<AdcData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEDgfDatacOallocatorlEDgfDatagRsPgR = { "vector<DgfData,allocator<DgfData> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfDatacOallocatorlEDgfDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DgfData,allocator<DgfData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN__MBSDataIO = { "_MBSDataIO" , 115 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_DgfModule = { "DgfModule" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgR = { "vector<DgfSubEvent,allocator<DgfSubEvent> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DgfSubEvent,allocator<DgfSubEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_AdcModule = { "AdcModule" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgR = { "vector<AdcSubEvent,allocator<AdcSubEvent> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AdcSubEvent,allocator<AdcSubEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_PatternUnit = { "PatternUnit" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgR = { "vector<PatternUnitSubEvent,allocator<PatternUnitSubEvent> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PatternUnitSubEvent,allocator<PatternUnitSubEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_SISScaler = { "SISScaler" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgR = { "vector<ScalerSubEvent,allocator<ScalerSubEvent> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ScalerSubEvent,allocator<ScalerSubEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_DgfScaler = { "DgfScaler" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgR = { "vector<DgfScalerSubEvent,allocator<DgfScalerSubEvent> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DgfScalerSubEvent,allocator<DgfScalerSubEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_BraggChamber = { "BraggChamber" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgR = { "vector<BraggChamberSubEvent,allocator<BraggChamberSubEvent> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BraggChamberSubEvent,allocator<BraggChamberSubEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_EventBuffer = { "EventBuffer" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEBuiltEventcOallocatorlEBuiltEventgRsPgR = { "vector<BuiltEvent,allocator<BuiltEvent> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBuiltEventcOallocatorlEBuiltEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BuiltEvent,allocator<BuiltEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_UnpackedEvent = { "UnpackedEvent" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEDgfModulecOallocatorlEDgfModulegRsPgR = { "vector<DgfModule,allocator<DgfModule> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfModulecOallocatorlEDgfModulegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DgfModule,allocator<DgfModule> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEAdcModulecOallocatorlEAdcModulegRsPgR = { "vector<AdcModule,allocator<AdcModule> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcModulecOallocatorlEAdcModulegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AdcModule,allocator<AdcModule> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_vectorlEPatternUnitcOallocatorlEPatternUnitgRsPgR = { "vector<PatternUnit,allocator<PatternUnit> >" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitcOallocatorlEPatternUnitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PatternUnit,allocator<PatternUnit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MedToRootDictionaryLN_EventBuilder = { "EventBuilder" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMedToRootDictionary() {
  G__MedToRootDictionaryLN_TClass.tagnum = -1 ;
  G__MedToRootDictionaryLN_TBuffer.tagnum = -1 ;
  G__MedToRootDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__MedToRootDictionaryLN_TObject.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_string.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_TTree.tagnum = -1 ;
  G__MedToRootDictionaryLN_TFile.tagnum = -1 ;
  G__MedToRootDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_TEnv.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_GlobalSettings.tagnum = -1 ;
  G__MedToRootDictionaryLN_DgfSubEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_AdcSubEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_PatternUnitSubEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_ScalerSubEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_DgfScalerSubEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_BraggChamberSubEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_AdcData.tagnum = -1 ;
  G__MedToRootDictionaryLN_DgfData.tagnum = -1 ;
  G__MedToRootDictionaryLN_BuiltEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEAdcDatacOallocatorlEAdcDatagRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcDatacOallocatorlEAdcDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEDgfDatacOallocatorlEDgfDatagRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfDatacOallocatorlEDgfDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN__MBSDataIO.tagnum = -1 ;
  G__MedToRootDictionaryLN_DgfModule.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_AdcModule.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_PatternUnit.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_SISScaler.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_DgfScaler.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_BraggChamber.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_EventBuffer.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEBuiltEventcOallocatorlEBuiltEventgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBuiltEventcOallocatorlEBuiltEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_UnpackedEvent.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEDgfModulecOallocatorlEDgfModulegRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfModulecOallocatorlEDgfModulegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEAdcModulecOallocatorlEAdcModulegRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcModulecOallocatorlEAdcModulegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_vectorlEPatternUnitcOallocatorlEPatternUnitgRsPgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitcOallocatorlEPatternUnitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MedToRootDictionaryLN_EventBuilder.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMedToRootDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_string);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_TTree);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_TFile);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_TEnv);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_GlobalSettings),sizeof(GlobalSettings),-1,324864,(char*)NULL,G__setup_memvarGlobalSettings,G__setup_memfuncGlobalSettings);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_DgfSubEvent),sizeof(DgfSubEvent),-1,292096,(char*)NULL,G__setup_memvarDgfSubEvent,G__setup_memfuncDgfSubEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_AdcSubEvent),sizeof(AdcSubEvent),-1,292096,(char*)NULL,G__setup_memvarAdcSubEvent,G__setup_memfuncAdcSubEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_PatternUnitSubEvent),sizeof(PatternUnitSubEvent),-1,292096,(char*)NULL,G__setup_memvarPatternUnitSubEvent,G__setup_memfuncPatternUnitSubEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_ScalerSubEvent),sizeof(ScalerSubEvent),-1,292096,(char*)NULL,G__setup_memvarScalerSubEvent,G__setup_memfuncScalerSubEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_DgfScalerSubEvent),sizeof(DgfScalerSubEvent),-1,324864,(char*)NULL,G__setup_memvarDgfScalerSubEvent,G__setup_memfuncDgfScalerSubEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_BraggChamberSubEvent),sizeof(BraggChamberSubEvent),-1,292096,(char*)NULL,G__setup_memvarBraggChamberSubEvent,G__setup_memfuncBraggChamberSubEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_AdcData),sizeof(AdcData),-1,324864,(char*)NULL,G__setup_memvarAdcData,G__setup_memfuncAdcData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_DgfData),sizeof(DgfData),-1,324864,(char*)NULL,G__setup_memvarDgfData,G__setup_memfuncDgfData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_BuiltEvent),sizeof(BuiltEvent),-1,324864,(char*)NULL,G__setup_memvarBuiltEvent,G__setup_memfuncBuiltEvent);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEAdcDatacOallocatorlEAdcDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcDatacOallocatorlEAdcDatagRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEDgfDatacOallocatorlEDgfDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfDatacOallocatorlEDgfDatagRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN__MBSDataIO);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_DgfModule),sizeof(DgfModule),-1,292096,(char*)NULL,G__setup_memvarDgfModule,G__setup_memfuncDgfModule);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfSubEventcOallocatorlEDgfSubEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_AdcModule),sizeof(AdcModule),-1,292096,(char*)NULL,G__setup_memvarAdcModule,G__setup_memfuncAdcModule);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcSubEventcOallocatorlEAdcSubEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_PatternUnit),sizeof(PatternUnit),-1,292096,(char*)NULL,G__setup_memvarPatternUnit,G__setup_memfuncPatternUnit);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitSubEventcOallocatorlEPatternUnitSubEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_SISScaler),sizeof(SISScaler),-1,292096,(char*)NULL,G__setup_memvarSISScaler,G__setup_memfuncSISScaler);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEScalerSubEventcOallocatorlEScalerSubEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_DgfScaler),sizeof(DgfScaler),-1,292096,(char*)NULL,G__setup_memvarDgfScaler,G__setup_memfuncDgfScaler);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfScalerSubEventcOallocatorlEDgfScalerSubEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_BraggChamber),sizeof(BraggChamber),-1,292096,(char*)NULL,G__setup_memvarBraggChamber,G__setup_memfuncBraggChamber);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBraggChamberSubEventcOallocatorlEBraggChamberSubEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_EventBuffer),sizeof(EventBuffer),-1,324864,(char*)NULL,G__setup_memvarEventBuffer,G__setup_memfuncEventBuffer);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEBuiltEventcOallocatorlEBuiltEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEBuiltEventcOallocatorlEBuiltEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_UnpackedEvent),sizeof(UnpackedEvent),-1,324864,(char*)NULL,G__setup_memvarUnpackedEvent,G__setup_memfuncUnpackedEvent);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEDgfModulecOallocatorlEDgfModulegRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEDgfModulecOallocatorlEDgfModulegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEAdcModulecOallocatorlEAdcModulegRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEAdcModulecOallocatorlEAdcModulegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_vectorlEPatternUnitcOallocatorlEPatternUnitgRsPgR);
   G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_reverse_iteratorlEvectorlEPatternUnitcOallocatorlEPatternUnitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MedToRootDictionaryLN_EventBuilder),sizeof(EventBuilder),-1,324864,(char*)NULL,G__setup_memvarEventBuilder,G__setup_memfuncEventBuilder);
}
extern "C" void G__cpp_setupMedToRootDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupMedToRootDictionary()");
  G__set_cpp_environmentMedToRootDictionary();
  G__cpp_setup_tagtableMedToRootDictionary();

  G__cpp_setup_inheritanceMedToRootDictionary();

  G__cpp_setup_typetableMedToRootDictionary();

  G__cpp_setup_memvarMedToRootDictionary();

  G__cpp_setup_memfuncMedToRootDictionary();
  G__cpp_setup_globalMedToRootDictionary();
  G__cpp_setup_funcMedToRootDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMedToRootDictionary();
  return;
}
class G__cpp_setup_initMedToRootDictionary {
  public:
    G__cpp_setup_initMedToRootDictionary() { G__add_setup_func("MedToRootDictionary",(G__incsetup)(&G__cpp_setupMedToRootDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMedToRootDictionary() { G__remove_setup_func("MedToRootDictionary"); }
};
G__cpp_setup_initMedToRootDictionary G__cpp_setup_initializerMedToRootDictionary;

